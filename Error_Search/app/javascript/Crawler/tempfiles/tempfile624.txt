Java Programming Language - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Table of ContentsBasicsJava Programming LanguageIntroduction to JavaSetting up the environment in JavaJava Basic SyntaxJava Hello World ProgramCommand Line arguments in JavaHow JVM Works – JVM Architecture?Differences between JDK, JRE and JVMJava IdentifiersData types in JavaVariables in JavaComments in JavaOperators in JavaWays to read input from console in JavaFlow ControlDecision Making in Java (if, if-else, switch, break, continue, jump)Loops in JavaJava For loop with ExamplesFor-each loop in JavaJava while loop with ExamplesSwitch Statement in JavaContinue Statement in JavaBreak statement in JavaStringsStrings in JavaString class in Java | Set 1StringBuffer class in JavaStringBuilder Class in Java with ExamplesArraysArrays in JavaMultidimensional Arrays in JavaJagged Array in JavaArray Copy in JavaHow to convert an Array to String in Java?How to compare two arrays in Java?MethodsMethods in JavaParameter Passing Techniques in Java with ExamplesReturning Multiple values in JavaDifferent ways of Method Overloading in JavaScope of Variables In JavaConstructorsConstructors in JavaCopy Constructor in JavaConstructor Overloading in JavaConstructor Chaining In Java with ExamplesPrivate Constructors and Singleton Classes in JavaOOP ConceptsClasses and Objects in JavaInheritance in JavaEncapsulation in JavaPolymorphism in JavaAbstraction in JavaOverriding in JavaOverloading in JavaException HandlingExceptions in JavaTypes of Exception in Java with ExamplesChecked vs Unchecked Exceptions in Javathrow and throws in JavaUser-defined Custom Exception in JavaInterfaces & Abstract ClassesInterfaces in JavaNested Interface in JavaMarker interface in JavaAbstract Classes in JavaDifference between Abstract Class and Interface in JavaFunctional Interfaces in JavaComparator Interface in Java with ExamplesCollectionsCollections in JavaCollections Class in JavaCollection vs Collections in Java with ExampleJava | Implementing Iterator and Iterable InterfaceList Interface in Java with ExamplesArrayList in JavaVector Class in JavaStack Class in JavaLinkedList in JavaQueue Interface In JavaPriorityQueue in JavaDeque interface in Java with ExampleArrayDeque in JavaSet in JavaHashSet in JavaLinkedHashSet in Java with ExamplesSortedSet Interface in Java with ExamplesNavigableSet in Java with ExamplesTreeSet in JavaMap Interface in JavaHashMap in Java with ExamplesHashtable in JavaLinkedHashMap in JavaSortedMap Interface in Java with ExamplesTreeMap in JavaMultithreadingMultithreading in JavaLifecycle and States of a Thread in JavaMain thread in JavaJava Thread Priority in MultithreadingSynchronization in JavaFile HandlingFile Handling in Java with CRUD operationsJava.io.InputStream Class in JavaJava.io.OutputStream class in JavaJava.io.File Class in JavaFile Permissions in JavaCopying file using FileStreams in JavaDelete a file using JavaTable of ContentsBasicsJava Programming LanguageIntroduction to JavaSetting up the environment in JavaJava Basic SyntaxJava Hello World ProgramCommand Line arguments in JavaHow JVM Works – JVM Architecture?Differences between JDK, JRE and JVMJava IdentifiersData types in JavaVariables in JavaComments in JavaOperators in JavaWays to read input from console in JavaFlow ControlDecision Making in Java (if, if-else, switch, break, continue, jump)Loops in JavaJava For loop with ExamplesFor-each loop in JavaJava while loop with ExamplesSwitch Statement in JavaContinue Statement in JavaBreak statement in JavaStringsStrings in JavaString class in Java | Set 1StringBuffer class in JavaStringBuilder Class in Java with ExamplesArraysArrays in JavaMultidimensional Arrays in JavaJagged Array in JavaArray Copy in JavaHow to convert an Array to String in Java?How to compare two arrays in Java?MethodsMethods in JavaParameter Passing Techniques in Java with ExamplesReturning Multiple values in JavaDifferent ways of Method Overloading in JavaScope of Variables In JavaConstructorsConstructors in JavaCopy Constructor in JavaConstructor Overloading in JavaConstructor Chaining In Java with ExamplesPrivate Constructors and Singleton Classes in JavaOOP ConceptsClasses and Objects in JavaInheritance in JavaEncapsulation in JavaPolymorphism in JavaAbstraction in JavaOverriding in JavaOverloading in JavaException HandlingExceptions in JavaTypes of Exception in Java with ExamplesChecked vs Unchecked Exceptions in Javathrow and throws in JavaUser-defined Custom Exception in JavaInterfaces & Abstract ClassesInterfaces in JavaNested Interface in JavaMarker interface in JavaAbstract Classes in JavaDifference between Abstract Class and Interface in JavaFunctional Interfaces in JavaComparator Interface in Java with ExamplesCollectionsCollections in JavaCollections Class in JavaCollection vs Collections in Java with ExampleJava | Implementing Iterator and Iterable InterfaceList Interface in Java with ExamplesArrayList in JavaVector Class in JavaStack Class in JavaLinkedList in JavaQueue Interface In JavaPriorityQueue in JavaDeque interface in Java with ExampleArrayDeque in JavaSet in JavaHashSet in JavaLinkedHashSet in Java with ExamplesSortedSet Interface in Java with ExamplesNavigableSet in Java with ExamplesTreeSet in JavaMap Interface in JavaHashMap in Java with ExamplesHashtable in JavaLinkedHashMap in JavaSortedMap Interface in Java with ExamplesTreeMap in JavaMultithreadingMultithreading in JavaLifecycle and States of a Thread in JavaMain thread in JavaJava Thread Priority in MultithreadingSynchronization in JavaFile HandlingFile Handling in Java with CRUD operationsJava.io.InputStream Class in JavaJava.io.OutputStream class in JavaJava.io.File Class in JavaFile Permissions in JavaCopying file using FileStreams in JavaDelete a file using JavaJava Programming LanguageLast Updated : 16 Nov, 2021Java is one of the most popular and widely used programming languages.Java has been one of the most popular programming languages for many years.Java is Object Oriented. However, it is not considered as pure object-oriented as it provides support for primitive data types (like int, char, etc)The Java codes are first compiled into byte code (machine-independent code). Then the byte code runs on Java Virtual Machine (JVM) regardless of the underlying architecture.Java syntax is similar to C/C++. But Java does not provide low-level programming functionalities like pointers. Also, Java codes are always written in the form of classes and objects.Java is used in all kinds of applications like Mobile Applications (Android is Java-based), desktop applications, web applications, client-server applications, enterprise applications, and many more.When compared with C++, Java codes are generally more maintainable because Java does not allow many things which may lead to bad/inefficient programming if used incorrectly. For example, non-primitives are always references in Java. So we cannot pass large objects (like we can do in C++) to functions, we always pass references in Java. One more example, since there are no pointers, bad memory access is also not possible.When compared with Python, Java kind of fits between C++ and Python. The programs are written in Java typically run faster than corresponding Python programs and slower than C++. Like C++, Java does static type checking, but Python does not.Simple Hello World Program :// A Java program to print "Hello World" public class GFG { public static void main(String args[]) { System.out.println("Hello World"); } } Output:Hello WorldRecent Articles on JavaJava Programs – Basics to AdvancedOverview, Basics, Input/Output, Flow Control, Operators, Strings, Arrays, OOPs Concepts, Inheritance, Abstraction, Encapsulation, Polymorphism, Constructors, Methods, Interfaces, Wrapper Classes, Keywords, Access Modifiers, Memory Allocation, Classes, Packages, Collection Framework, List, Queue, Map, Set, Exception Handling, Multithreading, Synchronization, File Handling, Regex, Java IO, Networking, Java 8 Features, Date & Time, JDBC, Miscellaneous, Interview QuestionsOverview of JavaIntroduction to JavaHistory of JavaJava vs C++ PythonHow to Download and Install Java?Setting Up the Environment in JavaHow to Download and Install Eclipse on Windows?Java Development Kit (JDK) in JavaJVM and its architectureDifferences between JDK, JRE, and JVMJust In Time CompilerDifference Between JIT and JVMDifference Between Byte Code and Machine CodeHow is the Java platform independent?Basics of JavaJava Basic SyntaxFirst Java Program (Hello World)Datatypes in JavaDifference between Primitive and Non-Primitive DatatypesJava IdentifiersOperators in JavaJava VariablesScope of VariablesWrapper Classes in JavaInput/Output in JavaHow to take Input from users in JavaScanner class in JavaBufferedReader class in JavaScanner vs BufferedReader in JavaWays to Read Input from Console in JavaPrint Output in JavaDifference between print() and println() in JavaFormatted Outputs in JavaFast Input-Output for Competitive Programming in JavaFlow Control in JavaDecision making in JavaIf Statement in JavaIf-Else Statement in javaIf-Else-If ladder in JavaLoops in JavaFor loopWhile LoopDo while loopFor each loopContinue Statement in javaBreak Statement In JavaUsage of Break in JavaReturn Statement in JavaOperators in JavaArithmetic OperatorUnary OperatorAssignment OperatorRelational OperatorLogical OperatorTernary OperatorBitwise OperatorStrings in JavaIntroduction of Strings in JavaString class in Java Set-1 | Set-2Why strings are immutable in Java?StringBuffer class in JavaStringBuilder class in JavaStrings vs StringBuffer vs StringBuilder in JavaStringTokenizer class in Java Set-1 | Set-2StringJoiner in JavaJava String ProgramsArrays in JavaIntroduction to Arrays in JavaArrays class in JavaMulti-Dimensional Array in JavaHow to declare and initialize 2D arrays in JavaJagged array in JavaFinal Arrays in JavaReflect Arrays in JavaDifference between util.Arrays and reflect.ArraysJava Array ProgramsOOPS in JavaOOPS Concept in JavaWhy Java is not a purely Object-Oriented Language?Classes and ObjectsNaming Convention in JavaMethods in JavaAccess Modifiers in JavaConstructors in JavaFour pillars of OOPS in JavaInheritance in JavaAbstraction in JavaEncapsulation in JavaPolymorphism in JavaInterfaces in JavaThis reference in JavaInheritance in JavaIntroduction to Inheritance in JavaInheritance and ConstructorsMultiple Inheritance in JavaInterfaces and InheritanceDifference between Inheritance in C++ and JavaAbstraction in JavaIntroduction to Abstraction in JavaAbstract Keyword in JavaAbstract classes in JavaAbstract class vs Interface in JavaControl Abstraction in JavaDifference between Data Hiding and AbstractionEncapsulation in JavaIntroduction to Encapsulation in JavaDifference between Encapsulation and AbstractionPolymorphism in JavaIntroduction to Polymorphism in JavaDifference between Inheritance and PolymorphismRuntime Polymorphism in JavaCompile-Time vs Runtime PolymorphismConstructors in JavaIntroduction to Constructors in JavaCopy Constructor in JavaConstructor OverloadingConstructor ChainingPrivate Constructors and Singleton ClassMethods in JavaIntroduction to methods in JavaDifferent method calls in JavaDifference between Static methods and Instance methods in JavaAbstract methods in JavaMethod Overriding in JavaMethod Overloading in JavaMethod Overloading Vs Method OverridingInterfaces in JavaJava InterfacesInterfaces and Inheritance in JavaDifference between Interface and Class in JavaFunctional InterfaceNested InterfaceMarker InterfaceComparator InterfaceWrapper Classes in JavaNeed of Wrapper classes in JavaHow to create instances of Wrapper classesCharacter class in JavaByte class in JavaShort class in JavaInteger class in JavaLong class in JavaFloat class in JavaDouble class in JavaBoolean class in JavaAutoboxing and UnboxingType Conversion in JavaKeywords in JavaList of all Java KeywordsImportant Keywords in JavaSuper KeywordFinal KeywordAbstract keywordStatic KeywordThis KeywordEnum Keyword in JavaTransient keyword in javaVolatile keyword in javaFinal, Finally, and Finalize in JavaAccess Modifiers in JavaIntroduction to Access Modifiers in JavaPublic vs Protected vs Package vs Private Access Modifier in JavaAccess Modifiers Vs Non-Access Modifiers in JavaMemory Allocation in JavaJava Memory ManagementHow are Java objects stored in memoryStack vs Heap memory allocationTypes of memory areas allocated by JVMGarbage Collection in JavaHeap and Stack memory allocationTypes of JVM Garbage Collectors in JavaMemory leaks in JavaJava Virtual Machine(JVM) Stack AreaClasses of JavaClasses and ObjectsUnderstanding classes and objects in JavaClass vs interfaceSingleton class in javaObject class in javaInner class in javaAbstract classes in javaThrowable class in javaPackages in JavaJava PackagesHow to create a package in Javajava.util packagejava.lang packagejava.io packageCollection FrameworkJava Collection FrameworkCollections class in JavaCollection Interface in JavaHow to learn Java collectionsList Interface in JavaQueue Interface in JavaMap Interface in JavaSet in JavaIterator in JavaComparator in JavaDifference between Comparator and Comparable in JavaListArrayList in JavaVector class in JavaStack class in JavaLinkedList in JavaAbstractListAbstractSequentialListCopyOnWriteArrayListCustom ArrayList in JavaQueueAbstractQueueArrayBlockingQueueConcurrentLinkedQueueLinkedBlockingQueueLinkedTransferQueuePriorityBlockingQueueDeque in JavaArrayDequeConcurrent LinkedDequeLinkedBlocking DequePriority Queue in JavaMapEnumMapHashMapWorking of HashMapTraverse through a HashMap in JavaWeakHashMapLinkedHashMapIdentityHashMapConcurrentHashMapDictionaryHashTableSortedMapTreeMapStackVectorSetAbstractSetEnumSetHashSetTreeSetSortedSetLinkedHashSetNavigableSetConcurrentSkipListSetCopyOnWriteArraySetException Handling in JavaExceptions in javaTypes of ExceptionsDifference between Checked and Unchecked ExceptionsTry, Catch, Finally, throw, and throwsFlow control in Try catch blockThrow vs ThrowsFinal vs Finally vs FinalizeUser-defined custom exceptionChained ExceptionsNull pointer ExceptionsException handling with method OverridingMultithreading in JavaIntroduction to Multithreading in JavaLifecycle and Stages of a ThreadThread Priority in JavaMain Thread in JavaThread classRunnable interfaceHow to name a threadstart() method in threadDifference between run() and start() Methodsleep() methodDaemon threadThread Pool in JavaThread Group in JavaThread Safety in JavaShutdownHookMultithreading TutorialSynchronization in JavaJava SynchronizationImportance of Thread synchronization in JavaMethod and Block Synchronization in JavaLocal frameworks vs thread synchronizationDifference between Atomic, Volatile, and Synchronized in JavaDeadlock in MultithreadingDeadlock Prevention and AvoidanceDifference between Lock and Monitor in ConcurrencyReentrant LockFile Handling in JavaFile Class in javaHow to create files in javaHow to read files in javaHow to write on files in javaHow to delete a file in javaFile PermissionsFileReaderFile WriterFileDescriptor classRandomAccessFile classJava RegexIntroduction to Java RegexHow to write Regex expressionsMatcher classPattern classQuantifiersCharacter classJava IOIntroduction to Java IOReader ClassWriter ClassFileInput streamFile Output streamBufferedReader Input StreamBufferedReader Output streamBufferedReader vs ScannerFast I/O in JavaJava NetworkingIntroduction to Java NetworkingTCP architectureUDP architectureIPV4 vs IPV6Connection-oriented vs connectionless protocolsSocket programming in JavaServer Socket classURL class and methodsJava SE 8 FeaturesLambda ExpressionsStreams APINew Date/Time APIDefault MethodsFunctional InterfacesMethod referencesOptional classStream FilterType AnnotationsString JoinerJava Date & TimeDate Class in JavaMethods of the Date classJava Current Date and timeCompare dates in JavaJava JDBCIntroduction to Java JDBCJDBC DriverJDBC ConnectionTypes of Statements in JDBCJDBC TutorialJava MiscellaneousIntroduction to Reflection APIJava IO TutorialJavaFX TutorialJava RMIHow to Run Java RMI application?Java 17 New FeaturesInterview Questions on JavaCommonly Asked Java Interview Questions Set – 1 | Set – 2Interview Questions For Java Professionals10 Most Asked Questions on JavaJava Multiple Choice QuestionsGeeksforGeeks Courses:1. Language Foundation Courses [C++ / JAVA / Python ]Learn any programming language from scratch and understand all its fundamentals concepts for a strong programming foundation in the easiest possible manner with help of GeeksforGeeks Language Foundation Courses – Java Foundation | Python Foundation | C++ Foundation2. DSA Live For Working ProfessionalsGet interview-centric live online classes on Data Structure and Algorithms from any geographical location to learn and master DSA concepts for enhancing your problem-solving & programming skills and to crack the interview of any product-based company – DSA Live For Working Professionals3. Complete Interview PreparationGet fulfilled all your interview preparation needs at a single place with the Complete Interview Preparation Course that provides you all the required stuff to prepare for any product-based, service-based, or start-up company at the most affordable prices.4. DSA Self PacedStart learning Data Structures and Algorithms to prepare for the interviews of top IT giants like Microsoft, Amazon, Adobe, etc. with DSA Self-Paced Course where you will get to learn and master DSA from basic to advanced level and that too at your own pace and convenience.5. Company Specific Courses – Amazon, Microsoft, TCS & WiproCrack the interview of any product-based giant company by specifically preparing with the questions that these companies usually ask in their coding interview round. Refer GeeksforGeeks Company Specific Courses: Amazon SDE Test Series, etc.My Personal Notes arrow_drop_upSaveWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsData Structures & Algorithms- Self Paced CourseView DetailsMost Popular ArticlesMust Do Coding Questions for Product Based CompaniesProgram to implement Singly Linked List in C++ using classDifference between One-way Binding and Two-way BindingTop Linux Distros to Consider in 2021Spring @Autowired AnnotationMost Visited ArticlesJava - JPA vs HibernateHow to Make Dark Mode for Websites using HTML CSS & JavaScript ?How to set Bootstrap Timepicker using datetimepicker library ?How To Pass and Parse Linux Bash Script Arguments and ParametersFilter data by multiple conditions in R using Dplyr× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register