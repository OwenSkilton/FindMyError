Java.util Package in Java - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Table of ContentsWrite an ArticleWrite ArticlesPick Topics to writeGuidelines to WriteGet Technical Writing InternshipWrite an Interview ExperienceCC++JavaPythonMachine LearningInterview PreparationInterview Preparation For Software DevelopersMust Coding Questions - Company-wiseMust Do Coding Questions - Topic-wiseCompany-wise Practice ProblemsCompany PreparationCompetitive ProgrammingSoftware Design-PatternsCompany-wise Interview ExperienceExperienced - Interview ExperiencesInternship - Interview ExperiencesPractice @GeeksforgeeksLeaderboard !!Topic-wise PracticeSubjective ProblemsDifficulty Level - SchoolDifficulty Level - BasicDifficulty Level - EasyDifficulty Level - MediumDifficulty Level - HardExplore More...AlgorithmsAnalysis of AlgorithmsSearching AlgorithmsSorting AlgorithmsPattern SearchingGeometric AlgorithmsMathematical AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide & ConquerBacktrackingBranch & BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvance Data StructuresMatrixStringAll Data StructuresProgramming LanguagesCC++JavaPythonC#Go LangSQLPHPScalaPerlKotlinWeb TechnologiesHTMLCSSBootstrapJavaScriptJqueryReactJSNodeJSAngularJSDjango FrameworkTutorial LibraryPython TutorialDjango TutorialPandas TutorialKivy TutorialTkinter TutorialOpenCV TutorialSelenium TutorialComputer Science SubjectsEngineering MathematicsOperating SystemsDBMSComputer NetworkComputer Organization & ArchitectureTOCCompiler DesignDigital Elec. & Logic DesignSoftware EngineeringGATE 2021GATE CS NotesGate CornerPrevious Year GATE PapersLast Minute Notes (LMNs)Important Topic - GATE 2021GATE 2021 CourseUGC NET / ISROUGC NET Notes - Paper IIUGC NET Notes - Paper IIIUGC NET Solved PapersISRO CS Solved PapersISRO Official KeysISRO CSE SyllabusQUIZ SectionC QuizC++ QuizJava QuizPython QuizData Structures QuizAlgorithms QuizAptitude QuizTopic-wise MCQsPuzzlesGeeksforGeeks InitiativesCampus Ambassador ProgramGeek Of The MonthGeek On The TOPCampus Geek Of The MonthTechnical Scripter EventComputer Science ProjectsTable of ContentsWrite an ArticleWrite ArticlesPick Topics to writeGuidelines to WriteGet Technical Writing InternshipWrite an Interview ExperienceCC++JavaPythonMachine LearningInterview PreparationInterview Preparation For Software DevelopersMust Coding Questions - Company-wiseMust Do Coding Questions - Topic-wiseCompany-wise Practice ProblemsCompany PreparationCompetitive ProgrammingSoftware Design-PatternsCompany-wise Interview ExperienceExperienced - Interview ExperiencesInternship - Interview ExperiencesPractice @GeeksforgeeksLeaderboard !!Topic-wise PracticeSubjective ProblemsDifficulty Level - SchoolDifficulty Level - BasicDifficulty Level - EasyDifficulty Level - MediumDifficulty Level - HardExplore More...AlgorithmsAnalysis of AlgorithmsSearching AlgorithmsSorting AlgorithmsPattern SearchingGeometric AlgorithmsMathematical AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide & ConquerBacktrackingBranch & BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvance Data StructuresMatrixStringAll Data StructuresProgramming LanguagesCC++JavaPythonC#Go LangSQLPHPScalaPerlKotlinWeb TechnologiesHTMLCSSBootstrapJavaScriptJqueryReactJSNodeJSAngularJSDjango FrameworkTutorial LibraryPython TutorialDjango TutorialPandas TutorialKivy TutorialTkinter TutorialOpenCV TutorialSelenium TutorialComputer Science SubjectsEngineering MathematicsOperating SystemsDBMSComputer NetworkComputer Organization & ArchitectureTOCCompiler DesignDigital Elec. & Logic DesignSoftware EngineeringGATE 2021GATE CS NotesGate CornerPrevious Year GATE PapersLast Minute Notes (LMNs)Important Topic - GATE 2021GATE 2021 CourseUGC NET / ISROUGC NET Notes - Paper IIUGC NET Notes - Paper IIIUGC NET Solved PapersISRO CS Solved PapersISRO Official KeysISRO CSE SyllabusQUIZ SectionC QuizC++ QuizJava QuizPython QuizData Structures QuizAlgorithms QuizAptitude QuizTopic-wise MCQsPuzzlesGeeksforGeeks InitiativesCampus Ambassador ProgramGeek Of The MonthGeek On The TOPCampus Geek Of The MonthTechnical Scripter EventComputer Science ProjectsJava.util Package in JavaLast Updated : 17 Jun, 2017Java.util PackageIt contains the collections framework, legacy collection classes, event model, date and time facilities, internationalization, and miscellaneous utility classes (a string tokenizer, a random-number generator, and a bit array).Following are the Important Classes in Java.util package :AbstractCollection: This class provides a skeletal implementation of the Collection interface, to minimize the effort required to implement this interface.AbstractList: This class provides a skeletal implementation of the List interface to minimize the effort required to implement this interface backed by a “random access” data store (such as an array).AbstractMap<K,V>: This class provides a skeletal implementation of the Map interface, to minimize the effort required to implement this interface.AbstractMap.SimpleEntry<K,V>: An Entry maintaining a key and a value.AbstractMap.SimpleImmutableEntry<K,V>: An Entry maintaining an immutable key and value.AbstractQueue: This class provides skeletal implementations of some Queue operations.AbstractSequentialList: This class provides a skeletal implementation of the List interface to minimize the effort required to implement this interface backed by a “sequential access” data store (such as a linked list).AbstractSet: This class provides a skeletal implementation of the Set interface to minimize the effort required to implement this interface.ArrayDeque: Resizable-array implementation of the Deque interface.ArrayList: Resizable-array implementation of the List interface.Arrays: This class contains various methods for manipulating arrays (such as sorting and searching).BitSet: This class implements a vector of bits that grows as needed.Calendar: The Calendar class is an abstract class that provides methods for converting between a specific instant in time and a set of calendar fields such as YEAR, MONTH, DAY_OF_MONTH, HOUR, and so on, and for manipulating the calendar fields, such as getting the date of the next week.Collections: This class consists exclusively of static methods that operate on or return collections.Currency: Represents a currency.Date: The class Date represents a specific instant in time, with millisecond precision.Dictionary<K,V>: The Dictionary class is the abstract parent of any class, such as Hashtable, which maps keys to values.EnumMap,V>: A specialized Map implementation for use with enum type keys.EnumSet: A specialized Set implementation for use with enum types.EventListenerProxy: An abstract wrapper class for an EventListener class which associates a set of additional parameters with the listener.EventObject: The root class from which all event state objects shall be derived.FormattableFlags: FomattableFlags are passed to the Formattable.formatTo() method and modify the output format for Formattables.Formatter: An interpreter for printf-style format strings.GregorianCalendar: GregorianCalendar is a concrete subclass of Calendar and provides the standard calendar system used by most of the world.HashMap<K,V>: Hash table based implementation of the Map interface.HashSet: This class implements the Set interface, backed by a hash table (actually a HashMap instance).Hashtable<K,V>: This class implements a hash table, which maps keys to values.IdentityHashMap<K,V>: This class implements the Map interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values).LinkedHashMap<K,V>: Hash table and linked list implementation of the Map interface, with predictable iteration order.LinkedHashSet: Hash table and linked list implementation of the Set interface, with predictable iteration order.LinkedList: Doubly-linked list implementation of the List and Deque interfaces.ListResourceBundle: ListResourceBundle is an abstract subclass of ResourceBundle that manages resources for a locale in a convenient and easy to use list.Locale – Set 1, Set 2: A Locale object represents a specific geographical, political, or cultural region.Locale.Builder: Builder is used to build instances of Locale from values configured by the setters.Objects: This class consists of static utility methods for operating on objects.Observable: This class represents an observable object, or “data” in the model-view paradigm.PriorityQueue: An unbounded priority queue based on a priority heap.Properties: The Properties class represents a persistent set of properties.PropertyPermission: This class is for property permissions.PropertyResourceBundle: PropertyResourceBundle is a concrete subclass of ResourceBundle that manages resources for a locale using a set of static strings from a property file.Random: An instance of this class is used to generate a stream of pseudorandom numbers.ResourceBundle: Resource bundles contain locale-specific objects.ResourceBundle.Control: ResourceBundle.Control defines a set of callback methods that are invoked by the ResourceBundle.getBundle factory methods during the bundle loading process.Scanner: A simple text scanner which can parse primitive types and strings using regular expressions.ServiceLoader: A simple service-provider loading facility.SimpleTimeZone: SimpleTimeZone is a concrete subclass of TimeZone that represents a time zone for use with a Gregorian calendar.Stack: The Stack class represents a last-in-first-out (LIFO) stack of objects.StringTokenizer: The string tokenizer class allows an application to break a string into tokens.Timer: A facility for threads to schedule tasks for future execution in a background thread.TimerTask: A task that can be scheduled for one-time or repeated execution by a Timer.TimeZone: TimeZone represents a time zone offset, and also figures out daylight savings.TreeMap<K,V>: A Red-Black tree based NavigableMap implementation.TreeSet: A NavigableSet implementation based on a TreeMap.UUID: A class that represents an immutable universally unique identifier (UUID).Vector: The Vector class implements a growable array of objects.WeakHashMap<K,V>: Hash table based implementation of the Map interface, with weak keys.My Personal Notes arrow_drop_upSaveWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsData Structures & Algorithms- Self Paced CourseView DetailsMost Popular ArticlesMust Do Coding Questions for Product Based CompaniesAlgorithm to solve Rubik's CubeTop 50 String Coding Problems for InterviewsHow to Convert DateTime to UNIX Timestamp in Python ?Top 50 Tree Coding Problems for InterviewsMost Visited ArticlesHow to fetch data from an API in ReactJS ?Memory Management in Operating SystemGetter and Setter in JavaWhat is a Storage Device? Definition, Types, ExamplesPython NOT EQUAL operator× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register