Polynomial Time Approximation Scheme - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesTop 50 Array Coding Problems for InterviewsRecursionDifference between BFS and DFSCounting SortA* Search AlgorithmHow to write a Pseudo Code?Playfair Cipher with ExamplesRecursive Practice Problems with SolutionsQuick Sort vs Merge SortComplexity Analysis of Binary SearchConverting Roman Numerals to Decimal lying between 1 to 3999Generate all permutation of a set in PythonData Structures and Algorithms Online Courses : Free and PaidMid-Point Circle Drawing AlgorithmComparison among Bubble Sort, Selection Sort and Insertion SortIntroduction to AlgorithmsDDA Line generation Algorithm in Computer GraphicsDesign a Chess GameCyclomatic ComplexityCommonly Asked Algorithm Interview Questions | Set 1Columnar Transposition CipherDifference Between Symmetric and Asymmetric Key EncryptionArray of Vectors in C++ STLBresenham’s Line Generation AlgorithmLower and Upper Bound TheoryDifference between NP hard and NP complete problemPriority CPU Scheduling with different arrival time - Set 2K means Clustering - IntroductionRail Fence Cipher - Encryption and DecryptionFind maximum meetings in one roomTable of ContentsTop 50 Array Coding Problems for InterviewsRecursionDifference between BFS and DFSCounting SortA* Search AlgorithmHow to write a Pseudo Code?Playfair Cipher with ExamplesRecursive Practice Problems with SolutionsQuick Sort vs Merge SortComplexity Analysis of Binary SearchConverting Roman Numerals to Decimal lying between 1 to 3999Generate all permutation of a set in PythonData Structures and Algorithms Online Courses : Free and PaidMid-Point Circle Drawing AlgorithmComparison among Bubble Sort, Selection Sort and Insertion SortIntroduction to AlgorithmsDDA Line generation Algorithm in Computer GraphicsDesign a Chess GameCyclomatic ComplexityCommonly Asked Algorithm Interview Questions | Set 1Columnar Transposition CipherDifference Between Symmetric and Asymmetric Key EncryptionArray of Vectors in C++ STLBresenham’s Line Generation AlgorithmLower and Upper Bound TheoryDifference between NP hard and NP complete problemPriority CPU Scheduling with different arrival time - Set 2K means Clustering - IntroductionRail Fence Cipher - Encryption and DecryptionFind maximum meetings in one roomImprove Article Save Article Like Article Polynomial Time Approximation SchemeDifficulty Level : ExpertLast Updated : 04 Sep, 2019It is a very well know fact that there is no known polynomial time solution for NP Complete problems and these problems occur a lot in real world (See this, this and this for example). So there must be a way to handle them. We have seen algorithms to these problems which are p approximate (For example 2 approximate for Travelling Salesman). Can we do better?Polynomial Time Approximation Scheme (PTAS) is a type of approximate algorithms that provide user to control over accuracy which is a desirable feature. These algorithms take an additional parameter ε > 0 and provide a solution that is (1 + ε) approximate for minimization and (1 – ε) for maximization. For example consider a minimization problem, if ε is 0.5, then the solution provided by the PTAS algorithm is 1.5 approximate. The running time of PTAS must be polynomial in terms of n, however, it can be exponential in terms of ε.In PTAS algorithms, the exponent of the polynomial can increase dramatically as ε reduces, for example if the runtime is O(n(1/ε)!) which is a problem. There is a stricter scheme, Fully Polynomial Time Approximation Scheme (FPTAS). In FPTAS, algorithm need to polynomial in both the problem size n and 1/ε.Example (0-1 knapsack problem): We know that 0-1 knapsack is NP Complete. There is a DP based pseudo polynomial solution for this. But if input values are high, then the solution becomes infeasible and there is a need of approximate solution. One approximate solution is to use Greedy Approach (compute value per kg for all items and put the highest value per kg first if it is smaller than W), but Greedy approach is not PTAS, so we don’t have control over accuracy.Below is a FPTAS solution for 0-1 Knapsack problem:Input:W (Capacity of Knapsack)val[0..n-1] (Values of Items)wt[0..n-1] (Weights of Items)Find the maximum valued item, i.e., find maximum value in val[]. Let this maximum value be maxVal.Compute adjustment factor k for all values k = (maxVal * ε) / nAdjust all values, i.e., create a new array val'[] that values divided by k. Do following for every value val[i]. val'[i] = floor(val[i] / k)Run DP based solution for reduced values, i,e, val'[0..n-1] and all other parameter same.The above solution works in polynomial time in terms of both n and ε. The solution provided by this FPTAS is (1 – ε) approximate. The idea is to rounds off some of the least significant digits of values then they will be bounded by a polynomial and 1/ε.Example:val[] = {12, 16, 4, 8} wt[] = {3, 4, 5, 2} W = 10 ε = 0.5 maxVal = 16 [maximum value in val[]] Adjustment factor, k = (16 * 0.5)/4 = 2.0 Now we apply DP based solution on below modified instance of problem. val'[] = {6, 8, 2, 4} [ val'[i] = floor(val[i]/k) ] wt[] = {3, 4, 5, 2} W = 10 How is the solution (1 – ε) * OPT?Here OPT is the optimal value. Let S be the set produced by above FPTAS algorithm and total value of S be val(S). We need to show that val(S) >= (1 - ε)*OPT Let O be the set produced by optimal solution (the solution with total value OPT), i.e., val(O) = OPT. val(O) - k*val'(O) <= n*k [Because val'[i] = floor(val[i]/k) ] After the dynamic programming step, we get a set that is optimal for the scaled instanceand therefore must be at least as good as choosing the set O with the smaller profits. From that, we can conclude, val'(S) >= k . val'(O) >= val(O) - nk >= OPT - ε * maxVal >= OPT - ε * OPT [OPT >= maxVal] >= (1 - ε) * OPT Sources:http://math.mit.edu/~goemans/18434S06/knapsack-katherine.pdfhttps://en.wikipedia.org/wiki/Polynomial-time_approximation_schemeThis article is contributed by Dheeraj Gupta. If you like GeeksforGeeks and would like to contribute, you can also write an article and mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed aboveMy Personal Notes arrow_drop_upSave LikePreviousAmazon Interview Experience | Set 247 (For SDE 1)Next Bootstrap DropDowns and Responsive TabsRecommended ArticlesPage :Approximation Algorithms15, Jun 21Maximum removal from array when removal time >= waiting time24, Oct 18Count Fibonacci numbers in given range in O(Log n) time and O(1) space15, Jan 16Generating OTP (One time Password) in PHP10, Oct 18Find maximum in a stack in O(1) time and O(1) extra space24, Oct 18Finding Median of unsorted Array in linear time using C++ STL16, Jun 20Schedule elevator to reduce the total time taken18, Feb 19Count of sub-strings that do not contain all the characters from the set {'a', 'b', 'c'} at the same time27, Mar 19Microsoft Interview experience for full time position of software engineer at Microsoft Ireland Research29, Apr 19Algorithms Sample Questions | Set 3 | Time Order Analysis27, May 19Construct the Rooted tree by using start and finish time of its DFS traversal11, Jun 19Minimum time required to fill the entire matrix with 1's30, Apr 20Real time optimized KMP Algorithm for Pattern Searching22, May 20How is the time complexity of Sieve of Eratosthenes is n*log(log(n))?15, Jan 20Akra-Bazzi method for finding the time complexities02, May 21How to solve time complexity Recurrence Relations using Recursion Tree method?19, Jun 21Priority CPU Scheduling with different arrival time - Set 203, Nov 17Time-Space Trade-Off in Algorithms29, Oct 20Queries of nCr%p in O(1) time complexity10, Jul 18Extended Mo's Algorithm with ≈ O(1) time complexity26, Jun 18Article Contributed By :GeeksforGeeksVote for difficultyCurrent difficulty : ExpertEasy Normal Medium Hard ExpertImproved By :jokic07shubhamagarwal0312Article Tags :AlgorithmsPractice Tags :AlgorithmsReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewDSA Live Classes for Working ProfessionalsView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in AlgorithmsMaximum XOR of Two Numbers in an ArrayDifference between Recursion and IterationUniform-Cost Search (Dijkstra for large Graphs)Boundary Fill AlgorithmK-Nearest NeighboursMore related articles in AlgorithmsBinary Search In JavaScriptWhat are Hash Functions and How to choose a good Hash Function?Most important type of AlgorithmsLine Clipping | Set 1 (Cohen–Sutherland Algorithm)The Two Water Jug Puzzle× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register