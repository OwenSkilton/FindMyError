Scope of Variables In Java - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesBasics of JavaJava TutorialIntroduction to JavaSimilarities and Difference between Java and C++Setting up the environment in JavaJava Basic SyntaxJava Hello World ProgramDifferences between JDK, JRE and JVMHow JVM Works – JVM Architecture?Java IdentifiersVariables & DataTypes in JavaVariables in JavaScope of Variables In JavaData types in JavaOperators in JavaOperators in JavaJava Arithmetic Operators with ExamplesJava Assignment Operators with ExamplesJava Unary Operator with ExamplesJava Relational Operators with ExamplesJava Logical Operators with ExamplesJava Ternary Operator with ExamplesBitwise Operators in JavaPackages in JavaPackages In JavaFlow Control in JavaDecision Making in Java (if, if-else, switch, break, continue, jump)Java if statement with ExamplesJava if-else statement with ExamplesJava if-else-if ladder with ExamplesLoops in JavaLoops in JavaJava For loop with ExamplesJava while loop with ExamplesJava do-while loop with ExamplesFor-each loop in JavaJump Statements in JavaContinue Statement in JavaBreak statement in Javareturn keyword in JavaArrays in JavaArrays in JavaMultidimensional Arrays in JavaJagged Array in JavaStrings in JavaStrings in JavaString class in Java | Set 1StringBuffer class in JavaStringBuilder Class in Java with ExamplesOOPS in JavaObject Oriented Programming (OOPs) Concept in JavaClasses and Objects in JavaMethods in JavaAccess Modifiers in JavaWrapper Classes in JavaNeed of Wrapper Classes in JavaConstructors in JavaConstructors in JavaCopy Constructor in JavaConstructor Chaining In Java with ExamplesPrivate Constructors and Singleton Classes in JavaInheritance & Polymorphism in JavaInheritance in JavaJava and Multiple InheritanceComparison of Inheritance in C++ and JavaPolymorphism in JavaDynamic Method Dispatch or Runtime Polymorphism in JavaMethod overloading & OveridingOverloading in JavaDifferent ways of Method Overloading in JavaOverriding in JavaDifference Between Method Overloading and Method Overriding in JavaAbstraction & EncapsulationAbstraction in JavaAbstract Classes in JavaDifference between Abstract Class and Interface in JavaEncapsulation in JavaInterfaces in JavaInterfaces in JavaNested Interface in JavaMarker interface in JavaFunctional Interfaces in JavaComparator Interface in Java with ExamplesKeywords in JavaList of all Java KeywordsSuper Keyword in Javafinal Keyword in Javaabstract keyword in javastatic Keyword in Java‘this’ reference in Javaenum in JavaException Handling in JavaExceptions in JavaTypes of Exception in Java with ExamplesChecked vs Unchecked Exceptions in JavaTry, catch, throw and throws in JavaFlow control in try catch finally in Javathrow and throws in JavaUser-defined Custom Exception in JavaCollection FrameworkCollections in JavaCollections Class in JavaList Interface in Java with ExamplesArrayList in JavaVector Class in JavaStack Class in JavaLinkedList in JavaQueue Interface In JavaPriorityQueue in JavaDeque interface in Java with ExampleArrayDeque in JavaSet in JavaHashSet in JavaLinkedHashSet in Java with ExamplesSortedSet Interface in Java with ExamplesNavigableSet in Java with ExamplesTreeSet in JavaMap Interface in JavaHashMap in Java with ExamplesHashtable in JavaLinkedHashMap in JavaSortedMap Interface in Java with ExamplesTreeMap in JavaMulti-threading in JavaMultithreading in JavaLifecycle and States of a Thread in JavaMain thread in JavaJava Thread Priority in MultithreadingThread Pools in JavaSynchronization in JavaMethod and Block Synchronization in JavaImportance of Thread Synchronization in JavaThread Safety and how to achieve it in JavaTable of ContentsBasics of JavaJava TutorialIntroduction to JavaSimilarities and Difference between Java and C++Setting up the environment in JavaJava Basic SyntaxJava Hello World ProgramDifferences between JDK, JRE and JVMHow JVM Works – JVM Architecture?Java IdentifiersVariables & DataTypes in JavaVariables in JavaScope of Variables In JavaData types in JavaOperators in JavaOperators in JavaJava Arithmetic Operators with ExamplesJava Assignment Operators with ExamplesJava Unary Operator with ExamplesJava Relational Operators with ExamplesJava Logical Operators with ExamplesJava Ternary Operator with ExamplesBitwise Operators in JavaPackages in JavaPackages In JavaFlow Control in JavaDecision Making in Java (if, if-else, switch, break, continue, jump)Java if statement with ExamplesJava if-else statement with ExamplesJava if-else-if ladder with ExamplesLoops in JavaLoops in JavaJava For loop with ExamplesJava while loop with ExamplesJava do-while loop with ExamplesFor-each loop in JavaJump Statements in JavaContinue Statement in JavaBreak statement in Javareturn keyword in JavaArrays in JavaArrays in JavaMultidimensional Arrays in JavaJagged Array in JavaStrings in JavaStrings in JavaString class in Java | Set 1StringBuffer class in JavaStringBuilder Class in Java with ExamplesOOPS in JavaObject Oriented Programming (OOPs) Concept in JavaClasses and Objects in JavaMethods in JavaAccess Modifiers in JavaWrapper Classes in JavaNeed of Wrapper Classes in JavaConstructors in JavaConstructors in JavaCopy Constructor in JavaConstructor Chaining In Java with ExamplesPrivate Constructors and Singleton Classes in JavaInheritance & Polymorphism in JavaInheritance in JavaJava and Multiple InheritanceComparison of Inheritance in C++ and JavaPolymorphism in JavaDynamic Method Dispatch or Runtime Polymorphism in JavaMethod overloading & OveridingOverloading in JavaDifferent ways of Method Overloading in JavaOverriding in JavaDifference Between Method Overloading and Method Overriding in JavaAbstraction & EncapsulationAbstraction in JavaAbstract Classes in JavaDifference between Abstract Class and Interface in JavaEncapsulation in JavaInterfaces in JavaInterfaces in JavaNested Interface in JavaMarker interface in JavaFunctional Interfaces in JavaComparator Interface in Java with ExamplesKeywords in JavaList of all Java KeywordsSuper Keyword in Javafinal Keyword in Javaabstract keyword in javastatic Keyword in Java‘this’ reference in Javaenum in JavaException Handling in JavaExceptions in JavaTypes of Exception in Java with ExamplesChecked vs Unchecked Exceptions in JavaTry, catch, throw and throws in JavaFlow control in try catch finally in Javathrow and throws in JavaUser-defined Custom Exception in JavaCollection FrameworkCollections in JavaCollections Class in JavaList Interface in Java with ExamplesArrayList in JavaVector Class in JavaStack Class in JavaLinkedList in JavaQueue Interface In JavaPriorityQueue in JavaDeque interface in Java with ExampleArrayDeque in JavaSet in JavaHashSet in JavaLinkedHashSet in Java with ExamplesSortedSet Interface in Java with ExamplesNavigableSet in Java with ExamplesTreeSet in JavaMap Interface in JavaHashMap in Java with ExamplesHashtable in JavaLinkedHashMap in JavaSortedMap Interface in Java with ExamplesTreeMap in JavaMulti-threading in JavaMultithreading in JavaLifecycle and States of a Thread in JavaMain thread in JavaJava Thread Priority in MultithreadingThread Pools in JavaSynchronization in JavaMethod and Block Synchronization in JavaImportance of Thread Synchronization in JavaThread Safety and how to achieve it in JavaImprove Article Save Article Like Article Scope of Variables In JavaDifficulty Level : EasyLast Updated : 28 Jun, 2021Scope of a variable is the part of the program where the variable is accessible. Like C/C++, in Java, all identifiers are lexically (or statically) scoped, i.e.scope of a variable can determined at compile time and independent of function call stack. Java programs are organized in the form of classes. Every class is part of some package. Java scope rules can be covered under following categories. Member Variables (Class Level Scope)These variables must be declared inside class (outside any function). They can be directly accessed anywhere in class. Let’s take a look at an example: public class Test { // All variables defined directly inside a class // are member variables int a; private String b; void method1() {....} int method2() {....} char c; }We can declare class variables anywhere in class, but outside methods.Access specified of member variables doesn’t affect scope of them within a class.Member variables can be accessed outside a class with following rulesModifier Package Subclass World public Yes Yes Yes protected Yes Yes No Default (no modifier) Yes No No private No No NoLocal Variables (Method Level Scope)Variables declared inside a method have method level scope and can’t be accessed outside the method. public class Test { void method1() { // Local variable (Method level scope) int x; } }Note : Local variables don’t exist after method’s execution is over. Here’s another example of method scope, except this time the variable got passed in as a parameter to the method: class Test { private int x; public void setX(int x) { this.x = x; } }The above code uses this keyword to differentiate between the local and class variables.As an exercise, predict the output of following Java program. Javapublic class Test{ static int x = 11; private int y = 33; public void method1(int x) { Test t = new Test(); this.x = 22; y = 44; System.out.println("Test.x: " + Test.x); System.out.println("t.x: " + t.x); System.out.println("t.y: " + t.y); System.out.println("y: " + y); } public static void main(String args[]) { Test t = new Test(); t.method1(5); }}Output: Test.x: 22 t.x: 22 t.y: 33 y: 44Loop Variables (Block Scope) A variable declared inside pair of brackets “{” and “}” in a method has scope within the brackets only.Javapublic class Test{ public static void main(String args[]) { { // The variable x has scope within // brackets int x = 10; System.out.println(x); } // Uncommenting below line would produce // error since variable x is out of scope. // System.out.println(x); }}Output: 10As another example, consider following program with a for loop. Javaclass Test{ public static void main(String args[]) { for (int x = 0; x < 4; x++) { System.out.println(x); } // Will produce error System.out.println(x); }}Output: 11: error: cannot find symbol System.out.println(x); The right way of doing above is, Java// Above program after correcting the errorclass Test{ public static void main(String args[]) { int x; for (x = 0; x < 4; x++) { System.out.println(x); } System.out.println(x); }}Output: 0 1 2 3 4Let’s look at tricky example of loop scope. Predict the output of following program. You may be surprised if you are regular C/C++ programmer. Javaclass Test{ public static void main(String args[]) { int a = 5; for (int a = 0; a < 5; a++) { System.out.println(a); } }}Output :6: error: variable a is already defined in method go(int) for (int a = 0; a < 5; a++) ^ 1 errorNote:- In C++, it will run. But in java it is an error because in java, the name of the variable of inner and outer loop must be different.A similar program in C++ works. See this.As an exercise, predict the output of the following Java program. Javaclass Test{ public static void main(String args[]) { { int x = 5; { int x = 10; System.out.println(x); } } }}Q. From the above knowledge, tell whether the below code will run or not.Javaclass Test { public static void main(String args[]) { for (int i = 1; i <= 10; i++) { System.out.println(i); } int i = 20; System.out.println(i); }}Output : 1 2 3 4 5 6 7 8 9 10 20Yes, it will run! See the program carefully, inner loop will terminate before the outer loop variable is declared.So the inner loop variable is destroyed first and then the new variable of same name has been created.Some Important Points about Variable scope in Java: In general, a set of curly brackets { } defines a scope.In Java we can usually access a variable as long as it was defined within the same set of brackets as the code we are writing or within any curly brackets inside of the curly brackets where the variable was defined.Any variable defined in a class outside of any method can be used by all member methods.When a method has the same local variable as a member, “this” keyword can be used to reference the current class variable.For a variable to be read after the termination of a loop, It must be declared before the body of the loop. This article is contributed by Rishabh Mahrsee. If you like GeeksforGeeks and would like to contribute, you can also write an article and mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above My Personal Notes arrow_drop_upSave LikePreviousVariables in JavaNext Data types in JavaRecommended ArticlesPage :Are static local variables allowed in Java?01, Nov 10final variables in Java02, Nov 10Assigning values to static final variables in Java15, Nov 10Final local variables in Java25, Sep 17Static and non static blank final variables in Java08, Nov 17Using Variables in JShell of Java 915, Apr 18Difference between static and non-static variables in Java03, Apr 19Static Variables in Java with Examples30, Sep 19Atomic Variables in Java with Examples24, Mar 20Understanding storage of static methods and static variables in Java16, May 20Access Super Class Methods and Instance Variables Without super Keyword in Java17, Nov 20Can Two Variables Refer to the Same ArrayList in Java?05, Jan 21Using Static Variables in Java20, Sep 21Variables in Java Do Not Follow Polymorphism and Overriding21, Sep 21Java Program to Check if Two of Three Boolean Variables are True25, Nov 20Variables in Java06, Feb 17Global and Local Variables in Python15, Jul 16Variables and Keywords in C30, Jun 15Python | Set 2 (Variables, Expressions, Conditions and Functions)05, Jan 16How to assign values to variables in Python and other languages19, Nov 18How to Check the Accessibility of the Static and Non-Static Variables by a Static Method?02, Jan 21Variables in Scratch Programming01, Aug 21Swap Two Variables in One Line12, Jan 16Difference Between java.sql.Time, java.sql.Timestamp and java.sql.Date in Java07, Apr 21Article Contributed By :GeeksforGeeksVote for difficultyCurrent difficulty : EasyEasy Normal Medium Hard ExpertImproved By :ShreyasWaghmareAnshulVaidyaiam_chandan17aadarsh baidArticle Tags :JavaSchool ProgrammingPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesReverse a string in JavaHow to iterate any Map in JavaInitialize an ArrayList in JavaMost visited in School ProgrammingPython DictionaryArrays in C/C++Reverse a string in JavaC++ Data TypesInheritance in C++× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register