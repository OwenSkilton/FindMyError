Difference between Abstraction and Encapsulation in Java with Examples - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles â–²Related ArticlesDifference between Abstraction and Encapsulation in Java with ExamplesDifference between Abstraction and Encapsulation in C++Virtual Functions and Runtime Polymorphism in C++ | Set 1 (Introduction)Virtual Function in C++Polymorphism in C++Encapsulation in C++Abstraction in C++Structure vs class in C++Can a C++ class have an object of self type?Why is the Size of an Empty Class Not Zero in C++?Static data members in C++Some interesting facts about static member functions in C++Friend class and function in C++Local Classes in C++Nested Classes in C++Simulating final Class in C++Constructors in C++Copy Constructor in C++Destructors in C++Virtual DestructorPure Virtual Destructor in C++Pure Virtual Functions and Abstract Classes in C++Difference Between == and .equals() Method in JavaDifference between BFS and DFSClass method vs Static method in PythonDifference between Intel and AMDDifferences between Black Box Testing vs White Box TestingStack vs Heap Memory AllocationDifferences between TCP and UDPDifferences between Procedural and Object Oriented ProgrammingTable of ContentsDifference between Abstraction and Encapsulation in Java with ExamplesDifference between Abstraction and Encapsulation in C++Virtual Functions and Runtime Polymorphism in C++ | Set 1 (Introduction)Virtual Function in C++Polymorphism in C++Encapsulation in C++Abstraction in C++Structure vs class in C++Can a C++ class have an object of self type?Why is the Size of an Empty Class Not Zero in C++?Static data members in C++Some interesting facts about static member functions in C++Friend class and function in C++Local Classes in C++Nested Classes in C++Simulating final Class in C++Constructors in C++Copy Constructor in C++Destructors in C++Virtual DestructorPure Virtual Destructor in C++Pure Virtual Functions and Abstract Classes in C++Difference Between == and .equals() Method in JavaDifference between BFS and DFSClass method vs Static method in PythonDifference between Intel and AMDDifferences between Black Box Testing vs White Box TestingStack vs Heap Memory AllocationDifferences between TCP and UDPDifferences between Procedural and Object Oriented ProgrammingImprove Article Save Article Like Article Difference between Abstraction and Encapsulation in Java with ExamplesDifficulty Level : EasyLast Updated : 08 Nov, 2019Encapsulation in JavaEncapsulation is defined as the wrapping up of data under a single unit. It is the mechanism that binds together code and the data it manipulates. Another way to think about encapsulation is, it is a protective shield that prevents the data from being accessed by the code outside this shield.Technically in encapsulation, the variables or data of a class is hidden from any other class and can be accessed only through any member function of own class in which they are declared.As in encapsulation, the data in a class is hidden from other classes, so it is also known as data-hiding.Encapsulation can be achieved by Declaring all the variables in the class as private and writing public methods in the class to set and get the values of variables.// Java program to demonstrate encapsulation public class Encapsulate { // private variables declared // these can only be accessed by // public methods of class private String geekName; private int geekRoll; private int geekAge; // get method for age to access // private variable geekAge public int getAge() { return geekAge; } // get method for name to access // private variable geekName public String getName() { return geekName; } // get method for roll to access // private variable geekRoll public int getRoll() { return geekRoll; } // set method for age to access // private variable geekage public void setAge(int newAge) { geekAge = newAge; } // set method for name to access // private variable geekName public void setName(String newName) { geekName = newName; } // set method for roll to access // private variable geekRoll public void setRoll(int newRoll) { geekRoll = newRoll; }} // Class to access variables// of the class Encapsulateclass TestEncapsulation { public static void main(String[] args) { Encapsulate obj = new Encapsulate(); // setting values of the variables obj.setName("Harsh"); obj.setAge(19); obj.setRoll(51); // Displaying values of the variables System.out.println("Geek's name: " + obj.getName()); System.out.println("Geek's age: " + obj.getAge()); System.out.println("Geek's roll: " + obj.getRoll()); // Direct access of geekRoll is not possible // due to encapsulation // System.out.println("Geek's roll: " + obj.geekName); }}Output:Geek's name: Harsh Geek's age: 19 Geek's roll: 51 Abstraction in JavaData Abstraction is the property by virtue of which only the essential details are displayed to the user. The trivial or the non-essentials units are not displayed to the user. Ex: A car is viewed as a car rather than its individual components.Data Abstraction may also be defined as the process of identifying only the required characteristics of an object ignoring the irrelevant details. The properties and behaviours of an object differentiate it from other objects of similar type and also help in classifying/grouping the objects.// Java program to illustrate the concept of Abstraction abstract class Shape { String color; // these are abstract methods abstract double area(); public abstract String toString(); // abstract class can have a constructor public Shape(String color) { System.out.println("Shape constructor called"); this.color = color; } // this is a concrete method public String getColor() { return color; }}class Circle extends Shape { double radius; public Circle(String color, double radius) { // calling Shape constructor super(color); System.out.println("Circle constructor called"); this.radius = radius; } @Override double area() { return Math.PI * Math.pow(radius, 2); } @Override public String toString() { return "Circle color is " + super.color + "and area is : " + area(); }} class Rectangle extends Shape { double length; double width; public Rectangle(String color, double length, double width) { // calling Shape constructor super(color); System.out.println("Rectangle constructor called"); this.length = length; this.width = width; } @Override double area() { return length * width; } @Override public String toString() { return "Rectangle color is " + super.color + "and area is : " + area(); }} public class Test { public static void main(String[] args) { Shape s1 = new Circle("Red", 2.2); Shape s2 = new Rectangle("Yellow", 2, 4); System.out.println(s1.toString()); System.out.println(s2.toString()); }}Output:Shape constructor called Circle constructor called Shape constructor called Rectangle constructor called Circle color is Redand area is : 15.205308443374602 Rectangle color is Yellowand area is : 8.0 Difference between Abstraction and Encapsulation:AbstractionEncapsulationAbstraction is the process or method of gaining the information.While encapsulation is the process or method to contain the information.In abstraction, problems are solved at the design or interface level.While in encapsulation, problems are solved at the implementation level.Abstraction is the method of hiding the unwanted information.Whereas encapsulation is a method to hide the data in a single entity or unit along with a method to protect information from outside.We can implement abstraction using abstract class and interfaces.Whereas encapsulation can be implemented using by access modifier i.e. private, protected and public.In abstraction, implementation complexities are hidden using abstract classes and interfaces.While in encapsulation, the data is hidden using methods of getters and setters.The objects that help to perform abstraction are encapsulated.Whereas the objects that result in encapsulation need not be abstracted.Attention reader! Donâ€™t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikeNext Difference between Abstraction and Encapsulation in C++Recommended ArticlesPage :Difference between Abstraction and Encapsulation in C++16, Oct 19Understanding Encapsulation, Inheritance, Polymorphism, Abstraction in OOPs20, Jun 20Difference Between Data Hiding and Abstraction in Java15, Oct 20Control Abstraction in Java with Examples03, Mar 21Abstraction by Parameterization and Specification in Java31, Oct 20Abstraction in Java14, Nov 17Encapsulation in Java21, Feb 17Understanding OOPs and Abstraction using Real World Scenario19, May 20Difference Between java.sql.Time, java.sql.Timestamp and java.sql.Date in Java07, Apr 21Difference between an Integer and int in Java with Examples10, Sep 18Difference between Iterator and Enumeration in Java with Examples16, Oct 19Difference between super and super() in Java with Examples05, Nov 19Difference between Java and Kotlin in Android with Examples24, Mar 20Difference between Core Java and Advanced Java31, Dec 19Difference between a Java Application and a Java Applet27, Feb 20Difference between Java IO and Java NIO21, May 20Difference between Java and Core Java30, Jun 20Difference between Argument and Parameter in C/C++ with Examples25, Nov 19Difference between Iterators and Pointers in C/C++ with Examples27, Nov 19Difference between NULL pointer, Null character ('\0') and '0' in C with Examples29, May 20Difference between Struct and Enum in C/C++ with Examples18, Nov 21Difference between cout and puts() in C++ with Examples08, Jul 20Difference between #include<> and #include" " in C/C++ with Examples08, Dec 21Difference and similarities between HashSet, LinkedHashSet and TreeSet in Java02, Jan 19Article Contributed By :Code_r@Code_rVote for difficultyCurrent difficulty : EasyEasy Normal Medium Hard ExpertArticle Tags :Java-Object OrientedDifference BetweenJavaPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsJava FoundationView DetailsComplete Interview PreparationView DetailsMost popular in Difference BetweenDifference between DDL and DML in DBMSWeb 1.0, Web 2.0 and Web 3.0 with their differenceDifference between C and C++Python | Difference Between List and TupleDifferences between JDK, JRE and JVMMost visited in JavaArrays in JavaObject Oriented Programming (OOPs) Concept in JavaSplit() String method in Java with examplesFor-each loop in JavaArrays.sort() in Java with examplesÃ— 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register