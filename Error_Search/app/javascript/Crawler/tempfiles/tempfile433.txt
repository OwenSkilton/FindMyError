Public vs Protected vs Package vs Private Access Modifier in Java - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesDifference Between == and .equals() Method in JavaDifference between BFS and DFSClass method vs Static method in PythonDifference between Intel and AMDDifferences between Black Box Testing vs White Box TestingStack vs Heap Memory AllocationDifferences between TCP and UDPDifferences between Procedural and Object Oriented ProgrammingDifferences between JDK, JRE and JVMDifference between C and C++Difference between Process and ThreadDifference between Structure and Union in CDifference between Hardware and SoftwareDifference between Primary Key and Foreign KeyWeb 1.0, Web 2.0 and Web 3.0 with their differenceDifference between DDL and DML in DBMSStructure vs class in C++Difference between Primary key and Unique keyDifference between 32-bit and 64-bit operating systemsmap vs unordered_map in C++Difference between Clustered and Non-clustered indexPython | Difference Between List and TupleDifference between Multiprogramming, multitasking, multithreading and multiprocessingDifference between Stack and Queue Data StructuresString vs StringBuilder vs StringBuffer in JavaDifference between List and Array in PythonDifferences between IPv4 and IPv6Difference between DFA and NFALogical and Physical Address in Operating SystemDifference between Compile-time and Run-time Polymorphism in JavaTable of ContentsDifference Between == and .equals() Method in JavaDifference between BFS and DFSClass method vs Static method in PythonDifference between Intel and AMDDifferences between Black Box Testing vs White Box TestingStack vs Heap Memory AllocationDifferences between TCP and UDPDifferences between Procedural and Object Oriented ProgrammingDifferences between JDK, JRE and JVMDifference between C and C++Difference between Process and ThreadDifference between Structure and Union in CDifference between Hardware and SoftwareDifference between Primary Key and Foreign KeyWeb 1.0, Web 2.0 and Web 3.0 with their differenceDifference between DDL and DML in DBMSStructure vs class in C++Difference between Primary key and Unique keyDifference between 32-bit and 64-bit operating systemsmap vs unordered_map in C++Difference between Clustered and Non-clustered indexPython | Difference Between List and TupleDifference between Multiprogramming, multitasking, multithreading and multiprocessingDifference between Stack and Queue Data StructuresString vs StringBuilder vs StringBuffer in JavaDifference between List and Array in PythonDifferences between IPv4 and IPv6Difference between DFA and NFALogical and Physical Address in Operating SystemDifference between Compile-time and Run-time Polymorphism in JavaImprove Article Save Article Like Article Public vs Protected vs Package vs Private Access Modifier in JavaLast Updated : 08 Oct, 2021Whenever we are writing our classes we have to provide some information about our classes to the JVM like whether this class can be accessible from anywhere or not, whether child class creation is possible or not, whether object creation is possible or not etc. we can specify this information by using an appropriate keyword in java called access modifiers. So access modifiers are used to set accessibility of classes, methods, and other members.Modifier 1: Public Access ModifiersIf a class is declared as public then we can access that class from anywhere.In the below example we are creating a package pack1 inside that package we declare a class A which is public and inside that class, we declare a method m1 which is also public. Now we create another package pack2 and inside that pack2 we import pack1 and declare a class B and in class B’s main method we create an object of type class A and trying to access the data of method m1.Example:Java// Java program to showcase the example// of public access modifier // creating a packagepackage pack1; // import required packagesimport java.io.*;import java.util.*; // declaring a public classpublic class A { // declaring method m1 public void m1() { System.out.println("GFG"); }} Compiling and saving the above code by using the below command line:Java// creating a packagepackage pack2; // import required packagesimport java.io.*;import java.util.*; // importing package pack1import pack1.A; // driver classclass B { // main method public static void main(String[] args) { // creating an object of type class A A a = new A(); // accessing the method m1() a.m1(); }} If class A is not public while compiling B class we will get a compile-time error saying pack1. A is not public in pack1 and can’t be accessed from the outside package.Similarly, a member or method, or interface is declared as public as we can access that member from anywhere.Modifier 2: Protected Access ModifierThis modifier can be applied to the data member, method, and constructor, but this modifier can’t be applied to the top-level classes and interface.A member is declared as protected as we can access that member only within the current package but only in the child class of the outside package.Implementation:Example Java// Java program to showcase the example// of protected access modifier// import required packagesimport java.io.*;import java.util.*; // declaring a parent class Aclass A { // declaring a protected method m1() protected void m1() { System.out.println("GFG"); }} // creating a child class by extending the class Aclass B extends A { // main method public static void main(String[] args) { // creating an object of parent class // using parent reference A a = new A(); /// calling method m1 a.m1(); // creating an object of child class // using child reference B b = new B(); // calling method m1 b.m1(); // creating an object of child class // using parent reference A a1 = new B(); // calling m1 method a1.m1(); }}OutputGFG GFG GFGOutput explanation:In the above example, we create three objects using parent reference and child reference and call m1() method on it, and it successfully executed so from the above example we can say that we can access the protected method within the current package anywhere either by using parent reference or by child reference.Modifier 3: Private Access ModifiersThis modifier is not applicable for top-level classes or interfaces. It is only applicable to constructors, methods, and fields inside the classes. If a variable or methods or constructor is declared as private then we can access them only from within the class i.e from outside the class we can’t access them.Example:Java// Java program to showcase the example// of private access modifier // import required packagesimport java.io.*; import java.util.*; // helper classclass A { // helper method private void m1() { System.out.println("GFG"); }} // driver classclass B { // main method public static void main(String[] args) { // creating an object of type class A A a = new A(); // accessing the method m1() a.m1(); }}Modifier 4: Package(Default) Access Modifier A class or method or variable declare without any access modifier then is considered that it has a package(default)access modifier The default modifier act as public within the same package and acts as private outside the package. If a class is declared as default then we can access that class only within the current package i.e from the outside package we can’t access it. Hence, the default access modifier is also known as the package–level access modifier. A similar rule also applies for variables and methods in java.Example: Java// Java Program to illustrate Package Level Access Modifier // Importing utility classes// Importing input output classesimport java.io.*;import java.util.*; // Main Classclass GFG { // Declaring default variables that is // having no access modifier String s = "Geeksfor"; String s1 = "Geeks"; // Method 1 // To declare a default method String fullName() { // Concatenation of strings return s + s1; } // Method 2 // Main driver method public static void main(String[] args) { // Creating an object of main class(GFG) // in the main() method GFG g = new GFG(); // Calling method1 using class instance // and printing the concation of strings System.out.println(g.fullName()); }}OutputGeeksforGeeksFinally, after getting it done with all four access modifiers let us conclude the evident differences between them Public Access ModifierPrivate Access Modifier Protected access modifier Package access modifierThis modifier is applicable for both top-level classes and interfaces.This modifier is not applicable for both top-level classes and interfaces.This modifier is not applicable for both top-level classes and interfaces.This modifier is applicable for both top-level classes and interfaces.Public members can be accessed from the child class of the same package.Private members cannot be accessed from the child class of the same package.Protected members can be accessed from the child class of the same package.Package members can be accessed from the child class of the same package.Public member can be accessed from non-child classes of the same package.Private members cannot be accessed from non-child classes of the same package.Protected member can be accessed from non-child classes of the same package.Package member can be accessed from non-child class of the same package.Public members can be accessed from the child class of outside package.Private members cannot be accessed from the child class of outside package.Protected members can be accessed from the child class of the outside package, but we should use child reference only. Package members cannot be accessed from the child class of outside package.Public members can be accessed from non-child class of outside package.Private members cannot be accessed from non-child class of outside package.Protected members cannot be accessed from the non-child class of outside package.Package members cannot be accessed from non-child class of outside package.Public modifier is the most accessible modifier among all modifiers.Private modifier is the most restricted modifier among all modifiers.Protected modifier is more accessible than the package and private modifier but less accessible than public modifier.Package modifier is more restricted than the public and protected modifier but less restricted than the private modifier. Attention reader! Don’t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikePreviousHow to Solve Deadlock using Threads in Java?Next java.net.URLConnection Class in JavaRecommended ArticlesPage :Public vs Protected Access Modifier in Java03, Mar 21Private vs Protected vs Final Access Modifier in Java13, May 21Access Modifiers in Python : Public, Private and Protected19, Dec 19What is the difference between public, private, and protected in PHP?15, Oct 18Protected vs Final Access Modifier in Java14, Sep 21Abstract vs Public Access Modifier in Java16, Oct 21Private vs Final Access Modifier in Java15, Apr 21Protected vs Private Access Modifiers in Java26, Apr 21Public vs Private Access Modifiers in Java19, Feb 21Protected vs Package Access Modifiers in Java24, Mar 21Public vs Package Access Modifiers in Java16, Apr 21Package vs Private Access Modifiers in Java17, Apr 21Java Program to Create a Package to Access the Member of External Class and Same Package08, Apr 21Public vs Protected in C++ with Examples28, Oct 19Replacing 'public' with 'private' in "main" in Java21, Aug 18Difference between Private key and Public key13, May 19Difference between Private and Public IP addresses30, Jul 19Difference between Public and Private in C++ with Example15, Oct 19Difference Between Public Cloud and Private Cloud10, Apr 20Difference between Public and Private blockchain12, Jul 20Difference between private keyword and private fields in TypeScript02, Mar 20Method Overriding with Access Modifier12, Dec 18How to Access Private Field and Method Using Reflection in Java?02, Feb 21Using Synaptic Package Manager to Download a Package in Linux30, Jan 21Article Contributed By :mroshanmishra0072@mroshanmishra0072Vote for difficultyEasy Normal Medium Hard ExpertImproved By :gabaa406adnanirshad158saurabh1990arorprachisoda1234Article Tags :Java-ModifierPickedDifference BetweenJavaPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in Difference BetweenDifference between Big Oh, Big Omega and Big ThetaDifference Between GitLab and GitHubDifference Between Method Overloading and Method Overriding in JavaDifference between SQL and NoSQLDifferences and Applications of List, Tuple, Set and Dictionary in PythonMost visited in JavaArrays in JavaObject Oriented Programming (OOPs) Concept in JavaSplit() String method in Java with examplesFor-each loop in JavaArrays.sort() in Java with examples× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register