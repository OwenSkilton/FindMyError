StringTokenizer Methods in Java with Examples | Set 2 - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesStringTokenizer Methods in Java with Examples | Set 2StringTokenizer Class in JavaString vs StringBuilder vs StringBuffer in JavaReverse a string in JavaReverse words in a given stringPrint words of a string in reverse orderDifferent methods to reverse a string in C/C++std::reverse() in C++How to reverse a Vector using STL in C++?What are the default values of static variables in C?Understanding “volatile” qualifier in C | Set 2 (Examples)Const Qualifier in CInitialization of static variables in CUnderstanding “register” keyword in CUnderstanding “extern” keyword in CStorage Classes in CStatic Variables in CMemory Layout of C ProgramsHow to deallocate memory without using free() in C?Difference Between malloc() and calloc() with ExamplesDynamic Memory Allocation in C using malloc(), calloc(), free() and realloc()How to dynamically allocate a 2D array in C?How to pass a 2D array as a parameter in C?Multidimensional Arrays in C / C++2D Vector In C++ With User Defined SizeArrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesFor-each loop in JavaTable of ContentsStringTokenizer Methods in Java with Examples | Set 2StringTokenizer Class in JavaString vs StringBuilder vs StringBuffer in JavaReverse a string in JavaReverse words in a given stringPrint words of a string in reverse orderDifferent methods to reverse a string in C/C++std::reverse() in C++How to reverse a Vector using STL in C++?What are the default values of static variables in C?Understanding “volatile” qualifier in C | Set 2 (Examples)Const Qualifier in CInitialization of static variables in CUnderstanding “register” keyword in CUnderstanding “extern” keyword in CStorage Classes in CStatic Variables in CMemory Layout of C ProgramsHow to deallocate memory without using free() in C?Difference Between malloc() and calloc() with ExamplesDynamic Memory Allocation in C using malloc(), calloc(), free() and realloc()How to dynamically allocate a 2D array in C?How to pass a 2D array as a parameter in C?Multidimensional Arrays in C / C++2D Vector In C++ With User Defined SizeArrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesFor-each loop in JavaImprove Article Save Article Like Article StringTokenizer Methods in Java with Examples | Set 2Difficulty Level : MediumLast Updated : 08 Dec, 2021StringTokenizer class in Java is used to break a string into tokens. One must go through StringTokenzier class where concepts and constructors are discussed which help in better understanding methods that are been discussed here below as follows:Methods of StringTokenizer class are as follows:hasMoreTokennextTokencountTokensnextElementhasMoreElementsMethod 1: hasMoreTokens()The method plays role in testing if tokens are present for the StringTokenizer’s string. Those characters that are considered to be delimiters by the StringTokenizer object are changed to characters in the string delimiter. Then the next token to the current position in the string is returned. Syntax:public boolean hasMoreTokens()Return Type: A boolean value, true if and only if next token to the current position in the string exists, else false.Method 2: nextToken()The method returns the next token from the given StringTokenizer. Syntax:public String nextToken()Return Type: The next token from the given StringTokenizer if present.Exception Thrown: NoSuchElementException if no more tokens are left.Method 3: countTokens()The method returns the total number of tokens present so that we can use nextToken() method before it gives an exception.Syntax:public int countTokens()Return Type: the number of tokens remaining in the string using the current delimiter set.Example Java// Java Program to Illustrate Methods of StringTokenizer class// Via hasMoreToken(), nextToken() and countTokens() // Importing required classesimport java.util.*; // Main classpublic class GFG { // Main driver method public static void main(String args[]) { // Input strings String mydelim = " : "; String mystr = "JAVA : Code : String : Tokenizer : Geeks"; // Use of Constructor 2 // Here we are passing Delimiter - "mydelim" StringTokenizer geeks3 = new StringTokenizer(mystr, mydelim); // Printing count of tokens and tokens // using countTokens() method int count = geeks3.countTokens(); System.out.println("Number of tokens : " + count + "\n"); // Iterating to get the tokens for (int i = 0; i < count; i++) System.out.println("token at [" + i + "] : " + geeks3.nextToken()); // checks for more tokens using hasMoreTokens() method // which holds true til there is single element remaining while (geeks3.hasMoreTokens()) // Returning the next token // using nextToken() method System.out.println(geeks3.nextToken()); }}OutputNumber of tokens : 5 token at [0] : JAVA token at [1] : Code token at [2] : String token at [3] : Tokenizer token at [4] : GeeksMethod 4: nextElement()The method works similar to nextToken except that it returns an Object rather than String. Exists so that this class can implement the Enumeration interface. Syntax:public Object nextElement()Return Type: the next token from the given StringTokenizer.Exception Thrown: NoSuchElementException if there are no more tokens left.Method 5: hasMoreElements()This method returns the same value as hasMoreToken. It exists so that the class can implement the Enumeration interface. Syntax:public boolean hasMoreElements()Return Type: A boolean value, true if tokens are present in the string, else falseExample Java// Java Program to Illustrate Methods of StringTokenizer// Class Via hasMoreElements, nextElement and nextElement // Importing required classesimport java.util.*; // Main classpublic class GFG { // Main driver method public static void main(String args[]) { // Input strings String mydelim = " : "; String mystr = "JAVA : Code : String : Tokenizer : Geeks"; // Use of Constructor 2 // Here we are passing Delimiter - "mydelim" StringTokenizer geeks = new StringTokenizer(mystr, mydelim); // Counting no. of tokens present // using countTokens() method int count = geeks.countTokens(); // Printing no. of tokens present System.out.println("Number of tokens : " + count); // Condition holds true till there is // single token remaining using hasMoreElements() // method True if tokens are present while (geeks.hasMoreElements()) // Returning the next token // using nextElement() method System.out.println(geeks.nextElement()); }}OutputNumber of tokens : 5 JAVA Code String Tokenizer GeeksTip: Do remember certain important points as listed:countTokens() method is a good alternative in using the combination hasMoreTokens() and nextToken().The combination of countTokens() and nextToken() is used if you are interested in the number of tokens also.This article is contributed by Mohit Gupta. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. Attention reader! Don’t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikeNext StringTokenizer Class in JavaRecommended ArticlesPage :StringTokenizer countTokens() Method in Java with Examples28, Jan 19StringTokenizer hasMoreElements() Method in Java with Examples28, Jan 19StringTokenizer hasMoreTokens() Method in Java with Examples28, Jan 19StringTokenizer nextToken() Method in Java with Examples29, Jan 19StringTokenizer nextElement() Method in Java with Examples29, Jan 19StringTokenizer Class in Java11, Nov 16Difference Between StringTokenizer and Split Method in Java05, Jan 21Static methods vs Instance methods in Java09, Dec 16Java.util.BitSet class methods in Java with Examples | Set 218, Nov 16HashMap Class Methods in Java with Examples | Set 1 (put(), get(), isEmpty() and size())10, Nov 16Hashmap methods in Java with Examples | Set 2 (keySet(), values(), containsKey()..)10, Nov 16BitSet class methods in Java with Examples | Set 321, Nov 16Math class methods in Java with Examples | Set 229, Nov 16DoubleBuffer put() methods in Java with Examples | Set 120, Sep 18ByteBuffer put() methods in Java with Examples | Set -124, Jun 19util.date class methods in Java with Examples28, Nov 16FloatBuffer get() methods in Java with Examples17, Sep 18FloatBuffer put() methods in Java with Examples17, Sep 18DoubleBuffer get() methods in Java with Examples17, Jun 19ByteBuffer putFloat() methods in Java with Examples24, Jun 19ByteBuffer putChar() methods in Java with Examples24, Jun 19ByteBuffer putDouble() methods in Java with Examples24, Jun 19ByteBuffer putInt() methods in Java with Examples24, Jun 19ByteBuffer putLong() methods in Java with Examples24, Jun 19Article Contributed By :GeeksforGeeksVote for difficultyCurrent difficulty : MediumEasy Normal Medium Hard ExpertImproved By :pavan singhsolankimayankArticle Tags :Java-LibraryJava-StringsJavaPractice Tags :Java-StringsJavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in JavaObject Oriented Programming (OOPs) Concept in JavaArrayList in JavaHashMap in Java with ExamplesMultidimensional Arrays in JavaInitialize an ArrayList in JavaMore related articles in JavaHow to iterate any Map in JavaHow to add an element to an Array in Java?Overriding in JavaLinkedList in JavaInterfaces in Java× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register