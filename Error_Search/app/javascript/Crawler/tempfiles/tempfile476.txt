JVM Shutdown Hook in Java - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesJava Virtual Machine (JVM) Stack AreaJVM Shutdown Hook in JavaJava Class FileDifferences between JDK, JRE and JVMDoes JVM create object of Main class (the class with main())?How is Java platform independent?JDBC DriversIs main method compulsory in Java?Myth about the file name and class name in JavaHow to run java class file which is in different directory?Monolithic vs Microservices architectureMicroservices IntroductionUsing predefined class name as Class or Variable name in JavaHow do I become a good Java programmer?Java IdentifiersData types in Javaenum in JavaEnum with Customized Value in JavaStringBuffer appendCodePoint() Method in Java with ExamplesVariables in JavaScope of Variables In JavaBlank Final in JavaBounded Types with Generics in JavaLoops in JavaFor-each loop in JavaArrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesReverse a string in JavaTable of ContentsJava Virtual Machine (JVM) Stack AreaJVM Shutdown Hook in JavaJava Class FileDifferences between JDK, JRE and JVMDoes JVM create object of Main class (the class with main())?How is Java platform independent?JDBC DriversIs main method compulsory in Java?Myth about the file name and class name in JavaHow to run java class file which is in different directory?Monolithic vs Microservices architectureMicroservices IntroductionUsing predefined class name as Class or Variable name in JavaHow do I become a good Java programmer?Java IdentifiersData types in Javaenum in JavaEnum with Customized Value in JavaStringBuffer appendCodePoint() Method in Java with ExamplesVariables in JavaScope of Variables In JavaBlank Final in JavaBounded Types with Generics in JavaLoops in JavaFor-each loop in JavaArrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesReverse a string in JavaImprove Article Save Article Like Article JVM Shutdown Hook in JavaDifficulty Level : MediumLast Updated : 12 Nov, 2021Shutdown Hooks are a special construct that allows developers to plug in a piece of code to be executed when the JVM is shutting down. This comes in handy in cases where we need to do special clean up operations in case the VM is shutting down.Handling this using the general constructs such as making sure that we call a special procedure before the application exits (calling System.exit(0) ) will not work for situations where the VM is shutting down due to an external reason (ex. kill request from O/S), or due to a resource problem (out of memory). As we will see soon, shutdown hooks solve this problem easily, by allowing us to provide an arbitrary code block, which will be called by the JVM when it is shutting down.From the surface, using a shutdown hook is downright straightforward. All we have to do is simply write a class that extends the java.lang.Thread class, and provide the logic that we want to perform when the VM is shutting down, inside the public void run() method. Then we register an instance of this class as a shutdown hook to the VM by calling Runtime.getRuntime().addShutdownHook(Thread) method. If you need to remove a previously registered shutdown hook, the Runtime class provides the removeShutdownHook(Thread) method as well.Example 1 (Anonymous inner class): Javapublic class ShutDownHook{ public static void main(String[] args) { Runtime.getRuntime().addShutdownHook(new Thread() { public void run() { System.out.println("Shutdown Hook is running !"); } }); System.out.println("Application Terminating ..."); }}When we run the above code, you will see that the shutdown hook is getting called by the JVM when it finishes the execution of the main method.Output: Application Terminating ... Shutdown Hook is running !Example 2 Javaclass ThreadChild extends Thread { public void run() { System.out.println("In clean up code"); System.out.println("In shutdown hook"); }} class Demo { public static void main(String[] args) { Runtime current = Runtime.getRuntime(); current.addShutdownHook(new ThreadChild()); for(int i = 1; i <= 10; i++) System.out.println("2 X " + i + " = " + 2 * i); }}Output: 2 X 1 = 2 2 X 2 = 4 2 X 3 = 6 2 X 4 = 8 2 X 5 = 10 2 X 6 = 12 2 X 7 = 14 2 X 8 = 16 2 X 9 = 18 2 X 10 = 20 In clean up code In shutdown hookSimple right? Yes, it is.While it is pretty simple to write a shutdown hook, one needs to know the internals behind the shutdown hooks to make use of those properly. Therefore, in this article, we will be exploring some of the ‘gotchas’ behind the shutdown hook design.1. Shutdown Hooks may not be executed in some cases! The first thing to keep in mind is that it is not guaranteed that shutdown hooks will always run. If the JVM crashes due to some internal error, then it might crash down without having a chance to execute a single instruction. Also, if the O/S gives a SIGKILL (http://en.wikipedia.org/wiki/SIGKILL) signal (kill -9 in Unix/Linux) or TerminateProcess (Windows), then the application is required to terminate immediately without doing even waiting for any cleanup activities. In addition to the above, it is also possible to terminate the JVM without allowing the shutdown hooks to run by calling Runtime.halt() method.Shutdown hooks are called when the application terminates normally (when all threads finish, or when System.exit(0) is called). Also, when the JVM is shutting down due to external causes such as a user requesting a termination (Ctrl+C), a SIGTERM being issued by O/S (normal kill command, without -9), or when the operating system is shutting down.2. Once started, Shutdown Hooks can be forcibly stopped before completion. This is actually a special case of the case explained before. Although the hook starts execution, it is possible to be terminated before it completes, in cases such as operating system shutdowns. In this type of case, the O/S waits for a process to terminate for a specified amount of time once the SIGTERM is given. If the process does not terminate within this time limit, then the O/S terminates the process forcibly by issuing a SIGTERM (or the counterparts in Windows). So it is possible that this happens when the shutdown hook is halfway through its execution.Therefore, it is advised to make sure that the Shutdown Hooks are written cautiously, ensuring that they finish quickly, and do not cause situations such as deadlocks. Also, the JavaDoc [1] specifically mentions that one should not perform long calculations or wait for User I/O operations in a shutdown hook.3. We can have more than one Shutdown Hooks, but their execution order is not guaranteed. As you might have correctly guessed by the method name of the addShutdownHook method (instead of setShutdownHook), you can register more than one shutdown hook. But the execution order of these multiple hooks is not guaranteed by the JVM. The JVM can execute shutdown hooks in any arbitrary order. Moreover, the JVM might execute all these hooks concurrently.4. We cannot register/unregister Shutdown Hooks within Shutdown Hooks Once the shutdown sequence is initiated by the JVM, it is not allowed to add more or remove any existing shutdown hooks. If this is attempted, the JVM throws IllegalStateException.5. Once shutdown sequence starts, it can be stopped by Runtime.halt() only. Once the shutdown sequence starts, only Runtime.halt() (which forcefully terminates the JVM) can stop the execution of the shutdown sequence (except for external influences such as SIGKILL). This means that calling System.exit() within a Shutdown Hook will not work. Actually, if you call System.exit() within a Shutdown Hook, the VM may get stuck, and we may have to terminate the process forcefully.6. Using shutdown hooks require security permissions. If we are using Java Security Managers, then the code which performs adding/removing of shutdown hooks need to have the shutdown hooks permission at runtime. If we invoke this method without permission in a secure environment, then it will result in SecurityException.References : http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Runtime.html#addShutdownHook(java.lang.Thread)This article is contributed by Saket Kumar. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. Attention reader! Don’t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikePreviousJava Virtual Machine (JVM) Stack AreaNext Java Class FileRecommended ArticlesPage :How JVM Works - JVM Architecture?20, Oct 16Verification in Java (JVM)06, Dec 17Java Virtual Machine (JVM) Stack Area01, Feb 18Types of JVM Garbage Collectors in Java with implementation details22, Jan 20Difference between JIT and JVM in Java08, Feb 21Java Program to Check if JVM is 32 or 64 bit08, Mar 21Difference Between 32-bit and 64-bit JVM in Java25, May 21Does JVM create object of Main class (the class with main())?06, Apr 16Differences between JDK, JRE and JVM29, Jul 17How to Generate JVM Heap Memory Dump?15, Jul 21Difference Between JVM and DVM27, Dec 20Frequently Used JVM Parameters11, Feb 21How many types of memory areas are allocated by JVM?28, Jun 19Difference Between java.sql.Time, java.sql.Timestamp and java.sql.Date in Java07, Apr 21How to Convert java.sql.Date to java.util.Date in Java?02, Feb 21Different Ways to Convert java.util.Date to java.time.LocalDate in Java05, Jan 21How to Convert java.util.Date to java.sql.Date in Java?23, Mar 21Java.util.BitSet class methods in Java with Examples | Set 218, Nov 16Java.Lang.Float class in Java27, Mar 17Java.io.BufferedInputStream class in Java20, Jan 17Java.io.ObjectInputStream Class in Java | Set 102, Feb 17Java.util.BitSet class in Java with Examples | Set 116, Nov 16Java.io.BufferedWriter class methods in Java29, Dec 16Java.io.DataOutputStream in Java06, Jan 17Article Contributed By :GeeksforGeeksVote for difficultyCurrent difficulty : MediumEasy Normal Medium Hard ExpertImproved By :MahendraKumarabhijeet_raisg4ipiafwot258z3lh6xa2mjq2qtxd89f49zgt7gchhabradhanviArticle Tags :java-JVMJavaPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in JavaObject Oriented Programming (OOPs) Concept in JavaArrayList in JavaHashMap in Java with ExamplesInitialize an ArrayList in JavaMultidimensional Arrays in JavaMore related articles in JavaHow to iterate any Map in JavaHow to add an element to an Array in Java?Overriding in JavaInterfaces in JavaLinkedList in Java× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register