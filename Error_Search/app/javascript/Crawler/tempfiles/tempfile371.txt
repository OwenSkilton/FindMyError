Java Virtual Machine (JVM) Stack Area - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesJava Virtual Machine (JVM) Stack AreaJVM Shutdown Hook in JavaJava Class FileDifferences between JDK, JRE and JVMDoes JVM create object of Main class (the class with main())?How is Java platform independent?JDBC DriversIs main method compulsory in Java?Myth about the file name and class name in JavaHow to run java class file which is in different directory?Monolithic vs Microservices architectureMicroservices IntroductionUsing predefined class name as Class or Variable name in JavaHow do I become a good Java programmer?Java IdentifiersData types in Javaenum in JavaEnum with Customized Value in JavaStringBuffer appendCodePoint() Method in Java with ExamplesVariables in JavaScope of Variables In JavaBlank Final in JavaBounded Types with Generics in JavaLoops in JavaFor-each loop in JavaArrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesReverse a string in JavaTable of ContentsJava Virtual Machine (JVM) Stack AreaJVM Shutdown Hook in JavaJava Class FileDifferences between JDK, JRE and JVMDoes JVM create object of Main class (the class with main())?How is Java platform independent?JDBC DriversIs main method compulsory in Java?Myth about the file name and class name in JavaHow to run java class file which is in different directory?Monolithic vs Microservices architectureMicroservices IntroductionUsing predefined class name as Class or Variable name in JavaHow do I become a good Java programmer?Java IdentifiersData types in Javaenum in JavaEnum with Customized Value in JavaStringBuffer appendCodePoint() Method in Java with ExamplesVariables in JavaScope of Variables In JavaBlank Final in JavaBounded Types with Generics in JavaLoops in JavaFor-each loop in JavaArrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesReverse a string in JavaImprove Article Save Article Like Article Java Virtual Machine (JVM) Stack AreaDifficulty Level : MediumLast Updated : 20 Jun, 2021For every thread, JVM creates a separate stack at the time of thread creation. The memory for a Java Virtual Machine stack does not need to be contiguous. The Java virtual machine only performs two operations directly on Java stacks: it pushes and pops frames. And stack for a particular thread may be termed as Run – Time Stack. Every method call performed by that thread is stored in the corresponding run-time stack including parameters, local variables, intermediate computations, and other data. After completing a method, the corresponding entry from the stack is removed. After completing all method calls the stack becomes empty and that empty stack is destroyed by the JVM just before terminating the thread. The data stored in the stack is available for the corresponding thread and not available to the remaining threads. Hence we can say local data thread-safe. Each entry in the stack is called Stack Frame or Activation Record. Stack Frame Structure The stack frame basically consists of three parts: Local Variable Array, Operand Stack & Frame Data. When JVM invokes a Java method, first it checks the class data to determine the number of words (size of the local variable array and operand stack, which is measured in words for each individual method) required by the method in the local variables array and operand stack. It creates a stack frame of the proper size for invoked method and pushes it onto the Java stack. 1. Local Variable Array (LVA): The local variables part of the stack frame is organized as a zero-based array of words.It contains all parameters and local variables of the method.Each slot or entry in the array is of 4 Bytes.Values of type int, float, and reference occupy 1 entry or slot in the array i.e. 4 bytes.Values of double and long occupy 2 consecutive entries in the array i.e. 8 bytes total.Byte, short, and char values will be converted to int type before storing and occupy 1 slot i.e. 4 Bytes.But the way of storing Boolean values is varied from JVM to JVM. But most of the JVM gives 1 slot for Boolean values in the local variable array.The parameters are placed into the local variable array first, in the order in which they are declared.For Example: Let us consider a class Example having a method bike() then the local variable array will be as shown in the below diagram: // Class Declaration class Example { public void bike(int i, long l, float f, double d, Object o, byte b) { } } 2. Operand Stack (OS): JVM uses operand stack as workspace like rough work or we can say for storing intermediate calculation’s result.The operand stack is organized as an array of words like a local variable array. But this is not accessed by using an index like local variable array rather it is accessed by some instructions that can push the value to the operand stack and some instructions that can pop values from the operand stack and some instructions that can perform required operations.For Example: Here is how a JVM will use this below code that would subtract two local variables that contain two ints and store the int result in a third local variable: So here first two instructions iload_0 and iload_1 will push the values in the operand stack from a local variable array. And instruction isub will subtract these two values and store the result back to the operand stack and after istore_2 the result will pop out from the operand stack and will store into a local variable array at position 2. 3. Frame Data (FD): It contains all symbolic references (constant pool resolution) and normal method returns related to that particular method.It also contains a reference to the Exception table which provides the corresponding catch block information in the case of exceptions. Attention reader! Don’t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikeNext JVM Shutdown Hook in JavaRecommended ArticlesPage :How JVM Works - JVM Architecture?20, Oct 16Verification in Java (JVM)06, Dec 17Types of JVM Garbage Collectors in Java with implementation details22, Jan 20Difference between JIT and JVM in Java08, Feb 21Java Program to Check if JVM is 32 or 64 bit08, Mar 21Difference Between 32-bit and 64-bit JVM in Java25, May 21JVM Shutdown Hook in Java03, May 17Does JVM create object of Main class (the class with main())?06, Apr 16Differences between JDK, JRE and JVM29, Jul 17How to Generate JVM Heap Memory Dump?15, Jul 21Difference Between JVM and DVM27, Dec 20Frequently Used JVM Parameters11, Feb 21How many types of memory areas are allocated by JVM?28, Jun 19How to Increase Heap Size in Java Virtual Machine?08, Mar 21Turing Machine Construction (Transducers Turing Machine) in Java21, Sep 21How does default virtual behavior differ in C++ and Java ?21, Oct 10How to Download and Install Java for 64 bit machine?09, Jun 20Java Program to Get System Name for Windows and Linux Machine28, Dec 20Java Program to Get System IP Address in Windows and Linux Machine05, Jan 21Java Program to Get System Motherboard Serial Number for Windows and Linux Machine02, Jan 21Java Program to Get System MAC Address of Windows and Linux Machine02, Jan 21Java Program for Getting System UUID for Linux Machine01, Feb 21Java Program to Get CPU Serial Number for Windows Machine22, Jun 21Stack search() Method in Java02, Aug 18Article Contributed By :Anshul_Aggarwal@Anshul_AggarwalVote for difficultyCurrent difficulty : MediumEasy Normal Medium Hard ExpertImproved By :Manish Dhanukasandeeprana1vaibhavsinghtanwarArticle Tags :java-basicsjava-JVMJavaPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsJava FoundationView DetailsComplete Interview PreparationView DetailsMost popular in JavaObject Oriented Programming (OOPs) Concept in JavaArrayList in JavaHashMap in Java with ExamplesInitialize an ArrayList in JavaMultidimensional Arrays in JavaMore related articles in JavaHow to iterate any Map in JavaHow to add an element to an Array in Java?Overriding in JavaInterfaces in JavaLinkedList in Java× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register