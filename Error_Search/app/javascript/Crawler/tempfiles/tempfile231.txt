Parameter Passing Techniques in Java with Examples - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesBasicsJava Programming LanguageIntroduction to JavaSetting up the environment in JavaJava Basic SyntaxJava Hello World ProgramCommand Line arguments in JavaHow JVM Works – JVM Architecture?Differences between JDK, JRE and JVMJava IdentifiersData types in JavaVariables in JavaComments in JavaOperators in JavaWays to read input from console in JavaFlow ControlDecision Making in Java (if, if-else, switch, break, continue, jump)Loops in JavaJava For loop with ExamplesFor-each loop in JavaJava while loop with ExamplesSwitch Statement in JavaContinue Statement in JavaBreak statement in JavaStringsStrings in JavaString class in Java | Set 1StringBuffer class in JavaStringBuilder Class in Java with ExamplesArraysArrays in JavaMultidimensional Arrays in JavaJagged Array in JavaArray Copy in JavaHow to convert an Array to String in Java?How to compare two arrays in Java?MethodsMethods in JavaParameter Passing Techniques in Java with ExamplesReturning Multiple values in JavaDifferent ways of Method Overloading in JavaScope of Variables In JavaConstructorsConstructors in JavaCopy Constructor in JavaConstructor Overloading in JavaConstructor Chaining In Java with ExamplesPrivate Constructors and Singleton Classes in JavaOOP ConceptsClasses and Objects in JavaInheritance in JavaEncapsulation in JavaPolymorphism in JavaAbstraction in JavaOverriding in JavaOverloading in JavaException HandlingExceptions in JavaTypes of Exception in Java with ExamplesChecked vs Unchecked Exceptions in Javathrow and throws in JavaUser-defined Custom Exception in JavaInterfaces & Abstract ClassesInterfaces in JavaNested Interface in JavaMarker interface in JavaAbstract Classes in JavaDifference between Abstract Class and Interface in JavaFunctional Interfaces in JavaComparator Interface in Java with ExamplesCollectionsCollections in JavaCollections Class in JavaCollection vs Collections in Java with ExampleJava | Implementing Iterator and Iterable InterfaceList Interface in Java with ExamplesArrayList in JavaVector Class in JavaStack Class in JavaLinkedList in JavaQueue Interface In JavaPriorityQueue in JavaDeque interface in Java with ExampleArrayDeque in JavaSet in JavaHashSet in JavaLinkedHashSet in Java with ExamplesSortedSet Interface in Java with ExamplesNavigableSet in Java with ExamplesTreeSet in JavaMap Interface in JavaHashMap in Java with ExamplesHashtable in JavaLinkedHashMap in JavaSortedMap Interface in Java with ExamplesTreeMap in JavaMultithreadingMultithreading in JavaLifecycle and States of a Thread in JavaMain thread in JavaJava Thread Priority in MultithreadingSynchronization in JavaFile HandlingFile Handling in Java with CRUD operationsJava.io.InputStream Class in JavaJava.io.OutputStream class in JavaJava.io.File Class in JavaFile Permissions in JavaCopying file using FileStreams in JavaDelete a file using JavaTable of ContentsBasicsJava Programming LanguageIntroduction to JavaSetting up the environment in JavaJava Basic SyntaxJava Hello World ProgramCommand Line arguments in JavaHow JVM Works – JVM Architecture?Differences between JDK, JRE and JVMJava IdentifiersData types in JavaVariables in JavaComments in JavaOperators in JavaWays to read input from console in JavaFlow ControlDecision Making in Java (if, if-else, switch, break, continue, jump)Loops in JavaJava For loop with ExamplesFor-each loop in JavaJava while loop with ExamplesSwitch Statement in JavaContinue Statement in JavaBreak statement in JavaStringsStrings in JavaString class in Java | Set 1StringBuffer class in JavaStringBuilder Class in Java with ExamplesArraysArrays in JavaMultidimensional Arrays in JavaJagged Array in JavaArray Copy in JavaHow to convert an Array to String in Java?How to compare two arrays in Java?MethodsMethods in JavaParameter Passing Techniques in Java with ExamplesReturning Multiple values in JavaDifferent ways of Method Overloading in JavaScope of Variables In JavaConstructorsConstructors in JavaCopy Constructor in JavaConstructor Overloading in JavaConstructor Chaining In Java with ExamplesPrivate Constructors and Singleton Classes in JavaOOP ConceptsClasses and Objects in JavaInheritance in JavaEncapsulation in JavaPolymorphism in JavaAbstraction in JavaOverriding in JavaOverloading in JavaException HandlingExceptions in JavaTypes of Exception in Java with ExamplesChecked vs Unchecked Exceptions in Javathrow and throws in JavaUser-defined Custom Exception in JavaInterfaces & Abstract ClassesInterfaces in JavaNested Interface in JavaMarker interface in JavaAbstract Classes in JavaDifference between Abstract Class and Interface in JavaFunctional Interfaces in JavaComparator Interface in Java with ExamplesCollectionsCollections in JavaCollections Class in JavaCollection vs Collections in Java with ExampleJava | Implementing Iterator and Iterable InterfaceList Interface in Java with ExamplesArrayList in JavaVector Class in JavaStack Class in JavaLinkedList in JavaQueue Interface In JavaPriorityQueue in JavaDeque interface in Java with ExampleArrayDeque in JavaSet in JavaHashSet in JavaLinkedHashSet in Java with ExamplesSortedSet Interface in Java with ExamplesNavigableSet in Java with ExamplesTreeSet in JavaMap Interface in JavaHashMap in Java with ExamplesHashtable in JavaLinkedHashMap in JavaSortedMap Interface in Java with ExamplesTreeMap in JavaMultithreadingMultithreading in JavaLifecycle and States of a Thread in JavaMain thread in JavaJava Thread Priority in MultithreadingSynchronization in JavaFile HandlingFile Handling in Java with CRUD operationsJava.io.InputStream Class in JavaJava.io.OutputStream class in JavaJava.io.File Class in JavaFile Permissions in JavaCopying file using FileStreams in JavaDelete a file using JavaImprove Article Save Article Like Article Parameter Passing Techniques in Java with ExamplesDifficulty Level : MediumLast Updated : 14 Jul, 2021There are different ways in which parameter data can be passed into and out of methods and functions. Let us assume that a function B() is called from another function A(). In this case A is called the “caller function” and B is called the “called function or callee function”. Also, the arguments which A sends to B are called actual arguments and the parameters of B are called formal arguments. Types of parameters: Formal Parameter : A variable and its type as they appear in the prototype of the function or method. Syntax: function_name(datatype variable_name) Actual Parameter : The variable or expression corresponding to a formal parameter that appears in the function or method call in the calling environment. Syntax: func_name(variable name(s)); Important methods of Parameter Passing1. Pass By Value: Changes made to formal parameter do not get transmitted back to the caller. Any modifications to the formal parameter variable inside the called function or method affect only the separate storage location and will not be reflected in the actual parameter in the calling environment. This method is also called as call by value.Java in fact is strictly call by value. Example: Java// Java program to illustrate// Call by Value // Calleeclass CallByValue { // Function to change the value // of the parameters public static void Example(int x, int y) { x++; y++; }} // Callerpublic class Main { public static void main(String[] args) { int a = 10; int b = 20; // Instance of class is created CallByValue object = new CallByValue(); System.out.println("Value of a: " + a + " & b: " + b); // Passing variables in the class function object.Example(a, b); // Displaying values after // calling the function System.out.println("Value of a: " + a + " & b: " + b); }}Output: Value of a: 10 & b: 20 Value of a: 10 & b: 20 Shortcomings: Inefficiency in storage allocationFor objects and arrays, the copy semantics are costly2. Call by reference(aliasing): Changes made to formal parameter do get transmitted back to the caller through parameter passing. Any changes to the formal parameter are reflected in the actual parameter in the calling environment as formal parameter receives a reference (or pointer) to the actual data. This method is also called as call by reference. This method is efficient in both time and space. Java// Java program to illustrate// Call by Reference // Calleeclass CallByReference { int a, b; // Function to assign the value // to the class variables CallByReference(int x, int y) { a = x; b = y; } // Changing the values of class variables void ChangeValue(CallByReference obj) { obj.a += 10; obj.b += 20; }} // Callerpublic class Main { public static void main(String[] args) { // Instance of class is created // and value is assigned using constructor CallByReference object = new CallByReference(10, 20); System.out.println("Value of a: " + object.a + " & b: " + object.b); // Changing values in class function object.ChangeValue(object); // Displaying values // after calling the function System.out.println("Value of a: " + object.a + " & b: " + object.b); }} Output: Value of a: 10 & b: 20 Value of a: 20 & b: 40 Please note that when we pass a reference, a new reference variable to the same object is created. So we can only change members of the object whose reference is passed. We cannot change the reference to refer to some other object as the received reference is a copy of the original reference. Please see example 2 in Java is Strictly Pass by Value! My Personal Notes arrow_drop_upSave LikePreviousMethods in JavaNext Returning Multiple values in JavaRecommended ArticlesPage :java.lang.reflect.Parameter Class in Java06, Mar 21Argument vs Parameter in Java09, May 19Differences between Dynamic Binding and Message Passing in Java15, Jan 20Message Passing in Java09, May 19Passing and Returning Objects in Java22, Mar 17Different name reusing techniques in Java05, Jan 18getParameter() - Passing data from client to JSP09, Jun 18getAttribute() - Passing data from Server to JSP20, Jun 18Difference Between java.sql.Time, java.sql.Timestamp and java.sql.Date in Java07, Apr 21Java.util.BitSet class methods in Java with Examples | Set 218, Nov 16Java.util.BitSet class in Java with Examples | Set 116, Nov 16Java 8 | Consumer Interface in Java with Examples24, Sep 18Java.util.LinkedList.poll(), pollFirst(), pollLast() with examples in Java24, Oct 17Java 8 | ArrayDeque removeIf() method in Java with Examples18, Sep 18Java lang.Long.lowestOneBit() method in Java with Examples16, May 18Java lang.Long.numberOfTrailingZeros() method in Java with Examples17, May 18Java lang.Long.numberOfLeadingZeros() method in Java with Examples21, May 18Java lang.Long.highestOneBit() method in Java with Examples21, May 18Java lang.Long.byteValue() method in Java with Examples23, May 18Java lang.Long.reverse() method in Java with Examples24, May 18Java lang.Long.builtcount() method in Java with Examples24, May 18Java Clock tickMinutes() method in Java with Examples24, Aug 18Java Clock withZone() method in Java with Examples24, Aug 18Java.util.concurrent.RecursiveAction class in Java with Examples17, Jun 19Article Contributed By :TusharSabhani@TusharSabhaniVote for difficultyCurrent difficulty : MediumEasy Normal Medium Hard ExpertImproved By :randeeprkoArticle Tags :java-basicsJava-FunctionsJavaJava ProgramsPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsJava FoundationView DetailsComplete Interview PreparationView DetailsMost popular in JavaObject Oriented Programming (OOPs) Concept in JavaSplit() String method in Java with examplesReverse a string in JavaArrays.sort() in Java with examplesHow to iterate any Map in JavaMost visited in Java ProgramsConvert a String to Character array in JavaJava Programming ExamplesInitializing a List in JavaConvert Double to Integer in JavaImplementing a Linked List in Java using Class× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register