GATE CS Topic wise preparation Notes | GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲GATE CS Notes according to GATE 2021 syllabusLast Updated : 12 Jan, 2022This page contains GATE CS Preparation Notes / Tutorials on Mathematics, Digital Logic, Computer Organization and Architecture, Programming and Data Structures, Algorithms, Theory of Computation, Compiler Design, Operating Systems, Database Management Systems (DBMS), and Computer Networks listed according to the GATE CS 2021 syllabus. GATE CS 2022 TSAttend daily free live GATE CS classes on GeeksforGeeks GATE CS Channel.GATE 2020 SyllabusLearnPracticeExternal ResourcesSection 1: General Aptitude (GA)Verbal Aptitude :Basic English grammar: tenses, articles, adjectives, prepositions, conjunctions, verb-noun agreement, and other parts of speechBasic vocabulary: words, idioms, and phrases in context Reading and comprehensionNarrative sequencingQuantitative Aptitude :Data interpretation: data graphs (bar graphs, pie charts, and other graphs representing data), 2- and 3-dimensional plots, maps, and tablesNumerical computation and estimation: ratios, percentages, powers, exponents and logarithms, permutations and combinations, and seriesMensuration and geometryElementary statistics and probabilityAnalytical Aptitude :Logic: deduction and inductionAnalogyNumerical relations and reasoningSpatial Aptitude :Transformation of shapes: translation, rotation, scaling, mirroring, assembling, and groupingPaper folding, cutting, and patterns in 2 and 3 dimensionsNumerical Ability :PlacementsVerbal Ability :Placements | English | Error Detection and CorrectionPlacements | English | Passage/Sentence Re-arrangementPlacements | English | Fill in the BlanksPlacements | English | Comprehension PassagesNumerical Ability :PlacementsVerbal Ability :PlacementsNumerical Ability :Book – Quantitative Aptitude by R.S. AggarwalVerbal Ability :Notes – EnglishSection 2: MathematicsDiscrete Mathematics :Propositional and first order logicSets, relations, functions, partial orders and lattices. Monoids, GroupsCombinatorics: counting, recurrence relations, generating functionsGraphs: connectivity, matching, coloringLinear Algebra :Matrices, determinantsLU decompositionSystem of linear equationsEigenvalues and eigenvectorsProbability :Random variablesMean, median, mode and standard deviationUniform, normal, exponential, Poisson and binomial distributionsConditional probability and Bayes theoremCalculus :Limits, Continuity and DifferentiabilityMaxima and Minima. Mean value theoremIntegrationDiscrete Mathematics :Representation of Boolean FunctionsProperties of Boolean algebraPDNF and PCNF in Discrete MathematicsFunctional CompletenessIntroduction to Propositional Logic Set 1Introduction to Propositional Logic Set 2Propositional EquivalencePredicates and Quantifiers Set 1Predicates and Quantifiers Set 2Some theorems on Nested QuantifiersRules of InferenceConsensus theoremIntroduction to ProofsCombinatorics BasicsPigeonhole PrinciplePnC and Binomial CoefficientsGeneralized PnC Set 1Generalized PnC Set 2Inclusion-Exclusion and its various ApplicationsCorollaries of Binomial TheoremIntroduction of Generating FunctionsGenerating Functions – Set 2Set Theory | IntroductionSet Theory | Set OperationsPower Set and its PropertiesRelations and their typesRelations and their representationsRepresenting RelationsClosure of Relations and Equivalence RelationsFunctions | Properties and TypesInverse functions and composition of functionsTotal number of possible functionsNumber of possible equivalence relationsGroupsPartial Orders and LatticesHasse DiagramsGraph Theory Basics – Set 1Graph Theory Basics – Set 2Walks, Trails, Paths, Cycles and Circuits in GraphNumber of nodes and height of binary treeGraph measurements: length, distance, diameter, eccentricity, radius, centerGraph Isomorphisms and ConnectivityPlanar Graphs and Graph ColoringEuler and Hamiltonian PathsIndependent Sets, Covering and MatchingMatching (graph theory)Graph theory practice questionsRecurrence relationsDifferent types of recurrence relations and their solutionsTypes of Recurrence Relations – Set 2Linear Algebra :Matrix IntroductionDifferent operations on matricesL U DecompositionDoolittle Algorithm : LU DecompositionSystem of Linear EquationsEigen Values and Eigen VectorsProbability :ProbabilityRandom VariablesMean, Variance And Standard DeviationLaw of total probabilityBayes’s formula for Conditional ProbabilityProbability Distributions Set 1 (Uniform Distribution)Probability Distributions Set 2 (Exponential Distribution)Probability Distributions Set 3 (Normal Distribution)Probability Distributions Set 4 (Binomial Distribution)Probability Distributions Set 5 (Poisson Distribution)Hypergeometric Distribution modelConditional ProbabilityCovariance and CorrelationCalculus :Limits, Continuity and DifferentiabilityLagrange’s Mean Value TheoremMean Value Theorem | Rolle’s TheoremCauchy’s mean value theoremIndefinite IntegralsFinding nth term of any polynomial sequenceSequence, Series and SummationsCATEGORY ARCHIVES: ENGINEERING MATHEMATICSLast Minute Notes – Engineering MathematicsDiscrete Mathematics :Propositional and First Order LogicSet Theory & AlgebraCombinatoricsCombinatorics | Set 1Combinatorics | Set 2Graph TheoryLinear Algebra :Linear AlgebraProbability :ProbabilityCalculus :CalculusDiscrete Mathematics :Video – MIT Discrete Mathematics LecturesNotes – First Order LogicBook – Schaum’s PDFMIT – Lecture NotesIISC – Video LecturesPapers – GATE’s Explanation by NPTELLinear Algebra :MIT – Linear AlgebraBook – Linear AlgebraProbability :Book – ProbabilityNotes – ProbabilityCalculus :MIT – Video LecturesNotes – CalculusCalculusSection 3: AlgorithmsSearching, sorting, hashingAsymptotic worst case time and space complexityAlgorithm design techniques : greedy, dynamic programming and divide‐and‐conquerGraph traversals, minimum spanning trees, shortest pathsAsymptotic Analysis of Algorithms :Analysis of Algorithms | Set 1 (Asymptotic Analysis)Analysis of Algorithms | Set 2 (Worst, Average and Best Cases)Analysis of Algorithms | Set 3 (Asymptotic Notations)Analysis of Algorithms | Set 4 (Analysis of Loops)Analysis of Algorithm | Set 5 (Amortized Analysis Introduction)Analysis of algorithms | little o and little omega notationsWhat does ‘Space Complexity’ mean?Articles | Analysis of AlgorithmsRecurrence Relations :Analysis of Algorithm | Set 4 (Solving Recurrences)Different types of recurrence relations and their solutionsDivide and Conquer :Divide and Conquer | Set 1 (Introduction)Binary SearchWhy is Binary Search preferred over Ternary Search?Merge SortMerge Sort for Linked ListsMerge Sort for Doubly Linked ListHow to make Mergesort to perform O(n) comparisons in best case?QuickSortIterative Quick SortQuickSort on Singly Linked ListQuickSort on Doubly Linked ListWhen does the worst case of Quicksort occur?Why Quick Sort preferred for Arrays and Merge Sort for Linked Lists?Write a program to calculate pow(x,n)Median of two sorted arraysCount Inversions in an array | Set 1 (Using Merge Sort)Divide and Conquer | Set 2 (Closest Pair of Points)Divide and Conquer | Set 5 (Strassen’s Matrix Multiplication)Sort a nearly sorted (or K sorted) arraySearch in an almost sorted arrayK-th Element of Two Sorted ArraysK’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)Searching and SortingGreedy Techniques :Greedy Algorithms | Set 1 (Activity Selection Problem)Job Sequencing Problem | Set 1 (Greedy Algorithm)Greedy Algorithms | Set 3 (Huffman Coding)Greedy Algorithms | Set 4 (Efficient Huffman Coding for Sorted Input)Greedy Algorithms | Set 2 (Kruskal’s Minimum Spanning Tree Algorithm)Greedy Algorithms | Set 5 (Prim’s Minimum Spanning Tree (MST))Greedy Algorithms | Set 6 (Prim’s MST for Adjacency List Representation)Applications of Minimum Spanning Tree ProblemGreedy Algorithms | Set 7 (Dijkstra’s shortest path algorithm)Greedy Algorithms | Set 8 (Dijkstra’s Algorithm for Adjacency List Representation)Greedy Algorithm to find Minimum number of CoinsStrongly Connected ComponentsGreedy AlgorithmsGraph Based Algorithms :Graph and its representationsBreadth First Traversal or BFS for a GraphDepth First Traversal or DFS for a GraphApplications of Depth First SearchDetect Cycle in a Directed GraphDisjoint Set (Or Union-Find) | Set 1 (Detect Cycle in an Undirected Graph)Detect cycle in an undirected graphTopological SortingLongest Path in a Directed Acyclic GraphBiconnected ComponentsBellman–Ford AlgorithmFloyd Warshall AlgorithmShortest Path in Directed Acyclic GraphSome interesting shortest path questions | Set 1Shortest path with exactly k edges in a directed and weighted graphBiconnected ComponentsBiconnected graphArticulation Points (or Cut Vertices) in a GraphCheck if a graph is strongly connected | Set 1 (Kosaraju using DFS)Bridges in a graphTransitive closure of a graphGraph Algorithms | DFS and BFS | Minimum Spanning Tree | Shortest Paths | ConnectivityDynamic Programing :Dynamic Programming | Set 1 (Overlapping Subproblems Property)Dynamic Programming | Set 2 (Optimal Substructure Property)Dynamic Programming | Set 4 (Longest Common Subsequence)Dynamic Programming | Set 8 (Matrix Chain Multiplication)Dynamic Programming | Set 10 ( 0-1 Knapsack Problem)Dynamic Programming | Set 6 (Min Cost Path)Dynamic Programming | Set 25 (Subset Sum Problem)Dynamic Programming | Set 23 (Bellman–Ford Algorithm)Dynamic Programming | Set 16 (Floyd Warshall Algorithm)Total number of non-decreasing numbers with n digitsVertex Cover Problem | Set 2 (Dynamic Programming Solution for Tree)Smallest power of 2 greater than or equal to nTravelling Salesman Problem | Set 1 (Naive and Dynamic Programming)Travelling Salesman Problem | Set 2 (Approximate using MST)Dynamic ProgrammingSearching, Sorting and Hashing :Linear SearchLinear Search vs Binary SearchSelection SortBubble SortInsertion SortHeap SortRadix SortCounting SortHashing | Set 1 (Introduction)Hashing | Set 2 (Separate Chaining)Hashing | Set 3 (Open Addressing)Hash Table vs STL MapAdvantages of BST over Hash TableMisc :Find subarray with given sum | Set 2 (Handles Negative Numbers)Largest subarray with equal number of 0s and 1sFind four elements a, b, c and d in an array such that a+b = c+dPrint all subarrays with 0 sumGiven an array A[] and a number x, check for pair in A[] with sum as xUnion and Intersection of two Linked ListsFind whether an array is subset of another array | Added Method 3Count pairs with given sumTop 20 Hashing Technique based Interview QuestionsCATEGORY ARCHIVES: ALGORITHMSLast Minute Notes – AlgorithmsAsymptotic Analysis of Algorithms :Analysis of AlgorithmsRecurrence Relations :Analysis of Algorithms (Recurrences)Practice Set for Recurrence RelationsDivide and Conquer :MergeSortDivide and ConquerGreedy Techniques :Graph Minimum Spanning TreeGraph Shortest PathsGreedy AlgorithmsGraph Based Algorithms :GraphGraph TraversalsDynamic Programing :Dynamic ProgrammingSearching, Sorting and Hashing :SearchingSortingHashingMisc :MiscCommonly Asked Algorithm Interview Questions | Set 1Data Structures and Algorithms | Set 1Data Structures and Algorithms | Set 2Data Structures and Algorithms | Set 3Data Structures and Algorithms | Set 4Data Structures and Algorithms | Set 5Data Structures and Algorithms | Set 6Data Structures and Algorithms | Set 7Data Structures and Algorithms | Set 8Data Structures and Algorithms | Set 9Data Structures and Algorithms | Set 10Data Structures and Algorithms | Set 11Data Structures and Algorithms | Set 12Data Structures and Algorithms | Set 13Data Structures and Algorithms | Set 14Data Structures and Algorithms | Set 15Data Structures and Algorithms | Set 16Data Structures and Algorithms | Set 17Data Structures and Algorithms | Set 18Data Structures and Algorithms | Set 19Data Structures and Algorithms | Set 20Data Structures and Algorithms | Set 21Data Structures and Algorithms | Set 22Data Structures and Algorithms | Set 23Data Structures and Algorithms | Set 24Data Structures and Algorithms | Set 25Data Structures and Algorithms | Set 26Data Structures and Algorithms | Set 27Data Structures and Algorithms | Set 28Data Structures and Algorithms | Set 29Data Structures and Algorithms | Set 30Data Structures and Algorithms | Set 31Data Structures and Algorithms | Set 32Data Structures and Algorithms | Set 33Data Structures and Algorithms | Set 34Data Structures and Algorithms | Set 35Algorithms :Video – GeeksforGeeks VideosVideo – Lectures by Ravindrababu RavulaMIT – Introduction to AlgorithmsBook – CLRS Solutions ManualVisual – Data Structures and Algorithms.Notes – Big – O NotationNotes – Master TheoremNotes – Extended Master TheoremNotes – Master Theorem problems and answersSection 4: Programming and Data StructuresProgramming in C, RecursionArrays, stacks, queues, linked lists, trees, binary search trees, binary heaps, graphsProgramming in C, Recursion :C ProgrammingRecursionTail RecursionRecursive functionsArray, Stack, Queue :ArraysStackQueueLinked Lists :Linked ListTrees, Binary search trees, Binary heaps :Binary TreeBinary Search TreeBinary HeapGraphs :GraphCATEGORY ARCHIVES: DATA STRUCTURESCATEGORY ARCHIVES: CLast Minute Notes – DATA STRUCTURELast Minute Notes – C/C++Programming in C, Recursion :Principle of programming languages | Set 1C LanguageRecursionC Language | Set 1C Language | Set 2C Language | Set 3C Language | Set 4C Language | Set 5C Language | Set 6C Language | Set 7C Language | Set 8C Language | Set 9C Language | Set 10Array, Stack, Queue :ArrayStackQueueLinked Lists :Linked ListTrees, Binary search trees, Binary heaps :Binary TreesTree TraversalsBinary Search TreesBalanced Binary Search TreesHeapGraphs :GraphGraph TraversalsCommonly Asked Data Structure Interview Questions | Set 1Programming and Data Structures :Video – NPTEL lecturesVisual – Data Structure VisualizationsSection 5: Operating SystemsProcesses, System calls, threads, CPU schedulingInter‐process communication, concurrency and synchronization, deadlockMemory management and virtual memoryI/O scheduling, File systemsProcesses, threads, CPU scheduling :What happens when we turn on computer?Introduction of Operating SystemFunctions of Operating SystemTypes of Operating SystemsDual Mode operations in OSPrivileged and Non-Privileged Instructions32-bit and 64-bit operating systemsReal time systemsOperating Systems | Need and FunctionsProcess Management | IntroductionStates of a processProcess Table and Process Control Block (PCB)Process SchedulerDifference between dispatcher and schedulerProcess Management | CPU SchedulingPreemptive and Non-Preemptive SchedulingProgram for FCFS Scheduling | Set 1Program for FCFS Scheduling | Set 2 (Processes with different arrival times)Convoy Effect in Operating SystemsProgram for preemptive priority CPU schedulingProgram for Round Robin scheduling | Set 1Round Robin Scheduling with different arrival timesProgram for Shortest Job First (or SJF) scheduling | Set 1 (Non- preemptive)Program for Shortest Job First (SJF) scheduling | Set 2 (Preemptive)Shortest Job First scheduling with predicted burst timeLongest Remaining Time First (LRTF) algorithmLongest Remaining Time First (LRTF) ProgramHighest Response Ratio Next (HRRN) SchedulingProgram for Priority Scheduling | Set 1Priority Scheduling with different arrival time | Set 2Multilevel Queue SchedulingMultilevel Feedback Queue SchedulingMultiple-Processor SchedulingMeasure the time spent in context switchStarvation and Aging in Operating SystemsIntroduction of System CallOperating System | ThreadThreads and its typesMultithreadingMulti threading modelsBenefits of MultithreadingProcess-based and Thread-based MultitaskingUser Level thread Vs Kernel Level threadMicrokernelMonolithic Kernel and key differences from MicrokernelDifference between multitasking, multithreading and multiprocessingfork() in CBoot BlockInter‐process communication, concurrency and synchronization:Process Synchronization | IntroductionOperating System | Process Synchronization | Set 2Critical SectionInter Process CommunicationIPC using Message QueuesIPC through shared memoryInterprocess Communication: MethodsSemaphores in operating systemMutex vs SemaphoreLock variable synchronization mechanismPeterson’s Algorithm for Mutual Exclusion | Set 1 (Basic C implementation)Peterson’s Algorithm for Mutual Exclusion | Set 2 (CPU Cycles and Memory Fence)Peterson’s Algorithm (Using processes and shared memory)Readers-Writers Problem | Set 1 (Introduction and Readers Preference Solution)Reader-Writers solution using MonitorsProducer Consumer Problem using Semaphores | Set 1Producer-Consumer solution using Semaphores in Java | Set 2Sleeping Barber problemProcess Synchronization | MonitorsDining-Philosophers Solution Using MonitorsDining Philosopher Problem Using SemaphoresDekker’s algorithmBakery AlgorithmPriority Inversion : What the heck !What’s difference between Priority Inversion and Priority Inheritance ?Deadlock, Starvation, and LivelockDeadlock :Process Management | Deadlock IntroductionProgram for Deadlock free conditionDeadlock Prevention And AvoidanceDeadlock Detection And RecoveryResource Allocation Graph (RAG)Banker’s AlgorithmProgram for Banker’s Algorithm | Set 1 (Safety Algorithm)Banker’s Algorithm : Print all the safe stateDeadlock detection algorithmMethods of resource allocation to processes by operating systemMain memory management :Mapping virtual address to physical addressesLogical vs Physical Address in Operating SystemPagingPage Table EntriesInverted Page TableSegmentationMemory Management | Partition Allocation MethodProgram for First Fit algorithm in Memory ManagementProgram for Next Fit algorithm in Memory ManagementNon-Contiguous AllocationFixed (or static) PartitioningVariable (or dynamic) PartitioningWorking with Shared Libraries | Set 1Static and Dynamic Libraries | Set 1Buddy SystemBuddy System Memory AllocationBuddy System Memory DeallocationAllocating kernel memoryRequirements of memory management systemVirtual memory :Virtual MemorySecondary memory – Hard disk drivePage Fault HandlingPage Replacement AlgorithmsBelady’s AnomalyProgram for Optimal Page Replacement AlgorithmSecond Chance (or Clock) Page Replacement PolicyTechniques to handle ThrashingWhat exactly Spooling is all about?Difference between Spooling and BufferingOverlays in Memory ManagementSwap SpaceFile system and disk scheduling :File SystemsStructures of DirectoryFile Directory | Path NameFile Access MethodsFile Allocation MethodsOperating System | Free space managementDifference between FAT32, exFAT, and NTFS File SystemDisk Scheduling AlgorithmsProgram for SSTF disk scheduling algorithmCATEGORY ARCHIVES: OPERATING SYSTEMSLast Minute Notes – Operating SystemsProcesses, threads, CPU scheduling :Process ManagementCPU SchedulingInter‐process communication, concurrency and synchronization :Concurrency and synchronizationDeadlock :DeadlockMain memory management :Memory ManagementVirtual memory :Virtual Memory | QuestionsFile system and disk scheduling :Input Output SystemsUNIX – I NodeCommonly Asked Operating Systems Interview Questions | Set 1Operating Systems | Set 1Operating Systems | Set 2Operating Systems | Set 3Operating Systems | Set 4Operating Systems | Set 5Operating Systems | Set 6Operating Systems | Set 7Operating Systems | Set 8Operating Systems | Set 9Operating Systems | Set 10Operating Systems | Set 11Operating Systems | Set 12Operating Systems | Set 13Operating Systems | Set 14Operating Systems | Set 15Operating Systems | Set 16Operating Systems | Set 17Operating Systems :Video – NPTEL LecturesVideo – Lectures by Ravindrababu RavulaNotes – VirginiaTech Univ. Web resourceNotes – Galvin Lecture SlidesBook – William Stallings Practice Problems and SolutionsNotes – User and Kernel Level ThreadsNotes – Virtual Memory and CacheNotes – Segmentation and PagingNotes – Some Interesting problems on Virtual memorySection 6: DatabasesER‐model, Relational model : relational algebra, tuple calculus, SQLIntegrity constraints, normal formsTransactions and concurrency controlFile organization, indexing (e.g., B and B+ trees)ER‐model :Database Management System – Introduction | Set 1Database Management System Introduction | Set 2 (3-Tier Architecture)DBMS Architecture 2-Level, 3-LevelNeed for DBMSAdvantages of DBMS over File systemChoice of DBMS | Economic factorsData Abstraction and Data IndependenceER ModelRecursive RelationshipsMinimization of ER DiagramEnhanced ER ModelMapping from ER Model to Relational ModelRelational model (relational algebra, tuple calculus) :Relational ModelRelational Algebra – OverviewDBMS | Anomalies in Relational ModelRelational Model Introduction and Codd RulesKeys in Relational Model (Candidate, Super, Primary, Alternate and Foreign)Relational Algebra-Basic OperatorsRelational Algebra – Extended OperatorsTupple Relational CalculusDBMS | How to solve Relational Algebra problems for GATEDBMS | Row oriented vs. column oriented data storesDatabase design (integrity constraints, normal forms) :Database Normalization | IntroductionDatabase Normalization | Normal FormsFunctional Dependency and Attribute ClosureFinding Attribute Closure and Candidate Keys using Functional DependenciesNumber of possible SuperkeysLossless DecompositionDependency Preserving DecompositionLossless Join and Dependency Preserving DecompositionDBMS | How to find the highest normal form of a relationDBMS | Minimum relations satisfying 1NFEquivalence of Functional DependenciesArmstrong’s Axioms in Functional DependencyCanonical CoverDenormalization in DatabasesIntroduction of 4th and 5th Normal formQuery languages (SQL) :Structured Query Language (SQL)Inner VS Outer JoinHaving Vs Where ClauseDatabase ObjectsNested Queries in SQLJoin operation Vs nested queryIndexing in Databases | Set 1SQL queries on clustered and non-clustered IndexesSQL TutorialTransactions and concurrency control :Concurrency Control -IntroductionDatabase Recovery TechniquesACID Properties in DBMSLog based recoveryDBMS | Why recovery is needed?Transaction Isolation Levels in DBMSConcurrency Control | Types of SchedulesDBMS | Types of Recoverability of Schedules and easiest way to test scheduleConflict SerializabilityPrecedence Graph For Testing Conflict SerializabilityHow to test if two schedules are View Equal or not ?Recoverability of SchedulesDeadlock in DBMSStarvation in DBMSConcurrency Control Protocols | Lock Based ProtocolConcurrency Control Protocol | Two Phase Locking (2-PL)-IConcurrency Control Protocol | Two Phase Locking (2-PL)-IIConcurrency Control Protocol | Two Phase Locking (2-PL)-IIIConcurrency Control Protocol | Thomas Write RuleConcurrency Control Protocols | Timestamp Ordering ProtocolsConcurrency Control Protocol | Multiple Granularity LockingConcurrency Control Protocol | Graph Based ProtocolIntroduction to TimeStamp and Deadlock Prevention SchemesImplementation of Locking in DBMSDBMS | Challenges of database securityFile structures (sequential files, indexing, B and B+ trees) :Indexing in Databases | Set 1File Organization – Set 1File Organization – Set 2 (Hashing in DBMS)File Organization – Set 3B-Tree | Set 1 (Introduction)B-Tree | Set 2 (Insert)B-Tree | Set 3 (Delete)Database File Indexing – B+ Tree (Introduction)RAIDData WarehousingData MiningData ReplicationCATEGORY ARCHIVES: DBMSLast Minute Notes – DBMSER‐model:ER and Relational ModelsRelational model (relational algebra, tuple calculus):ER and Relational ModelsDatabase design (integrity constraints, normal forms):Database Design(Normal Forms)Query languages (SQL) :SQLTransactions and concurrency control:Transactions and concurrency controlFile structures (sequential files, indexing, B and B+ trees):File structures (sequential files, indexing, B and B+ trees)Practice questions on B and B+ TreesCommonly asked DBMS interview questions | Set 1Commonly asked DBMS interview questions | Set 2Database Management Systems | Set 1Database Management Systems | Set 2Database Management Systems | Set 3Database Management Systems | Set 4Database Management Systems | Set 5Database Management Systems | Set 6Database Management Systems | Set 7Database Management Systems | Set 8Database Management Systems | Set 9Database Management Systems | Set 10Database Management Systems | Set 11Databases :Video – NPTEL LecturesNotes – Lecture Slides Silberschatz, Korth and SudarshanNotes – Lecture Slides Raghu Ramakrishnan and Johannes GehrkeNotes – Stanford DBMS course Lecture SlidesNotes – Jeff Ullman’s Lecture SlidesNotes – Canonical CoverNotes – IndexingVisual – B TreeNotes – B+ TreeVisual – B+ TreeSection 7: Computer NetworksConcept of layering: OSI and TCP/IP Protocol Stacks;Basics of packet, circuit and virtual circuit-switching;Data link layer: framing, error detection, Medium Access Control, Ethernet bridging;Routing protocols: shortest path, flooding, distance vector and link state routing;Fragmentation and IP addressing, IPv4, CIDR notation, Basics of IP support protocols (ARP, DHCP, ICMP), Network Address Translation (NAT);Transport layer: flow control and congestion control, UDP, TCP, sockets;Application layer protocols: DNS, SMTP, HTTP, FTP, Email.Network Fundamental and Physical layer :Basics of Computer NetworkingNetwork goalsNetwork TopologiesTypes of area networks – LAN, MAN and WANMANET: Mobile Ad hoc NetworkTypes of MANETTypes of Transmission MediaTransmission Modes in Computer Networks (Simplex, Half-Duplex and Full-Duplex)Redundant link problemsDigital Subscriber Line (DSL)What is Scrambling?Difference between Unipolar, Polar and Bipolar Line Coding SchemesManchester EncodingAnalog to digital conversionDigital to Analog ConversionAnalog to Analog Conversion (Modulation)Difference between Broadband and Baseband TransmissionLet’s experiment with NetworkingLayers of OSI ModelTCP/IP ModelData Link layer :Multiple Access ProtocolsP2P(Peer To Peer) File SharingFraming In Data Link LayerLAN Technologies | ETHERNETEthernet Frame FormatToken Ring frame formatBit StuffingDifference between Byte stuffing and Bit stuffingHamming CodeCarrier sense multiple access (CSMA)Controlled Access ProtocolsBack-off Algorithm for CSMA/CDCollision Detection in CSMA/CDEfficiency of CSMA/CDEfficiency Of Token RingComputer Networks | Error DetectionStop and Wait ARQSliding Window Protocol | Set 1 (Sender Side)Sliding Window Protocol | Set 2 (Receiver Side)Sliding Window Protocol | Set 3 (Selective Repeat)Sliding Window protocols Summary With QuestionsProgram to remotely Power On a PC over the internet using the Wake-on-LAN protocolProgram to calculate the Round Trip Time (RTT)Introduction of MAC AddressCollision Avoidance in wireless networksMaximum data rate (channel capacity) for noiseless and noisy channelsTypes of switchesNetwork layer :InternetworkingLine Configuration in Computer NetworksDifference between Unicast, Broadcast and MulticastCollision Domain and Broadcast DomainIP Addressing | Introduction and Classful AddressingNetwork Layer | Introduction and IPv4 Datagram HeaderNetwork Layer | Ipv4 Datagram Fragmentation and DelaysFragmentation at Network LayerInternet Protocol v6 | IPv6Internet Protocol version 6 (IPv6) HeaderIP Addressing | Classless AddressingSupernettingComputer Networks | Longest Prefix Matching in RoutersProgram to determine class, Network and Host ID of an IPv4 addressC Program to find IP Address, Subnet Mask & Default GatewayIPv4 classless Subnet equationIntroduction to variable length subnet mask (VLSM)Network address translation (NAT)Types of Network address translation (NAT)Classification of Routing Algorithms – Set 1Types of routing – Set 2Classes of routing protocols – Set 3Distance vector routing v/s Link state routingFixed and Flooding Routing algorithmsRouting v/s Routed ProtocolsUnicast Routing – Link State RoutingRouting Protocols Set 1 (Distance Vector Routing)Route Poisoning and Count to infinity problemOnion RoutingRouter on a stickInternet Control Message Protocol (ICMP) | Computer NetworksHot Standby Router Protocol (HSRP)OSPF protocol fundamentalsOSPF protocol StatesOSPF router roles and configurationRoot Bridge Election in Spanning Tree ProtocolTypes of Spanning Tree Protocol (STP)EIGRP fundamentalsFeatures of Enhanced Interior Gateway Routing Protocol (EIGRP)Routing Information Protocol (RIP)Routing Interface Protocol (RIP) V1 & V2Link state advertisement (LSA)Administrative Distance (AD) and Autonomous System (AS)Circuit SwitchingPacket Switching and DelaysDifferences between Virtual Circuits & Datagram NetworksComputer Network | Circuit Switching VS Packet SwitchingTracerouteHow ARP works?ARP, Reverse ARP(RARP), Inverse ARP(InARP), Proxy ARP and Gratuitous ARPPacket flow in the same networkPacket flow in different networkDifference between layer-2 and layer-3 switchesWhat’s difference between Ping and Traceroute?Computer Network | ServersWhat is Local Host?Transport layer :Transport Layer responsibilitiesCongestion ControlLeaky Bucket AlgorithmTCP | Services and Segment structureTCP Congestion ControlTCP 3-Way Handshake ProcessTCP Connection EstablishmentTCP Connection TerminationError Control in TCPTCP TimersTCP flagsTCP Server-Client implementation in CUser Datagram Protocol (UDP)Differences between TCP and UDPMultiplexing and Demultiplexing in Transport LayerApplication layer :Protocols in Application LayerDNS (Domain Name Server) | NetWorkingAddress Resolution in DNSDNS Spoofing or DNS Cache poisoningWhy does DNS use UDP and not TCP?Dynamic Host Configuration Protocol (DHCP)DHCP Relay AgentHow DHCP server dynamically assigns IP address to a host?Simple network management protocol (SNMP)Simple Mail Transfer Protocol (SMTP)File Transfer Protocol (FTP)HTTP Non-Persistent & Persistent ConnectionMultipurpose Internet mail extension (MIME)What’s difference between http:// and https:// ?What’s difference between HTML and HTTP ?What’s difference between The Internet and The Web ?Basics of Wi-FiWifi protected setup (WPS)Wifi protected access (WPA)LiFi vs. WiFiNetwork Devices (Hub, Repeater, Bridge, Switch, Router and Gateways)Network security :Basic Network AttacksTypes of VirusesIntroduction to FirewallZone-based firewallFirewall methodologiesDeniel of Service and PreventionCryptography | Introduction to Crypto-terminologiesDenial of Service DDoS attackTypes of DNS Attacks and Tactics for SecurityTypes of Security attacks | Active and Passive attacksBirthday attackDigital Signatures and CertificatesLZW (Lempel–Ziv–Welch) Compression techniqueRC4 Encryption AlgorithmRC5 Encryption AlgorithmSHA-512 HashRSA Algorithm in CryptographyRSA Algorithm using Multiple Precision Arithmetic LibraryWeak RSA decryption with Chinese-remainder theoremImplementation of Diffie-Hellman AlgorithmDNA CryptographyPort securityUnicodeMessage Authentication CodesHow message authentication code works?System securityHash Functions in System SecurityThe CIA triadImage SteganographyAccess-lists (ACL)Data encryption standard (DES)Difference between AES and DES ciphersCATEGORY ARCHIVES: COMPUTER NETWORKSLast Minute Notes – Computer NetworksNetwork Fundamental and Physical layer :Computer NetworksData Link layer :Data Link LayerNetwork layer :Network LayerIP AddressingTransport layer :Transport LayerApplication layer :HTTP Non-Persistent & Persistent Connection | Set 2 (Practice Question)Application LayerNetwork security :Network SecurityCommonly asked Computer Networks Interview Questions | Set 1Computer Networks | Set 1Computer Networks | Set 2Computer Networks | Set 3Computer Networks | Set 4Computer Networks | Set 5Computer Networks | Set 6Computer Networks | Set 7Computer Networks | Set 8Computer Networks | Set 9Computer Networks | Set 10Computer Networks | Set 11Computer Networks | Set 12Computer Networks :Video – NPTEL LecturesVideo – Lectures by Ravindrababu RavulaNotes – Lecture Notes IIT KanpurNotes – Web Resources on Computer Networks by TanenbaumVisual – Sliding Window AnimationNotes – Sliding Window MITNotes – IPv4 vs IPv6Section 8: Computer Organization and ArchitectureMachine instructions and addressing modesALU, data‐path and control unitInstruction pipelining, pipeline hazardsMemory hierarchy: cache, main memory and secondary storageI/O interface (Interrupt and DMA mode)Machine instructions and addressing modes :Von Neumann architectureBasic Computer InstructionsInstruction Formats (Zero, One, Two and Three Address Instruction)Stack based CPU OrganizationGeneral Register based CPU OrganizationSingle Accumulator based CPU organizationProblem Solving on Instruction FormatAddressing ModesMachine InstructionsDifference between CALL and JUMP instructionsSimplified Instructional Computer (SIC)Hardware architecture (parallel computing)Flynn’s taxonomyGenerations of computerAmdahl’s law and its proofALU, data‐path and control unit :Control Unit and designHardwired v/s Micro-programmed Control UnitHardwired Vs Micro-programmed Control unit | Set 2Horizontal micro-programmed Vs Vertical micro-programmed control unitSynchronous Data TransferInstruction pipelining :Pipelining | Set 1 (Execution, Stages and Throughput)Pipelining | Set 2 (Dependencies and Data Hazard)Pipelining | Set 3 (Types and Stalling)Different Instruction CyclesPerformance of ComputerMicro-OperationRISC and CISCRISC and CISC | Set 2Cache Memory :Memory Hierarchy Design and its CharacteristicsCache MemoryCache Organization | IntroductionLocality and Cache friendly codeWhat’s difference between CPU Cache and TLB?Read and Write operations in memoryMemory InterleavingIntroduction to memory and memory units2D and 2.5D Memory organizationTypes of computer memory (RAM and ROM)Different Types of RAMRAM vs ROMI/O interface (Interrupt and DMA mode) :I/O Interface (Interrupt and DMA Mode)Input-Output ProcessorKernel I/O SubsystemMemory mapped I/O and Isolated I/OBUS ArbitrationPriority Interrupts | (S/W Polling and Daisy Chaining)Asynchronous input output synchronizationComputer PortsClusters In Computer OrganisationHuman – Computer interaction through the agesCATEGORY ARCHIVES: COMPUTER ORGANIZATION & ARCHITECTUREComputer Organization and Architecture :Quiz on MicroprocessorsComputer Organization and ArchitectureComputer Organization and Architecture :Video – NPTEL LecturesBook – Carl HamacherNotes – PipeliningNotes – Cache MemoryNotes – Cache AssociativitySection 9: Theory of ComputationRegular expressions and finite automataContext-free grammars and push-down automataRegular and context-free languages, pumping lemmaTuring machines and undecidabilityRegular expression, langauges, grammar and finite automata :Introduction of Theory of ComputationFinite Automata | IntroductionChomsky HierarchyRegular Expressions, Regular Grammar and Regular LanguagesPumping LemmaArden’s TheoremHow to identify if a language is regular or notDesigning Finite Automata from Regular ExpressionNFA with epsilon move to DFA ConversionConversion from NFA to DFAMinimization of DFAGenerating regular expression from finite automataUnion & Intersection of Regular languages with CFLDesigning Deterministic Finite Automata (Set 1)Designing Deterministic Finite Automata (Set 2)DFA of a string with at least two 0’s and at least two 1’sDFA machines accepting odd number of 0’s or/and even number of 1’sDFA for accepting the language L = {anbm | n+m=even}DFA for Strings not ending with “THE”Union process in DFAConcatenation process in DFAStar Height of Regular Expression and Regular LanguageMealy and Moore MachinesDifference between Mealy machine and Moore machineContext free langauges, grammar and push down automata :Pushdown AutomataPushdown Automata Acceptance by Final StateCheck if the language is Context Free or NotConstruct Pushdown Automata for given languagesConstruct Pushdown automata for L = {0n1m2m3n | m,n ≥ 0}Construct Pushdown automata for L = {0n1m2(n+m) | m,n ≥ 0}Construct Pushdown Automata for all length palindromeNPDA for the language L ={wϵ{a,b}*| w contains equal no. of a’s and b’s}NPDA for accepting the language L = {an bn | n>=1}NPDA for accepting the language L = {an bm cn | m,n>=1}NPDA for accepting the language L = {an bn cm | m,n>=1}NPDA for accepting the language L = {am b(2m) | m>=1}NPDA for accepting the language L = {ambncpdq | m+n=p+q ; m,n,p,q>=1}Construct Pushdown automata for L = {a(2*m)c(4*n)dnbm | m,n ≥ 0}NPDA for accepting the language L = {ambnc(m+n) | m,n≥1}NPDA for accepting the language L = {amb(m+n)cn | m,n≥1}NPDA for accepting the language L = {a2mb3m | m≥1}NPDA for accepting the language L = {amb(2m+1) | m≥1}NPDA for L = {0i1j2k | i==j or j==k ; i , j , k >= 1}Closure Properties of Context Free LanguagesAmbiguity in CFG and CFLSimplifying Context Free GrammarsConverting Context Free Grammar to Chomsky Normal FormConverting Context Free Grammar to Greibach Normal FormRelationship between grammar and languageContext Sensitive langauges :Context-sensitive Grammar (CSG) and Language (CSL)Turing machines and undecidability :Recursive and Recursive Enumerable LanguagesTuring MachineHalting ProblemTuring Machine for additionTuring machine for subtractionTuring Machine for subtraction | Set 2Turing machine for multiplicationTuring machine for copying dataConstruct a Turing Machine for language L = {0n1n2n | n≥1}Construct a Turing Machine for language L = {wwr | w ∈ {0, 1}}Construct a Turing Machine for language L = {ww | w ∈ {0,1}}Construct Turing machine for L = {anbm a(n+m) | n,m≥1}Construct a Turing machine for L = {aibjck | i*j = k; i, j, k ≥ 1}Proof that Hamiltonian Path is NP-CompleteProof that vertex cover is NP completeDecidabilityDecidable and undecidable problemsUndecidability and ReducibilityComputable and non-computable problemsCATEGORY ARCHIVES: THEORY OF COMPUTATION & AUTOMATALast Minute Notes – Theory of ComputationRegular expression, langauges, grammar and finite automata :Regular languages and finite automataPractice problems on finite automataPractice problems on finite automata | Set 2Context free langauges, grammar and push down automata :Context free languages and Push-down automataContext Sensitive langauges :.Turing machines and undecidability :Recursively enumerable sets and Turing machinesUndecidabilityAutomata TheoryAutomata Theory | Set 1Automata Theory | Set 2Automata Theory | Set 3Automata Theory | Set 4Automata Theory | Set 5Automata Theory | Set 6Theory of Computation :Video – NPTEL LecturesVideo – Lectures by Ravindrababu RavulaNotes – NFA and DFANotes – Non Regular languageNotes – PDANotes – Turing MachineNotes – Rice TheoremSection 10: Compiler DesignLexical analysis, parsing, syntax-directed translationRuntime environmentsIntermediate code generationLocal optimisation,Data flow analyses: constant propagation, liveness analysis, common subexpression elimination.Introduction of Compiler :Introduction of Compiler designPhases of a CompilerSymbol Table in CompilerStatic and Dynamic ScopingGeneration of Programming LanguagesError Handling in Compiler DesignError detection and Recovery in CompilerLinkerLexical analysis :Lexical AnalysisC program to detect tokens in a C programFast Lexical Analyzer GeneratorParsing :Classification of Context Free GrammarsAmbiguous GrammarWhy FIRST and FOLLOW?FIRST Set in Syntax AnalysisFOLLOW Set in Syntax AnalysisProgram to calculate First and Follow sets of given grammarIntroduction to Syntax AnalysisParsing Set 1Parsing Set 2Parsing Set 3Shift Reduce Parser in CompilerClassification of top down parsersOperator grammar and precedence parserSyntax directed transalation :Syntax Directed TranslationS – attributed and L – attributed SDTs in Syntax directed translationRuntime environments :Runtime EnvironmentsIntermediate code generation :Intermediate Code GenerationThree address code in CompilerDetection of a Loop in Three Address CodeCode OptimizationIntroduction of Object CodeData flow analysis in CompilerCATEGORY ARCHIVES: COMPILER DESIGNLast Minute Notes – Compiler DesignIntroduction of Compiler :MCQ on Memory allocation and compilation processLexical analysis :Lexical analysisParsing :Compiler Theory | Set 1Compiler Theory | Set 2Syntax directed transalation :Parsing and Syntax directed translationRuntime environments :.Intermediate code generation :Code Generation and OptimizationCompiler Design :Video – NPTEL LecturesVideo – Lectures by Ravindrababu RavulaBook – Basics of Compiler DesignNotes – Bivas Mitra IITgpNotes – LR ParsingNotes – Syntax Directed TranslationNotes – Intermediate Code GenerationSection 11: Digital LogicBoolean algebraCombinational and sequential circuits. MinimizationNumber representations and computer arithmetic (fixed and floating point)Introduction of Boolean Algebra and Logic Gates :Logic GatesProperties of Boolean algebraMinimization of Boolean FunctionsRepresentation of Boolean FunctionsCanonical and Standard FormFunctional CompletenessK-MapImplicants in K-MapPDNF and PCNFVariable entrant map (VEM)Consensus theoremDifference between combinational and sequential circuitCombinational Circuits :Half AdderFull AdderHalf SubtractorFull SubtractorHalf Adder and Half Subtractor using NAND NOR gatesEncoders and DecodersEncoderBinary DecoderCombinational circuits using DecoderMultiplexersCarry Look-Ahead AdderParallel Adder & Parallel SubtractorBCD AdderMagnitude ComparatorBCD to 7 Segment DecoderProgrammable Logic ArrayProgramming Array LogicRead-Only Memory (ROM)Static HazardsSequential Circuits :Introduction of Sequential CircuitsFlip-flop types and their ConversionSynchronous Sequential CircuitsCountersRing Countern-bit Johnson CounterRipple CounterDesign counter for given sequenceMaster Slave JK Flip FlopAsynchronous Sequential CircuitsShift RegistersDesign 101 sequence detectorAmortized analysis for increment in counterNumber Representation and Computer Airthmetic :Number System and base conversionsCode Converters – BCD(8421) to/from Excess-3Code Converters – Binary to/from Gray CodeProgram for Decimal to Binary ConversionProgram for Binary To Decimal ConversionProgram for Decimal to Octal ConversionProgram for Octal to Decimal ConversionProgram for Hexadecimal to Decimal ConversionComputer Arithmetic | Set – 1Computer Arithmetic | Set – 2Floating Point RepresentationWhat’s difference between 1’s Complement and 2’s Complement?Booth’s AlgorithmRestoring Division Algorithm For Unsigned IntegerNon-Restoring Division For Unsigned IntegerCATEGORY ARCHIVES: DIGITAL ELECTRONICS & LOGIC DESIGNLast Minute Notes – Digital ElectronicsDigital Logic :Digital Logic (101)Number representationDigital Logic :Video – NPTEL LecturesVideo – Lectures by Ravindrababu RavulaNotes – Number System-SwarthmoreNotes – IEEE Standard 754 Floating Point NumbersLast Updated on : 25th April, 2019Other Useful Links :Important Topics for GATE 2020 Computer ScienceLast Minute Notes – GATE 2020Top 5 Topics for Each Section of GATE CS SyllabusGATE CS 2020 SyllabusGATE CS 2020 Important Official DatesArticles on Computer SciencePrevious year papers GATE CS, solutions and explanations year-wise and topic-wise.GATE CS 2018 Mock TestsPlease write comments if you find anything incorrect, or you want to share more information about the topic discussed above!My Personal Notes arrow_drop_upSaveLoad Comments× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register