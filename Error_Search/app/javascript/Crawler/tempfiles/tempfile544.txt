Commonly Asked Java Programming Interview Questions | Set 1 - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesCommonly Asked Java Programming Interview Questions | Set 2Commonly Asked Java Programming Interview Questions | Set 1Interview Questions for Java ProfessionalsDifferent ways to create objects in JavaHow to swap or exchange objects in Java?Inheritance in JavaEncapsulation in JavaAbstraction in JavaDynamic Method Dispatch or Runtime Polymorphism in JavaAssociation, Composition and Aggregation in JavaAccess and Non Access Modifiers in JavaAccess Modifiers in Java‘this’ reference in JavaOverloading in JavaOverriding in JavaObject Oriented Programming (OOPs) Concept in JavaPolymorphism in JavaDifference between Compile-time and Run-time Polymorphism in JavaFunction Overloading vs Function Overriding in C++Function Overloading in C++Functions that cannot be overloaded in C++Function overloading and const keywordFunction Overloading and Return Type in C++Arrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesFor-each loop in JavaReverse a string in JavaHow to iterate any Map in JavaTable of ContentsCommonly Asked Java Programming Interview Questions | Set 2Commonly Asked Java Programming Interview Questions | Set 1Interview Questions for Java ProfessionalsDifferent ways to create objects in JavaHow to swap or exchange objects in Java?Inheritance in JavaEncapsulation in JavaAbstraction in JavaDynamic Method Dispatch or Runtime Polymorphism in JavaAssociation, Composition and Aggregation in JavaAccess and Non Access Modifiers in JavaAccess Modifiers in Java‘this’ reference in JavaOverloading in JavaOverriding in JavaObject Oriented Programming (OOPs) Concept in JavaPolymorphism in JavaDifference between Compile-time and Run-time Polymorphism in JavaFunction Overloading vs Function Overriding in C++Function Overloading in C++Functions that cannot be overloaded in C++Function overloading and const keywordFunction Overloading and Return Type in C++Arrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesFor-each loop in JavaReverse a string in JavaHow to iterate any Map in JavaImprove Article Save Article Like Article Commonly Asked Java Programming Interview Questions | Set 1Difficulty Level : MediumLast Updated : 28 Jun, 2021 Why is Java called the ‘Platform Independent Programming Language’? Platform independence means that execution of your program does not dependent on type of operating system(it could be any : Linux, windows, Mac ..etc). So compile code only once and run it on any System (In C/C++, we need to compile the code for every machine on which we run it). Java is both compiler(javac) and interpreter(jvm) based lauguage. Your java source code is first compiled into byte code using javac compiler. This byte code can be easily converted to equivalent machine code using JVM. JVM(Java Virtual Machine) is available in all operating systems we install. Hence, byte code generated by javac is universal and can be converted to machine code on any operating system, this is the reason why java is platform independent. Explain Final keyword in java? Final keyword in java is used to restrict usage of variable, class and method. Variable: Value of Final variable is constant, you can not change it.Method: you can’t override a Final method.Class: you can’t inherit from Final class.Refer this for detailsWhen is the super keyword used? super keyword is used to refer:immediate parent class constructor,immediate parent class variable,immediate parent class method.Refer this for details. What is the difference between StringBuffer and String? String is an Immutable class, i.e. you can not modify its content once created. While StringBuffer is a mutable class, means you can change its content later. Whenever we alter content of String object, it creates a new string and refer to that,it does not modify the existing one. This is the reason that the performance with StringBuffer is better than with String.Refer this for details. Why multiple inheritance is not supported in java? Java supports multiple inheritance but not through classes, it supports only through its interfaces. The reason for not supporting multiple inheritance is to avoid the conflict and complexity arises due to it and keep Java a Simple Object Oriented Language. If we recall this in C++, there is a special case of multiple inheritance (diamond problem) where you have a multiple inheritance with two classes which have methods in conflicts. So, Java developers decided to avoid such conflicts and didn’t allow multiple inheritance through classes at all. Can a top level class be private or protected? Top level classes in java can’t be private or protected, but inner classes in java can. The reason for not making a top level class as private is very obvious, because nobody can see a private class and thus they can not use it. Declaring a class as protected also doesn’t make any sense. The only difference between default visibility and protected visibility is that we can use it in any package by inheriting it. Since in java there is no such concept of package inheritance, defining a class as protected is no different from default. What is the difference between ‘throw’ and ‘throws’ in Java Exception Handling? Following are the differences between two:throw keyword is used to throw Exception from any method or static block whereas throws is used to indicate that which Exception can possibly be thrown by this methodIf any method throws checked Exception, then caller can either handle this exception(using try catch block )or can re throw it by declaring another ‘throws’ clause in method declaration.throw clause can be used in any part of code where you feel a specific exception needs to be thrown to the calling methodE.g.throwthrow new Exception(“You have some exception”)throw new IOException(“Connection failed!!”)throwsthrows IOException, NullPointerException, ArithmeticException What is finalize() method? Unlike c++ , we don’t need to destroy objects explicitly in Java. ‘Garbage Collector‘ does that automatically for us. Garbage Collector checks if no references to an object exist, that object is assumed to be no longer required, and the memory occupied by the object can be freed. Sometimes an object can hold non-java resources such as file handle or database connection, then you want to make sure these resources are also released before object is destroyed. To perform such operation Java provide protected void finalize() in object class. You can override this method in your class and do the required tasks. Right before an object is freed, the java run time calls the finalize() method on that object. Refer this for more details. Difference in Set and List interface? Set and List both are child interface of Collection interface. There are following two main differences between themList can hold duplicate values but Set doesn’t allow this.In List interface data is present in the order you inserted but in the case of Set insertion order is not preserved. What will happen if you put System.exit(0) on try or catch block? Will finally block execute? By Calling System.exit(0) in try or catch block, we can skip the finally block. System.exit(int) method can throw a SecurityException. If Sysytem.exit(0) exits the JVM without throwing that exception then finally block will not execute. But, if System.exit(0) does throw security exception then finally block will be executed. Commonly Asked Java Programming Interview Questions | Set 2Interview Questions for Java ProfessionalsPractice Quizzes of JavaJava Articles This article is compiled by Dharmesh Singh. You may like to see following:Commonly Asked C Programming Interview Questions | Set 1Commonly Asked C Programming Interview Questions | Set 2Amazon’s most asked interview questionsMicrosoft’s most asked interview questionsAccenture’s most asked Interview QuestionsCommonly Asked OOP Interview QuestionsCommonly Asked C++ Interview QuestionsCommonly asked DBMS interview questions | Set 1Commonly asked DBMS interview questions | Set 2Commonly Asked Operating Systems Interview Questions | Set 1Commonly Asked Data Structure Interview Questions.Commonly Asked Algorithm Interview QuestionsCommonly asked Computer Networks Interview QuestionsTop 10 algorithms in Interview QuestionsAttention reader! Don’t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikePreviousCommonly Asked Java Programming Interview Questions | Set 2Next Interview Questions for Java ProfessionalsRecommended ArticlesPage :Commonly Asked Java Programming Interview Questions | Set 219, Oct 1610 Most asked Questions from Java Programmers15, May 15Frequently asked questions for Java Developer Position from a fresher19, May 17Commonly Used Methods in LocalDate, LocalTime and LocalDateTime Classes in Java08, Mar 21Java Interview Questions on Constructors07, Apr 17Interview Questions for Java Professionals27, Sep 18Top 20 Java Multithreading Interview Questions & Answers04, Aug 21Multi-threaded chat Application in Java | Set 1 (Server Side Programming)16, Jun 17Multi-threaded Chat Application in Java | Set 2 (Client Side Programming)16, Jun 17Java tricks for competitive programming (for Java 8)06, Jun 17Java Tricky Output Questions18, Oct 18Tips and Tricks for Competitive Programmers | Set 2 (Language to be used for Competitive Programming)20, Mar 16Creative Programming In Processing | Set 1 (Random Walker)11, Jul 17Difference Between java.sql.Time, java.sql.Timestamp and java.sql.Date in Java07, Apr 21Fast I/O in Java in Competitive Programming13, May 16Socket Programming in Java31, May 16Comparison of Java with other programming languages16, Jan 19Java Programming Basics14, Feb 19Different Approaches to Concurrent Programming in Java01, Mar 19Functional Programming in Java with Examples19, May 20Top 7 Java Project Ideas To Enhance Programming Skills19, Nov 20What is Snippet and How to Create Java Snippets in VSCode for Competitive Programming?02, Dec 20Multi-Language Programming - Java Process Class, JNI and IO09, Jul 21Why Java Language is Slower Than CPP for Competitive Programming?18, Dec 20Article Contributed By :GeeksforGeeksVote for difficultyCurrent difficulty : MediumEasy Normal Medium Hard ExpertArticle Tags :JavaPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in JavaArrayList in JavaHashMap in Java with ExamplesMultidimensional Arrays in JavaInitialize an ArrayList in JavaHow to add an element to an Array in Java?More related articles in JavaLinkedList in JavaInterfaces in JavaStack Class in JavaCollections in JavaMath pow() method in Java with Example× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register