Default Methods In Java 8 - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesDefault Methods In Java 8Static method in Interface in JavaFunction Interface in Java with ExamplesAnnotations in JavaSerialization and Deserialization in Java with Exampletransient keyword in Javavolatile Keyword in Javastrictfp keyword in javaNative Keyword in JavaMarker interface in JavaFunctional Interfaces in JavaLambda Expressions in Java 8Stream In Javathrow and throws in JavaUser-defined Custom Exception in JavaInfinity or Exception in Java when divide by 0?Java Multiple Catch BlockChained Exceptions in JavaNull Pointer Exception In JavaOutput of Java program | Set 12(Exception Handling)Java | Exception Handling | Question 1Java | Exception Handling | Question 2Java | Exception Handling | Question 3Java | Exception Handling | Question 4Java | Exception Handling | Question 8Arrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesFor-each loop in JavaReverse a string in JavaTable of ContentsDefault Methods In Java 8Static method in Interface in JavaFunction Interface in Java with ExamplesAnnotations in JavaSerialization and Deserialization in Java with Exampletransient keyword in Javavolatile Keyword in Javastrictfp keyword in javaNative Keyword in JavaMarker interface in JavaFunctional Interfaces in JavaLambda Expressions in Java 8Stream In Javathrow and throws in JavaUser-defined Custom Exception in JavaInfinity or Exception in Java when divide by 0?Java Multiple Catch BlockChained Exceptions in JavaNull Pointer Exception In JavaOutput of Java program | Set 12(Exception Handling)Java | Exception Handling | Question 1Java | Exception Handling | Question 2Java | Exception Handling | Question 3Java | Exception Handling | Question 4Java | Exception Handling | Question 8Arrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesFor-each loop in JavaReverse a string in JavaImprove Article Save Article Like Article Default Methods In Java 8Difficulty Level : MediumLast Updated : 17 Feb, 2020Before Java 8, interfaces could have only abstract methods. The implementation of these methods has to be provided in a separate class. So, if a new method is to be added in an interface, then its implementation code has to be provided in the class implementing the same interface. To overcome this issue, Java 8 has introduced the concept of default methods which allow the interfaces to have methods with implementation without affecting the classes that implement the interface.// A simple program to Test Interface default// methods in javainterface TestInterface{ // abstract method public void square(int a); // default method default void show() { System.out.println("Default Method Executed"); }} class TestClass implements TestInterface{ // implementation of square abstract method public void square(int a) { System.out.println(a*a); } public static void main(String args[]) { TestClass d = new TestClass(); d.square(4); // default method executed d.show(); }}Output: 16 Default Method Executed The default methods were introduced to provide backward compatibility so that existing interfaces can use the lambda expressions without implementing the methods in the implementation class. Default methods are also known as defender methods or virtual extension methods.Static Methods:The interfaces can have static methods as well which is similar to static method of classes.// A simple Java program to TestClassnstrate static// methods in javainterface TestInterface{ // abstract method public void square (int a); // static method static void show() { System.out.println("Static Method Executed"); }} class TestClass implements TestInterface{ // Implementation of square abstract method public void square (int a) { System.out.println(a*a); } public static void main(String args[]) { TestClass d = new TestClass(); d.square(4); // Static method executed TestInterface.show(); }}Output: 16 Static Method ExecutedDefault Methods and Multiple InheritanceIn case both the implemented interfaces contain default methods with same method signature, the implementing class should explicitly specify which default method is to be used or it should override the default method.// A simple Java program to demonstrate multiple// inheritance through default methods.interface TestInterface1{ // default method default void show() { System.out.println("Default TestInterface1"); }} interface TestInterface2{ // Default method default void show() { System.out.println("Default TestInterface2"); }} // Implementation class codeclass TestClass implements TestInterface1, TestInterface2{ // Overriding default show method public void show() { // use super keyword to call the show // method of TestInterface1 interface TestInterface1.super.show(); // use super keyword to call the show // method of TestInterface2 interface TestInterface2.super.show(); } public static void main(String args[]) { TestClass d = new TestClass(); d.show(); }}Output:Default TestInterface1 Default TestInterface2Important Points:Interfaces can have default methods with implementation in Java 8 on later.Interfaces can have static methods as well, similar to static methods in classes.Default methods were introduced to provide backward compatibility for old interfaces so that they can have new methods without affecting existing code.This article is contributed by Akash Ojha. If you like GeeksforGeeks and would like to contribute, you can also write an article using contribute.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.Attention reader! Don’t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikeNext Static method in Interface in JavaRecommended ArticlesPage :Java Program to Illustrate the Availability of Default Constructor of the Super Class to the Sub Class by Default05, Dec 20Static methods vs Instance methods in Java09, Dec 16How does default virtual behavior differ in C++ and Java ?21, Oct 10Default constructor in Java04, Nov 10Can We Override Default Method in Java?02, Feb 21Replace null values with default value in Java Map29, Oct 18Java Program to Open Input URL in System Default Browser in Windows18, Jan 21How to Get and Set Default Character Encoding or Charset in Java?08, Mar 21Default Values Assigned to Primitive Data Types in Java14, Apr 21Default Array Values in Java19, Oct 16Java Program to Show Inherited Constructor Calls Parent Constructor By Default20, Sep 21How to change the default icon of Android App13, May 20How to Change Default User and Password in Spring Security?26, Nov 21Java.util.BitSet class methods in Java with Examples | Set 218, Nov 16Java.io.BufferedWriter class methods in Java29, Dec 16java.lang.Character class methods | Set 129, Nov 16Private and final methods in Java21, Dec 12Can we Overload or Override static methods in java ?23, Jun 13Can we override private methods in Java?10, Sep 13Java Interface methods19, Apr 16ArrayList to Array Conversion in Java : toArray() Methods01, Nov 16HashMap Class Methods in Java with Examples | Set 1 (put(), get(), isEmpty() and size())10, Nov 16Hashmap methods in Java with Examples | Set 2 (keySet(), values(), containsKey()..)10, Nov 16BitSet class methods in Java with Examples | Set 321, Nov 16Article Contributed By :GeeksforGeeksVote for difficultyCurrent difficulty : MediumEasy Normal Medium Hard ExpertImproved By :SyedAtamishAligwattsArticle Tags :JavaPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in JavaObject Oriented Programming (OOPs) Concept in JavaArrayList in JavaHashMap in Java with ExamplesInitialize an ArrayList in JavaMultidimensional Arrays in JavaMore related articles in JavaHow to iterate any Map in JavaHow to add an element to an Array in Java?Overriding in JavaInterfaces in JavaLinkedList in Java× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register