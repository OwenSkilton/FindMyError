UGC NET CS Notes according to syllabus of Paper-III (Core group) - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲UGC NET CS Notes according to syllabus of Paper-III (Core group)Last Updated : 25 Nov, 2021This page contains UGC NET Computer Science Preparation Notes / Tutorials on Algorithms, Programming and Data Structures, Operating Systems, Database Management Systems (DBMS), Computer Networks, Computer Organization and Architecture, Theory of Computation, Compiler Design, Digital Logic, Software Engineering, Machine Learning, and Artificial Intelligence and Fuzzy logic listed according to Paper-III (Core group) of the UGC NET CS syllabus.UGC NET Syllabus (Paper-III)LearnPracticeExternal ResourcesSection 1: Data Structures and AlgorithmsDefinition, Simple and Composite structures,Arrays, Lists, Stacks queues, Priority queues.Binary trees, B – trees, Graphs.Sorting and Searching Algorithms, Analysis of Algorithms,Interpolation and Binary Search,Asymptotic notations-big ohm, omega and theta.Average case analysis of simple programslike finding of a maximum of n elements.Recursion and its systematic removal.Quicksort – Non – recursive implementationwith minimal stack storage.Design of Algorithms (Divide and Conquer,Greedy method, Dynamic programming, Back tracking,Branch and Bound).Lower bound theory,Non – deterministic algorithm,Non – deterministic programming constructs.Simple non-deterministic programs.NP – hard and NP – complete problems.Data Structures :ArrayStackQueueLinked ListBinary TreeBinary Search TreeHeap TreeGraph Data StructureAsymptotic Analysis of Algorithms :Analysis of Algorithms | Set 1 (Asymptotic Analysis)Analysis of Algorithms | Set 2 (Worst, Average and Best Cases)Analysis of Algorithms | Set 3 (Asymptotic Notations)Analysis of Algorithms | Set 4 (Analysis of Loops)Analysis of Algorithm | Set 5 (Amortized Analysis Introduction)Analysis of algorithms | little o and little omega notationsWhat does ‘Space Complexity’ mean?Articles | Analysis of AlgorithmsRecurrence Relations :Analysis of Algorithm | Set 4 (Solving Recurrences)Divide and Conquer :Divide and Conquer | Set 1 (Introduction)Binary SearchWhy is Binary Search preferred over Ternary Search?Merge SortMerge Sort for Linked ListsMerge Sort for Doubly Linked ListHow to make Mergesort to perform O(n) comparisons in best case?QuickSortIterative Quick SortQuickSort on Singly Linked ListQuickSort on Doubly Linked ListWhen does the worst case of Quicksort occur?Why Quick Sort preferred for Arrays and Merge Sort for Linked Lists?Write a program to calculate pow(x,n)Median of two sorted arrays of same sizeCount Inversions in an array | Set 1 (Using Merge Sort)Divide and Conquer | Set 2 (Closest Pair of Points)Divide and Conquer | Set 5 (Strassen’s Matrix Multiplication)Sort a nearly sorted (or K sorted) arraySearch in an almost sorted arrayK-th Element of Two Sorted ArraysK’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time)Searching and SortingGreedy Techniques :Greedy Algorithms | Set 1 (Activity Selection Problem)Job Sequencing Problem | Set 1 (Greedy Algorithm)Greedy Algorithms | Set 3 (Huffman Coding)Greedy Algorithms | Set 4 (Efficient Huffman Coding for Sorted Input)Greedy Algorithms | Set 2 (Kruskal’s Minimum Spanning Tree Algorithm)Greedy Algorithms | Set 5 (Prim’s Minimum Spanning Tree (MST))Greedy Algorithms | Set 6 (Prim’s MST for Adjacency List Representation)Applications of Minimum Spanning Tree ProblemGreedy Algorithms | Set 7 (Dijkstra’s shortest path algorithm)Greedy Algorithms | Set 8 (Dijkstra’s Algorithm for Adjacency List Representation)Greedy Algorithm to find Minimum number of CoinsStrongly Connected ComponentsGreedy AlgorithmsGraph Based Algorithms :Graph and its representationsBreadth First Search or BFS for a GraphDepth First Search or DFS for a GraphApplications of Depth First SearchDetect Cycle in a Directed GraphDisjoint Set (Or Union-Find) | Set 1 (Detect Cycle in an Undirected Graph)Detect cycle in an undirected graphTopological SortingLongest Path in a Directed Acyclic GraphDynamic Programming | Set 23 (Bellman–Ford Algorithm)Dynamic Programming | Set 16 (Floyd Warshall Algorithm)Shortest Path in Directed Acyclic GraphSome interesting shortest path questions | Set 1Shortest path with exactly k edges in a directed and weighted graphBiconnected ComponentsBiconnected graphArticulation Points (or Cut Vertices) in a GraphCheck if a graph is strongly connected | Set 1 (Kosaraju using DFS)Bridges in a graphTransitive closure of a graphGraph AlgorithmsDynamic Programming :Dynamic Programming | Set 1 (Overlapping Subproblems Property)Dynamic Programming | Set 2 (Optimal Substructure Property)Dynamic Programming | Set 4 (Longest Common Subsequence)Dynamic Programming | Set 8 (Matrix Chain Multiplication)Dynamic Programming | Set 10 ( 0-1 Knapsack Problem)Dynamic Programming | Set 6 (Min Cost Path)Dynamic Programming | Set 25 (Subset Sum Problem)Dynamic Programming | Set 23 (Bellman–Ford Algorithm)Dynamic Programming | Set 16 (Floyd Warshall Algorithm)Total number of non-decreasing numbers with n digitsVertex Cover Problem | Set 2 (Dynamic Programming Solution for Tree)Smallest power of 2 greater than or equal to nTravelling Salesman Problem | Set 1 (Naive and Dynamic Programming)Travelling Salesman Problem | Set 2 (Approximate using MST)Dynamic ProgrammingBack Tracking :Backtracking | IntroductionBacktracking | Set 1 (The Knight’s tour problem)Backtracking | Set 2 (Rat in a Maze)Backtracking | Set 3 (N Queen Problem)Backtracking | Set 4 (Subset Sum)Backtracking | Set 5 (m Coloring Problem)Backtracking | Set 6 (Hamiltonian Cycle)Backtracking | Set 7 (Sudoku)Backtracking | Set 8 (Solving Cryptarithmetic Puzzles)Backtracking | Set 9 (Magnet Puzzle)Partition of a set into K subsets with equal sumWrite a program to print all permutations of a given stringTug of WarWord Break Problem using BacktrackingPrint all palindromic partitions of a stringTop 20 Backtracking Algorithm Interview QuestionsBranch and Bound :Branch and Bound | Set 1 (Introduction with 0/1 Knapsack)Branch and Bound | Set 2 (Implementation of 0/1 Knapsack)Branch and Bound | Set 3 (8 puzzle Problem)Branch And Bound | Set 4 (Job Assignment Problem)Branch and Bound | Set 5 (N Queen Problem)Branch And Bound | Set 6 (Traveling Salesman Problem)Searching and Sorting :Linear SearchLinear Search vs Binary SearchSelection SortBubble SortInsertion SortHeap SortRadix SortCounting SortNon-deterministic Algorithms, NPC and NPH :NP-Completeness | Set 1 (Introduction)Proof that Hamiltonian Path is NP-CompleteData Structures :ArrayStackQueueLinked ListBinary TreesBinary Search TreesBalanced Binary Search TreesHeapTree TraversalsAsymptotic Analysis of Algorithms :Analysis of AlgorithmsRecurrence Relations :Analysis of Algorithms (Recurrences)Divide and Conquer :Divide and ConquerMergeSortGreedy Techniques :Greedy AlgorithmsGraph Shortest PathsGraph Minimum Spanning TreeGraph Based Algorithms :GraphGraph TraversalsDynamic Programming :Dynamic ProgrammingBack Tracking :BacktrackingBranch and Bound :Searching and Sorting :SearchingSortingNon-deterministic Algorithms, NPC and NPH :NP CompleteData Structures and Algorithms :Video – NPTEL lectures: Data StructureVideo – GeeksforGeeks VideosVideo – Lectures by Ravindrababu RavulaMIT – Introduction to AlgorithmsBook – CLRS Solutions ManualVisual – Data Structures and Algorithms.Notes – Big – O NotationNotes – Master TheoremNotes – Extended Master TheoremNotes – Master Theorem problems and answersSection 2: OOPs and Scripting LanguagesObject Oriented Programming and Design :Object, messages, classes, encapsulation,inheritance, polymorphism, aggregation, abstract classes,generalization as extension and restriction.Object oriented design.Multiple inheritance, metadata.Markup Languages :HTML, DHTML, XMLScripting, Java, Servelets, Applets.Object Oriented Programming and Design :Basic Concepts of Object Oriented Programming using C++Why C++ is partially Object Oriented Language?Why Java is not a purely Object-Oriented Language?Introduction to Object Oriented Programming in JavaScriptCommonly Asked OOP Interview Questions | Set 1Object Oriented Programming | Set 1Object Oriented Programming (OOP)Markup Languages :HTML | BasicsHTML | AttributesHTML | Subscript and Superscript TagsHTML | ParagraphHTML | Text FormattingHTML | QuotationsHTML | Style TagHTML | TablesHTML | SVG-BasicsHTML | Responsive Modal Login FormHTML | Class AttributeHTML | ListsHTML | Canvas BasicsHTML | IframesHTML | Responsive full page image using CSSHTML | CommentsHTML | LinksHTML5 | VideoHTML | ImagesHTML5 | AudioHTML | Adding Youtube videosHTML | HeadingHTML | Design FormHTML | ParagraphHTML | style attributeHTML | DoctypesHTML | Color Styles and HSLHTML | Object tagTAG ARCHIVES: HTMLXML | BasicsDisplaying XML Using CSSDisplaying XML Using XSLTDifference between Scripting and Programming LanguagesJava Programming LanguageIntroduction to Java ServletsServlet CollaborationDifference between Servlet and JSPJava Applet BasicsDraw a ellipse and a rectangle in Java AppletObject Oriented Programming and Design :OOP ConceptsClass and ObjectMarkup Languages :HTML and XMLQuizzes on Java LanguageJava Multiple Choice QuestionsOOPs and Scripting Languages :Section 3: Programming Languages Concepts and TOCProgramming Languages Concepts :Programming language concepts, paradigms and models.Data: Data types, Operators,Expressions, Assignment. Flow of Control.Control structures, I / O statements,User – defined and built – in functions, Parameter passing.Principles, classes, inheritance, class hierarchies,polymorphism, dynamic binding,reference semantics and their implementation.Principles, functions, lists,types and polymorphisms, higher order functions,lazy evaluation, equations and pattern matching.Principles, horn clauses and their execution,logical variables, relations, data structures,controlling the search order, program development in prolog,implementation of prolog, example programs in prolog.Principles of parallelism, coroutines,communication and execution.Parallel Virtual Machine (PVM) andMessage Passing Interface (MPI) routines and calls.Parallel programs in PVM paradigm as well asMPI paradigm for simple problems like matrix multiplication.Preconditions, post-conditions,axiomatic approach for semantics, correctness,denotational semantics.Theory of Computation :Finite Automata, Pushdown Automata.Non-determinism and NFA, DPDA, and PDAs andlanguages accepted by these structures.Grammars, Languages – types of grammars – type 0,type 1, type 2, and type 3.The relationship between types of grammars,and finite machines.Pushdown automata and Context Free Grammars.Lexical Analysis-regular expressions and regular languages.LEX package on Unix. Conversion of NFA to DFA.Minimizing the number of states in a DFA Compilationand Interpretation.Compiler Design :Compiler structure, compiler construction tools,compilation phases, Bootstrap compilers.Context free grammars. Parsing and parse trees.Representation of parse (derivation) treesas rightmost and leftmost derivations.Bottom up parsers-shift-reduce, operator precedence, and LR.YACC package on Unix system. Top down parsers-left recursionand its removal. Recursive descent parser. Predictive parserIntermediate codes – Quadruples, triples.Intermediate code generation, code generation. Code optimization.Programming Languages Concepts :Theory of Computation :Introduction of Theory of ComputationFinite Automata IntroductionChomsky HierarchyRegular Expressions, Regular Grammar and Regular LanguagesPumping LemmaDesigning Finite Automata from Regular ExpressionNFA with epsilon move to DFA ConversionConversion from NFA to DFAMinimization of DFARegular expression from finite automataUnion & Intersection of Regular languages with CFLMealy and Moore MachinesDFA of a string with at least two 0’s and at least two 1’sStar Height of Regular Expression/LanguagePushdown AutomataPushdown Automata Acceptance by Final StateConstruct Pushdown Automata for given languagesConstruct Pushdown Automata for all length palindromeClosure Properties of Context Free LanguagesAmbiguity in Context free Grammar and Context free LanguagesSimplifying Context Free GrammarsConverting Context Free Grammar to Chomsky Normal FormConverting Context Free Grammar to Greibach Normal FormRelationship between grammar and languageCompiler Design :Compiler vs InterpreterIntroduction of Compiler designPhases of a CompilerSymbol Table in CompilerError Handling in Compiler DesignError detection and Recovery in CompilerLexical AnalysisC program to detect tokens in a C programFlex (Fast Lexical Analyzer Generator)Classification of Context Free GrammarsAmbiguous GrammarWhy FIRST and FOLLOW?FIRST Set in Syntax AnalysisFOLLOW Set in Syntax AnalysisFirst and Follow sets of given grammarIntroduction to Syntax AnalysisParsing | Set 1Parsing | Set 2Parsing | Set 3Shift Reduce Parser in CompilerClassification of top down parsersOperator grammar and precedence parserSyntax Directed TranslationRuntime EnvironmentsIntermediate Code GenerationThree address code in CompilerCode OptimizationIntroduction of Object CodeData flow analysis in CompilerProgramming Languages Concepts :Theory of Computation :Regular languages and finite automataPractice problems on finite automataPractice problems on finite automata | Set 2Context free languages and Push-down automataAutomata Theory | Set 1Automata Theory | Set 2Automata Theory | Set 3Automata Theory | Set 4Automata Theory | Set 5Automata Theory | Set 6Compiler Design :MCQ on Memory allocation and compilation processLexical analysisParsing and Syntax directed translationCode Generation and OptimizationCompiler Theory | Set 1Compiler Theory | Set 2Programming Languages Concepts :Theory of Computation :Video – NPTEL TOC LecturesVideo – TOC Lectures by Ravindrababu RavulaNotes – NFA and DFANotes – Non Regular languageNotes – PDACompiler Design :Video – NPTEL LecturesVideo – Lectures by Ravindrababu RavulaNotes – Bivas Mitra IITgpNotes – LR ParsingNotes – Syntax Directed TranslationNotes – Intermediate Code GenerationSection 4: Operating SystemsIntroduction, Memory management,Support for concurrent process, Scheduling,System deadlock, Multiprogramming system,I/O management, Distributed operating systems,Study of Unix and Windows NT.Processes, threads, CPU scheduling :What happens when we turn on computer?Introduction of Operating SystemTypes of Operating SystemsDual Mode operations in OS32-bit and 64-bit operating systemsReal time systemsProcess Management | IntroductionStates of a processProcess Table and Process Control Block (PCB)Process SchedulerDifference between dispatcher and schedulerProcess Management | CPU SchedulingProgram for FCFS Scheduling | Set 1Program for FCFS Scheduling | Set 2 (Processes with different arrival times)Convoy Effect in Operating SystemsProgram for preemptive priority CPU schedulingProgram for Round Robin scheduling | Set 1Program for Shortest Job First (or SJF) scheduling | Set 1 (Non- preemptive)Program for Shortest Job First (SJF) scheduling | Set 2 (Preemptive)Shortest Job First scheduling with predicted burst timeHighest Response Ratio Next (HRRN) SchedulingProgram for Priority Scheduling | Set 1Priority Scheduling with different arrival time | Set 2Multilevel Queue SchedulingMultilevel Feedback Queue SchedulingMultiple-Processor SchedulingMeasure the time spent in context switchStarvation and Aging in Operating SystemsIntroduction of System CallOperating System | ThreadThreads and its typesMulti threading modelsBenefits of MultithreadingProcess-based and Thread-based MultitaskingUser Level thread Vs Kernel Level threadMicrokernelMonolithic Kernel and key differences from MicrokernelDifference between multitasking, multithreading and multiprocessingInterprocess communication, concurrency and synchronization :Process Synchronization | IntroductionCritical SectionInter Process CommunicationIPC using Message QueuesIPC through shared memorySemaphores in operating systemMutex vs SemaphoreLock variable synchronization mechanismPeterson’s Algorithm for Mutual Exclusion | Set 1 (Basic C implementation)Peterson’s Algorithm for Mutual Exclusion | Set 2 (CPU Cycles and Memory Fence)Peterson’s Algorithm (Using processes and shared memory)Readers-Writers Problem | Set 1 (Introduction and Readers Preference Solution)Reader-Writers solution using MonitorsProcess Synchronization | MonitorsDining-Philosophers Solution Using MonitorsDining Philosopher Problem Using SemaphoresDekker’s algorithmBakery AlgorithmPriority Inversion : What the heck !What’s difference between Priority Inversion and Priority Inheritance ?Deadlock :Process Management | Deadlock IntroductionDeadlock Prevention And AvoidanceDeadlock Detection And RecoveryResource Allocation Graph (RAG)Banker’s AlgorithmProgram for Banker’s Algorithm | Set 1 (Safety Algorithm)Banker’s Algorithm : Print all the safe stateDeadlock detection algorithmMain memory management :Mapping virtual address to physical addressesMemory Management |Partition Allocation MethodPagingPage Table EntriesInverted Page TableSegmentationProgram for First Fit algorithm in Memory ManagementProgram for Next Fit algorithm in Memory ManagementWorking with Shared Libraries | Set 1Static and Dynamic Libraries | Set 1Buddy SystemAllocating kernel memoryVirtual memory :Virtual MemorySecondary memory – Hard disk drivePage Fault HandlingPage Replacement AlgorithmsProgram for Optimal Page Replacement AlgorithmTechniques to handle ThrashingWhat exactly Spooling is all about?Overlays in Memory ManagementSwap SpaceI/O Management and Distributed OS :File SystemsFile Directory | Path NameFile Allocation MethodsDifference between FAT32, exFAT, and NTFS File SystemDisk Scheduling AlgorithmsCATEGORY ARCHIVES: OPERATING SYSTEMSLast Minute Notes – Operating SystemsStudy of Unix and Windows NT :Processes, threads, CPU scheduling :Process ManagementCPU SchedulingInter-process communication, concurrency and synchronization :Concurrency and synchronizationDeadlock :DeadlockMain memory management :Memory ManagementVirtual memory :Virtual Memory | QuestionsI/O Management and Distributed OS :Input Output SystemsStudy of Unix and Windows NT :UnixOperating Systems :Video – NPTEL LecturesVideo – Lectures by Ravindrababu RavulaNotes – VirginiaTech Univ. Web resourceNotes – Galvin Lecture SlidesBook – William Stallings Practice Problems and SolutionsNotes – Virtual Memory and CacheNotes – Segmentation and PagingNotes – Some Interesting problems on Virtual memorySection 5: Database Management SystemsDatabase Concepts, ER diagrams,Data Models, Design of Relational DatabaseNormalisation,SQL and QBE, Query Processing and Optimisation,Centralised and Distributed Database, Security,Concurrency and Recovery in Centralisedand Distributed Database SystemsObject Oriented Database Management Systems(Concepts, Composite objects, Integrationwith RDBMS applications), ORACLE.Introduction and ER model :Database Management System – Introduction | Set 1Database Management System Introduction | Set 2 (3-Tier Architecture)DBMS Architecture 2-Level, 3-LevelNeed for DBMSAdvantages of DBMS over File systemData Abstraction and Data IndependenceER ModelRecursive RelationshipsMinimization of ER DiagramEnhanced ER ModelMapping from ER Model to Relational ModelData Models and Relational Model :Relational ModelRelational Algebra – OverviewDBMS | Anomalies in Relational ModelRelational Model Introduction and Codd RulesKeys in Relational Model (Candidate, Super, Primary, Alternate and Foreign)Relational Algebra-Basic OperatorsRelational Algebra – Extended OperatorsDBMS | How to solve Relational Algebra problems for GATE -1DBMS | How to solve Relational Algebra problems for GATE -2Database design (integrity constraints, normal forms) :Database Normalization | IntroductionDatabase Normalization | Normal FormsFunctional Dependency and Attribute ClosureFinding Attribute Closure and Candidate Keys using Functional DependenciesNumber of possible SuperkeysLossless DecompositionDependency Preserving DecompositionLossless Join and Dependency Preserving DecompositionDBMS | How to find the highest normal form of a relationEquivalence of Functional DependenciesArmstrong’s Axioms in Functional DependencyCanonical CoverDenormalization in DatabasesConcurrency and Recovery :Concurrency Control -IntroductionDatabase Recovery TechniquesACID Properties in DBMSLog based recoveryTransaction Isolation Levels in DBMSConflict SerializabilityPrecedence Graph For Testing Conflict SerializabilityHow to test if two schedules are View Equal or not ?Recoverability of SchedulesDeadlock in DBMSStarvation in DBMSConcurrency Control Protocols | Lock Based ProtocolConcurrency Control Protocol | Two Phase Locking (2-PL)-IConcurrency Control Protocol | Two Phase Locking (2-PL)-IIConcurrency Control Protocol | Two Phase Locking (2-PL)-IIIConcurrency Control Protocol | Thomas Write RuleConcurrency Control Protocols | Timestamp Ordering ProtocolsConcurrency Control Protocol | Multiple Granularity LockingConcurrency Control Protocol | Graph Based ProtocolIntroduction to TimeStamp and Deadlock Prevention SchemesSQL and QBE :Structured Query Language (SQL)Inner VS Outer JoinHaving Vs Where ClauseDatabase ObjectsNested Queries in SQLSQL TutorialOracle :Introduction and ER model :ER and Relational ModelsDatabase Design (Normal Forms)Transactions and concurrency controlSQLDatabase Management Systems :Video – NPTEL LecturesNotes – Lecture Slides Silberschatz, Korth and SudarshanNotes – Lecture Slides Raghu Ramakrishnan and Johannes GehrkeNotes – Stanford DBMS course Lecture SlidesNotes – Jeff Ullman’s Lecture SlidesNotes – Canonical CoverSection 6: Computer Organization and MicroprocessorCombinational Circuit Design,Sequential Circuit DesignHardwired and Micro Programmed processor design,Instruction formats, Addressing modes,Memory types and organisation,Interfacing peripheral devices, InterruptsMicroprocessor architecture,Instruction set and Programming (8085, P – III / P – IV),Microprocessor applications.Combinational Circuit Design :Half AdderFull AdderHalf SubtractorFull SubtractorHalf Adder and Half Subtractor using NAND NOR gatesEncoders and DecodersEncoderBinary DecoderCombinational circuits using DecoderMultiplexersCarry Look-Ahead AdderParallel Adder & Parallel SubtractorBCD AdderMagnitude ComparatorBCD to 7 Segment DecoderProgrammable Logic ArrayProgramming Array LogicRead-Only Memory (ROM)Sequential Circuit Design :Introduction of Sequential CircuitsFlip-flop types and their ConversionSynchronous Sequential CircuitsCountersn-bit Johnson CounterRipple CounterDesign counter for given sequenceMaster Slave JK Flip FlopAsynchronous Sequential CircuitsShift RegistersDesign 101 sequence detectorAmortized analysis for increment in counterHardwired and Microprogrammed processor Design :Hardwired v/s Micro-programmed Control UnitInstruction Formats and Addressing Modes :Von Neumann architectureBasic Computer InstructionsInstruction Formats (Zero, One, Two and Three Address Instruction)Problem Solving on Instruction FormatAddressing ModesMachine InstructionsDifference between CALL and JUMP instructionsSimplified Instructional Computer (SIC)Flynn’s taxonomyGenerations of computerPipelining | Set 1 (Execution, Stages and Throughput)Pipelining | Set 2 (Dependencies and Data Hazard)Pipelining | Set 3 (Types and Stalling)Different Instruction CyclesMicro-OperationMemory organization and Interrupts :Cache MemoryCache Organization | IntroductionWhat’s difference between CPU Cache and TLB?Types of computer memory (RAM and ROM)Different Types of RAMI/O Interface (Interrupt and DMA Mode)Priority Interrupts | (S/W Polling and Daisy Chaining)Asynchronous input output synchronizationClusters In Computer OrganisationMicroprocessor and 8085 :Microprocessor TutorialsComputer Organization and Microprocessor :Digital LogicComputer Organization and ArchitectureMicroprocessorComputer Organization and Microprocessor :Video – NPTEL Lectures: Digital logicVideo – Lectures by Ravindrababu Ravula: Digital logicVideo – NPTEL Lectures: CONotes – PipeliningNotes – Cache MemoryNotes – Cache AssociativitySection 7: Data Transmission and Computer NetworksAnalog and Digital transmission,Asynchronous and Synchronous transmission,Transmission media, Multiplexing and Concentration,Switching techniques, Polling.Topologies, Networking Devices, OSI Reference Model,Protocols for – (i) Data link layer, (ii) Network layer,(iii) Transport layer, TCP / IP protocols,Networks security, Network administration.Type of Transmission and Media :Types of Transmission MediaData Communication | Transmission ImpairmentTransmission Modes in Computer Networks (Simplex, Half-Duplex and Full-Duplex)Switching Techniques and Polling :Switching techniques: Message switchingCircuit SwitchingPacket Switching and DelaysCircuit Switching VS Packet SwitchingIntroduction of Computer Network and OSI Model :Basics of Computer NetworkingNetwork TopologiesTypes of area networks – LAN, MAN and WANMANET: Mobile Ad hoc NetworkTypes of Transmission MediaTransmission Modes in Computer Networks (Simplex, Half-Duplex and Full-Duplex)Collision Domain and Broadcast DomainRedundant link problemsDigital Subscriber Line (DSL)What is Scrambling?Difference between Unipolar, Polar and Bipolar Line Coding SchemesAnalog to digital conversionDigital to Analog ConversionAnalog to Analog Conversion (Modulation)Difference between Broadband and Baseband TransmissionLet’s experiment with NetworkingLayers of OSI ModelTCP/IP ModelNetwork Devices (Hub, Repeater, Bridge, Switch, Router, Gateways and Brouter)Data Link Layer :Multiple Access ProtocolsP2P(Peer To Peer) File SharingFraming In Data Link LayerLAN Technologies | ETHERNETEthernet Frame FormatDifference between Byte stuffing and Bit stuffingHamming CodeCarrier sense multiple access (CSMA)Controlled Access ProtocolsBack-off Algorithm for CSMA/CDCollision Detection in CSMA/CDEfficiency of CSMA/CDEfficiency Of Token RingComputer Networks | Error DetectionStop and Wait ARQSliding Window Protocol | Set 1 (Sender Side)Sliding Window Protocol | Set 2 (Receiver Side)Sliding Window Protocol | Set 3 (Selective Repeat)Sliding Window protocols Summary With QuestionsProgram to remotely Power On a PC over the internet using the Wake-on-LAN protocolProgram to calculate the Round Trip Time (RTT)Introduction of MAC AddressCollision Avoidance in wireless networksMaximum data rate (channel capacity) for noiseless and noisy channelsNetwork Layer :InternetworkingLine Configuration in Computer NetworksDifference between Unicast, Broadcast and MulticastCollision Domain and Broadcast DomainIP Addressing | Introduction and Classful AddressingNetwork Layer | Introduction and IPv4 Datagram HeaderNetwork Layer | Ipv4 Datagram Fragmentation and DelaysFragmentation at Network LayerInternet Protocol v6 | IPv6Internet Protocol version 6 (IPv6) HeaderIP Addressing | Classless AddressingSupernettingComputer Networks | Longest Prefix Matching in RoutersProgram to determine class, Network and Host ID of an IPv4 addressC Program to find IP Address, Subnet Mask & Default GatewayNetwork address translation (NAT)Types of Network address translation (NAT)Classification of Routing Algorithms – Set 1Types of routing – Set 2Classes of routing protocols – Set 3Distance vector routing v/s Link state routingFixed and Flooding Routing algorithmsRouting v/s Routed ProtocolsUnicast Routing – Link State RoutingRouting Protocols Set 1 (Distance Vector Routing)Route Poisoning and Count to infinity problemOnion RoutingRouter on a stickInternet Control Message Protocol (ICMP) | Computer NetworksHot Standby Router Protocol (HSRP)OSPF protocol fundamentalsOSPF protocol StatesOSPF router roles and configurationRoot Bridge Election in Spanning Tree ProtocolTypes of Spanning Tree Protocol (STP)EIGRP fundamentalsFeatures of Enhanced Interior Gateway Routing Protocol (EIGRP)Routing Information Protocol (RIP)Link state advertisement (LSA)Administrative Distance (AD) and Autonomous System (AS)Circuit SwitchingPacket Switching and DelaysDifferences between Virtual Circuits & Datagram NetworksComputer Network | Circuit Switching VS Packet SwitchingTracerouteHow ARP works?ARP, Reverse ARP(RARP), Inverse ARP(InARP), Proxy ARP and Gratuitous ARPPacket flow in the same networkPacket flow in different networkWhat’s difference between Ping and Traceroute?Transport Layer :Transport Layer responsibilitiesCongestion ControlLeaky Bucket AlgorithmTCP Congestion ControlTCP 3-Way Handshake ProcessTCP Connection EstablishmentTCP Connection TerminationError Control in TCPTCP TimersUser Datagram Protocol (UDP)Multiplexing and Demultiplexing in Transport LayerNetwork Security :Basic Network AttacksTypes of VirusesIntroduction to FirewallDeniel of Service and PreventionDigital Signatures and CertificatesLZW (Lempel–Ziv–Welch) Compression techniqueRC4 Encryption AlgorithmRSA Algorithm in CryptographyRSA Algorithm using Multiple Precision Arithmetic LibraryWeak RSA decryption with Chinese-remainder theoremImplementation of Diffie-Hellman AlgorithmDNA CryptographyPort securityUnicodeMessage Authentication CodesHow message authentication code works?Hash Functions in System SecurityThe CIA triadImage SteganographyAccess-lists (ACL)Last Minute Notes – Computer NetworksData Transmission and Computer Networks :Computer NetworksData Link LayerNetwork LayerIP AddressingTransport LayerApplication LayerNetwork SecurityData Transmission and Computer Networks :Video – NPTEL LecturesVideo – Lectures by Ravindrababu RavulaNotes – Lecture Notes IIT KanpurNotes – Web Resources on Computer Networks by TanenbaumVisual – Sliding Window AnimationSection 8: Software EngineeringSoftware development models,Requirement analysis and specifications, Software designProgramming techniques and toolsSoftware validation and quality assurance techniquesSoftware maintenance and advanced concepts, Software management.Software Models :Classical Waterfall ModelIterative Waterfall ModelIncremental process modelPrototyping ModelCOCOMO ModelSpiral ModelRapid application development model (RAD)RAD Model vs Traditional SDLCRequirement Analysis and Specifications :Classification of Software RequirementsProject size estimation techniquesRequirements Engineering ProcessProgramming Techniques and Tools :Software Validation and QAT :Classification of SoftwareSoftware Testing | BasicsBlack box testingWhite box TestingRequirements ElicitationChallenges in eliciting requirementsCapability maturity model (CMM)DebuggingSoftware Maintenance and Management :Project Management ProcessSystem configuration managementSoftware Engineering :Software EngineeringSoftware Engineering :Section 9: Computer GraphicsDisplay systems, Input devices,2D Geometry, Graphic operations, 3D Graphics,Animation, Graphic standard, Applications.Concepts, Storage Devices,Input Tools, Authoring Tools, Application, Files.Display System and Input Devices :Vector vs Raster GraphicsSegments in Computer GraphicsA-Buffer MethodZ-Buffer or Depth-Buffer methodBack-Face Detection MethodGraphics Operations and 3D Graphics :2D Transformation in Computer Graphics | Set 1 (Scaling of Objects)2D Transformation | Rotation of objectsPoint Clipping Algorithm in Computer GraphicsLine Clipping | Set 1 (Cohen–Sutherland Algorithm)Polygon Clipping | Sutherland–Hodgman AlgorithmSnowflakes FractalKoch Curve or Koch SnowflakeKlee’s Algorithm (Length Of Union Of Segments of a line)Cubic Bezier CurveFractals in C/C++DDA Line generation Algorithm in Computer GraphicsBresenham’s Line Generation AlgorithmBresenham’s circle drawing algorithmNeighbors of a point on a circle using Bresenham’s algorithmBresenham’s Algorithm for 3-D Line DrawingMid-Point Line Generation AlgorithmProgram to find line passing through 2 PointsAnti-aliased Line | Xiaolin Wu’s algorithmMid-Point Circle Drawing AlgorithmBoundary Fill AlgorithmDraw a circle without floating point arithmeticChain Code for 2D LineStorage Devices and Tools :Computer Graphics :Computer Graphics :Section 10: Artificial IntelligenceDefinitions, AI approach for solving problems.Automated Reasoning with prepositional logicand predicate logic-fundamental proof procedure,refutation, resolution, refinements to resolution(ordering / pruning / restriction strategies).State space representation of problems,bounding functions, breadth first, depth first, A, A*, AO*, etc.Performance comparison of various search techniques.Frames, scripts, semantic nets, production systems,procedural representations. Prolog programming.Components of an expert system, Knowledge representationand Acquisition techniques, Building expert system and Shell.RTNs, ATNs, Parsing of Ambiguous CFGs.Tree Adjoining Grammars (TAGs).Systems approach to planning, Designing,Development, Implementation and Evaluation of MIS.Decision-making processes, evaluation of DSS,Group decision support system and case studies,Adaptive design approach to DSS development,Cognitive style in DSS,Integrating expert and Decision support systems.Artificial Intelligence :Getting started with Machine LearningArtificial Intelligence | An IntroductionMachine LearningAn introduction to Machine Learning | Set 2Introduction to Data in Machine LearningIntroduction to Deep LearningDemystifying Machine LearningMachine Learning – ApplicationsMachine Learning and Artificial IntelligenceDifference between Machine learning and Artificial IntelligenceAgents in Artificial IntelligenceTypes of Learning – Supervised LearningTypes of Learning – Part 2Supervised and Unsupervised learningReinforcement learningRegression and Classification | Supervised Machine LearningLogistic RegressionMultivariate RegressionConfusion Matrix in Machine LearningA single neuron neural networkClustering in Machine LearningDifferent Types of Clustering AlgorithmK means Clustering – IntroductionAnalysis of test data using K-Means ClusteringIntroduction to Artificial Neutral Networks | Set 1Introduction to Artificial Neural Network | Set 2Introduction to ANN (Artificial Neural Networks) | Set 3 (Hybrid Systems)Fuzzy Logic | IntroductionFuzzy Logic | Set 2 (Classical and Fuzzy Sets)Machine LearningFuzzy Logic and MiscArtificial Intelligence :Artificial Intelligence :Last Updated on : 26th July, 2018Other Useful Links :UGC NET CS Notes according to syllabus of Paper-IIPrevious years UGC NET CS solved papersArticles on Computer ScienceGATE CS Notes according to GATE 2019 syllabusPlease write comments if you find anything incorrect, or you want to share more information about the topic discussed above!My Personal Notes arrow_drop_upSaveLoad Comments× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register