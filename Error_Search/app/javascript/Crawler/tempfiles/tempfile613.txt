StringBuilder Class in Java with Examples - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesBasics of JavaJava TutorialIntroduction to JavaSimilarities and Difference between Java and C++Setting up the environment in JavaJava Basic SyntaxJava Hello World ProgramDifferences between JDK, JRE and JVMHow JVM Works – JVM Architecture?Java IdentifiersVariables & DataTypes in JavaVariables in JavaScope of Variables In JavaData types in JavaOperators in JavaOperators in JavaJava Arithmetic Operators with ExamplesJava Assignment Operators with ExamplesJava Unary Operator with ExamplesJava Relational Operators with ExamplesJava Logical Operators with ExamplesJava Ternary Operator with ExamplesBitwise Operators in JavaPackages in JavaPackages In JavaFlow Control in JavaDecision Making in Java (if, if-else, switch, break, continue, jump)Java if statement with ExamplesJava if-else statement with ExamplesJava if-else-if ladder with ExamplesLoops in JavaLoops in JavaJava For loop with ExamplesJava while loop with ExamplesJava do-while loop with ExamplesFor-each loop in JavaJump Statements in JavaContinue Statement in JavaBreak statement in Javareturn keyword in JavaArrays in JavaArrays in JavaMultidimensional Arrays in JavaJagged Array in JavaStrings in JavaStrings in JavaString class in Java | Set 1StringBuffer class in JavaStringBuilder Class in Java with ExamplesOOPS in JavaObject Oriented Programming (OOPs) Concept in JavaClasses and Objects in JavaMethods in JavaAccess Modifiers in JavaWrapper Classes in JavaNeed of Wrapper Classes in JavaConstructors in JavaConstructors in JavaCopy Constructor in JavaConstructor Chaining In Java with ExamplesPrivate Constructors and Singleton Classes in JavaInheritance & Polymorphism in JavaInheritance in JavaJava and Multiple InheritanceComparison of Inheritance in C++ and JavaPolymorphism in JavaDynamic Method Dispatch or Runtime Polymorphism in JavaMethod overloading & OveridingOverloading in JavaDifferent ways of Method Overloading in JavaOverriding in JavaDifference Between Method Overloading and Method Overriding in JavaAbstraction & EncapsulationAbstraction in JavaAbstract Classes in JavaDifference between Abstract Class and Interface in JavaEncapsulation in JavaInterfaces in JavaInterfaces in JavaNested Interface in JavaMarker interface in JavaFunctional Interfaces in JavaComparator Interface in Java with ExamplesKeywords in JavaList of all Java KeywordsSuper Keyword in Javafinal Keyword in Javaabstract keyword in javastatic Keyword in Java‘this’ reference in Javaenum in JavaException Handling in JavaExceptions in JavaTypes of Exception in Java with ExamplesChecked vs Unchecked Exceptions in JavaTry, catch, throw and throws in JavaFlow control in try catch finally in Javathrow and throws in JavaUser-defined Custom Exception in JavaCollection FrameworkCollections in JavaCollections Class in JavaList Interface in Java with ExamplesArrayList in JavaVector Class in JavaStack Class in JavaLinkedList in JavaQueue Interface In JavaPriorityQueue in JavaDeque interface in Java with ExampleArrayDeque in JavaSet in JavaHashSet in JavaLinkedHashSet in Java with ExamplesSortedSet Interface in Java with ExamplesNavigableSet in Java with ExamplesTreeSet in JavaMap Interface in JavaHashMap in Java with ExamplesHashtable in JavaLinkedHashMap in JavaSortedMap Interface in Java with ExamplesTreeMap in JavaMulti-threading in JavaMultithreading in JavaLifecycle and States of a Thread in JavaMain thread in JavaJava Thread Priority in MultithreadingThread Pools in JavaSynchronization in JavaMethod and Block Synchronization in JavaImportance of Thread Synchronization in JavaThread Safety and how to achieve it in JavaTable of ContentsBasics of JavaJava TutorialIntroduction to JavaSimilarities and Difference between Java and C++Setting up the environment in JavaJava Basic SyntaxJava Hello World ProgramDifferences between JDK, JRE and JVMHow JVM Works – JVM Architecture?Java IdentifiersVariables & DataTypes in JavaVariables in JavaScope of Variables In JavaData types in JavaOperators in JavaOperators in JavaJava Arithmetic Operators with ExamplesJava Assignment Operators with ExamplesJava Unary Operator with ExamplesJava Relational Operators with ExamplesJava Logical Operators with ExamplesJava Ternary Operator with ExamplesBitwise Operators in JavaPackages in JavaPackages In JavaFlow Control in JavaDecision Making in Java (if, if-else, switch, break, continue, jump)Java if statement with ExamplesJava if-else statement with ExamplesJava if-else-if ladder with ExamplesLoops in JavaLoops in JavaJava For loop with ExamplesJava while loop with ExamplesJava do-while loop with ExamplesFor-each loop in JavaJump Statements in JavaContinue Statement in JavaBreak statement in Javareturn keyword in JavaArrays in JavaArrays in JavaMultidimensional Arrays in JavaJagged Array in JavaStrings in JavaStrings in JavaString class in Java | Set 1StringBuffer class in JavaStringBuilder Class in Java with ExamplesOOPS in JavaObject Oriented Programming (OOPs) Concept in JavaClasses and Objects in JavaMethods in JavaAccess Modifiers in JavaWrapper Classes in JavaNeed of Wrapper Classes in JavaConstructors in JavaConstructors in JavaCopy Constructor in JavaConstructor Chaining In Java with ExamplesPrivate Constructors and Singleton Classes in JavaInheritance & Polymorphism in JavaInheritance in JavaJava and Multiple InheritanceComparison of Inheritance in C++ and JavaPolymorphism in JavaDynamic Method Dispatch or Runtime Polymorphism in JavaMethod overloading & OveridingOverloading in JavaDifferent ways of Method Overloading in JavaOverriding in JavaDifference Between Method Overloading and Method Overriding in JavaAbstraction & EncapsulationAbstraction in JavaAbstract Classes in JavaDifference between Abstract Class and Interface in JavaEncapsulation in JavaInterfaces in JavaInterfaces in JavaNested Interface in JavaMarker interface in JavaFunctional Interfaces in JavaComparator Interface in Java with ExamplesKeywords in JavaList of all Java KeywordsSuper Keyword in Javafinal Keyword in Javaabstract keyword in javastatic Keyword in Java‘this’ reference in Javaenum in JavaException Handling in JavaExceptions in JavaTypes of Exception in Java with ExamplesChecked vs Unchecked Exceptions in JavaTry, catch, throw and throws in JavaFlow control in try catch finally in Javathrow and throws in JavaUser-defined Custom Exception in JavaCollection FrameworkCollections in JavaCollections Class in JavaList Interface in Java with ExamplesArrayList in JavaVector Class in JavaStack Class in JavaLinkedList in JavaQueue Interface In JavaPriorityQueue in JavaDeque interface in Java with ExampleArrayDeque in JavaSet in JavaHashSet in JavaLinkedHashSet in Java with ExamplesSortedSet Interface in Java with ExamplesNavigableSet in Java with ExamplesTreeSet in JavaMap Interface in JavaHashMap in Java with ExamplesHashtable in JavaLinkedHashMap in JavaSortedMap Interface in Java with ExamplesTreeMap in JavaMulti-threading in JavaMultithreading in JavaLifecycle and States of a Thread in JavaMain thread in JavaJava Thread Priority in MultithreadingThread Pools in JavaSynchronization in JavaMethod and Block Synchronization in JavaImportance of Thread Synchronization in JavaThread Safety and how to achieve it in JavaImprove Article Save Article Like Article StringBuilder Class in Java with ExamplesDifficulty Level : EasyLast Updated : 18 Nov, 2021The StringBuilder in Java represents a mutable sequence of characters. Since the String Class in Java creates an immutable sequence of characters, the StringBuilder class provides an alternative to String Class, as it creates a mutable sequence of characters. The function of StringBuilder is very much similar to the StringBuffer class, as both of them provide an alternative to String Class by making a mutable sequence of characters. However the StringBuilder class differs from the StringBuffer class on the basis of synchronization. The StringBuilder class provides no guarantee of synchronization whereas the StringBuffer class does. Therefore this class is designed for use as a drop-in replacement for StringBuffer in places where the StringBuffer was being used by a single thread (as is generally the case). Where possible, it is recommended that this class be used in preference to StringBuffer as it will be faster under most implementations. Instances of StringBuilder are not safe for use by multiple threads. If such synchronization is required then it is recommended that StringBuffer be used.Class Hierarchy: java.lang.Object ↳ java.lang ↳ Class StringBuilderSyntax: public final class StringBuilder extends Object implements Serializable, CharSequenceConstructors in Java StringBuilder: StringBuilder(): Constructs a string builder with no characters in it and an initial capacity of 16 characters. StringBuilder(int capacity): Constructs a string builder with no characters in it and an initial capacity specified by the capacity argument. StringBuilder(CharSequence seq): Constructs a string builder that contains the same characters as the specified CharSequence. StringBuilder(String str): Constructs a string builder initialized to the contents of the specified string. Below is a sample program to illustrate StringBuilder in Java: Java// Java code to illustrate StringBuilder import java.util.*;import java.util.concurrent.LinkedBlockingQueue; public class GFG1 { public static void main(String[] argv) throws Exception { // create a StringBuilder object // using StringBuilder() constructor StringBuilder str = new StringBuilder(); str.append("GFG"); // print string System.out.println("String = " + str.toString()); // create a StringBuilder object // using StringBuilder(CharSequence) constructor StringBuilder str1 = new StringBuilder("AAAABBBCCCC"); // print string System.out.println("String1 = " + str1.toString()); // create a StringBuilder object // using StringBuilder(capacity) constructor StringBuilder str2 = new StringBuilder(10); // print string System.out.println("String2 capacity = " + str2.capacity()); // create a StringBuilder object // using StringBuilder(String) constructor StringBuilder str3 = new StringBuilder(str1.toString()); // print string System.out.println("String3 = " + str3.toString()); }}Output: String = GFG String1 = AAAABBBCCCC String2 capacity = 10 String3 = AAAABBBCCCC Methods in Java StringBuilder: StringBuilder append(X x): This method appends the string representation of the X type argument to the sequence. StringBuilder appendCodePoint(int codePoint): This method appends the string representation of the codePoint argument to this sequence. int capacity(): This method returns the current capacity. char charAt(int index): This method returns the char value in this sequence at the specified index. IntStream chars(): This method returns a stream of int zero-extending the char values from this sequence. int codePointAt(int index): This method returns the character (Unicode code point) at the specified index. int codePointBefore(int index): This method returns the character (Unicode code point) before the specified index. int codePointCount(int beginIndex, int endIndex): This method returns the number of Unicode code points in the specified text range of this sequence. IntStream codePoints(): This method returns a stream of code point values from this sequence. StringBuilder delete(int start, int end): This method removes the characters in a substring of this sequence. StringBuilder deleteCharAt(int index): This method removes the char at the specified position in this sequence. void ensureCapacity(int minimumCapacity): This method ensures that the capacity is at least equal to the specified minimum. void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin): This method characters are copied from this sequence into the destination character array dst. int indexOf(): This method returns the index within this string of the first occurrence of the specified substring. StringBuilder insert(int offset, boolean b): This method inserts the string representation of the booalternatelean argument into this sequence. StringBuilder insert(): This method inserts the string representation of the char argument into this sequence. int lastIndexOf(): This method returns the index within this string of the last occurrence of the specified substring. int length(): This method returns the length (character count). int offsetByCodePoints(int index, int codePointOffset): This method returns the index within this sequence that is offset from the given index by codePointOffset code points. StringBuilder replace(int start, int end, String str): This method replaces the characters in a substring of this sequence with characters in the specified String. StringBuilder reverse(): This method causes this character sequence to be replaced by the reverse of the sequence. void setCharAt(int index, char ch): In this method, the character at the specified index is set to ch. void setLength(int newLength): This method sets the length of the character sequence. CharSequence subSequence(int start, int end): This method returns a new character sequence that is a subsequence of this sequence. String substring(): This method returns a new String that contains a subsequence of characters currently contained in this character sequence. String toString(): This method returns a string representing the data in this sequence. void trimToSize(): This method attempts to reduce storage used for the character sequence. Example: Java// Java code to illustrate// methods of StringBuilder import java.util.*;import java.util.concurrent.LinkedBlockingQueue; public class GFG1 { public static void main(String[] argv) throws Exception { // create a StringBuilder object // with a String pass as parameter StringBuilder str = new StringBuilder("AAAABBBCCCC"); // print string System.out.println("String = " + str.toString()); // reverse the string StringBuilder reverseStr = str.reverse(); // print string System.out.println("Reverse String = " + reverseStr.toString()); // Append ', '(44) to the String str.appendCodePoint(44); // Print the modified String System.out.println("Modified StringBuilder = " + str); // get capacity int capacity = str.capacity(); // print the result System.out.println("StringBuilder = " + str); System.out.println("Capacity of StringBuilder = " + capacity); }}Output: String = AAAABBBCCCC Reverse String = CCCCBBBAAAA Modified StringBuilder = CCCCBBBAAAA, StringBuilder = CCCCBBBAAAA, Capacity of StringBuilder = 27 Reference: https://docs.oracle.com/javase/9/docs/api/java/lang/StringBuilder.html Attention reader! Don’t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikePreviousStringBuffer class in JavaNext Object Oriented Programming (OOPs) Concept in JavaRecommended ArticlesPage :StringBuilder charAt() in Java with Examples15, Oct 18StringBuilder codePointAt() in Java with Examples15, Oct 18StringBuilder append() Method in Java With Examples23, Jul 18StringBuilder delete() in Java with Examples15, Oct 18StringBuilder codePointCount() in Java with Examples15, Oct 18StringBuilder capacity() in Java with Examples15, Oct 18StringBuilder codePointBefore() in Java with Examples15, Oct 18StringBuilder deleteCharAt() in Java with Examples15, Oct 18StringBuilder ensureCapacity() in Java with Examples15, Oct 18StringBuilder getChars() in Java with Examples15, Oct 18StringBuilder length() in Java with Examples15, Oct 18StringBuilder offsetByCodePoints() method in Java with Examples16, Oct 18StringBuilder replace() in Java with Examples18, Oct 18StringBuilder setCharAt() in Java with Examples18, Oct 18StringBuilder reverse() in Java with Examples18, Oct 18StringBuilder setLength() in Java with Examples19, Oct 18StringBuilder subSequence() in Java with Examples19, Oct 18StringBuilder substring() method in Java with examples22, Oct 18StringBuilder toString() method in Java with Examples22, Oct 18StringBuilder trimToSize() method in Java with Examples22, Oct 18StringBuilder lastIndexOf() method in Java with Examples22, Oct 18StringBuilder indexOf() method in Java with Examples22, Oct 18Matcher appendTail(StringBuilder) method in Java with Examples27, Nov 18Matcher appendReplacement(StringBuilder, String) method in Java with Examples27, Nov 18Article Contributed By :RishabhPrabhu@RishabhPrabhuVote for difficultyCurrent difficulty : EasyEasy Normal Medium Hard ExpertImproved By :BryanBarrowssandellfamily2013prachisoda1234Article Tags :Java-Class and ObjectJava-lang packageJava-StringBuilderJavaPractice Tags :Java-Class and ObjectJavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesReverse a string in JavaInitialize an ArrayList in JavaHow to iterate any Map in JavaMore related articles in JavaHow to add an element to an Array in Java?Singleton Class in JavaMath pow() method in Java with ExampleInitializing a List in JavaJava Programming Examples× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register