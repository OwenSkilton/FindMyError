Java.util.Dictionary Class in Java - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles â–²Related ArticlesJava.util.Dictionary Class in JavaHashtable in JavaInteresting facts about null in JavaUsing _ (underscore) as Variable Name in JavaCurrying Functions in Java with ExamplesUsing underscore in Numeric Literals in JavaBinary Search in JavaSorting in JavaArrays.sort() in Java with examplesCollections.sort() in Java with ExamplesComparator Interface in Java with ExamplesComparable vs Comparator in JavaDifferences between TreeMap, HashMap and LinkedHashMap in JavaDifferences between HashMap and HashTable in JavaImplementing our Own Hash Table with Separate Chaining in JavaHashing | Set 2 (Separate Chaining)Hashing | Set 3 (Open Addressing)Double HashingLoad Factor and RehashingCheck if a given Binary Tree is SumTreeCheck sum of Covered and Uncovered nodes of Binary TreeCheck if two nodes are cousins in a Binary TreeCheck if two nodes are cousins in a Binary Tree | Set-2Check if all leaves are at same levelCheck if removing an edge can divide a Binary Tree in two halvesArrays in JavaSplit() String method in Java with examplesFor-each loop in JavaReverse a string in JavaTable of ContentsJava.util.Dictionary Class in JavaHashtable in JavaInteresting facts about null in JavaUsing _ (underscore) as Variable Name in JavaCurrying Functions in Java with ExamplesUsing underscore in Numeric Literals in JavaBinary Search in JavaSorting in JavaArrays.sort() in Java with examplesCollections.sort() in Java with ExamplesComparator Interface in Java with ExamplesComparable vs Comparator in JavaDifferences between TreeMap, HashMap and LinkedHashMap in JavaDifferences between HashMap and HashTable in JavaImplementing our Own Hash Table with Separate Chaining in JavaHashing | Set 2 (Separate Chaining)Hashing | Set 3 (Open Addressing)Double HashingLoad Factor and RehashingCheck if a given Binary Tree is SumTreeCheck sum of Covered and Uncovered nodes of Binary TreeCheck if two nodes are cousins in a Binary TreeCheck if two nodes are cousins in a Binary Tree | Set-2Check if all leaves are at same levelCheck if removing an edge can divide a Binary Tree in two halvesArrays in JavaSplit() String method in Java with examplesFor-each loop in JavaReverse a string in JavaImprove Article Save Article Like Article Java.util.Dictionary Class in JavaDifficulty Level : MediumLast Updated : 07 Dec, 2021util.Dictionary is an abstract class, representing a key-value relation and works similar to a map. Given a key you can store values and when needed can retrieve the value back using its key. Thus, it is a list of key-value pair. Declaration public abstract class Dictionary extends ObjectConstructors: Dictionary() Sole constructor. Methods of util.Dictionary Class : 1. put(K key, V value) : java.util.Dictionary.put(K key, V value) adds key-value pair to the dictionary.Syntax :public abstract V put(K key, V value) Parameters : -> key -> value Return : key-value pair mapped in the dictionary2. elements() : java.util.Dictionary.elements() returns value representation in dictionary.Syntax :public abstract Enumeration elements() Parameters : -------- Return : value enumeration in dictionary3. get(Object key) : java.util.Dictionary.get(Object key) returns the value that is mapped with the argumented key in the dictionary.Syntax :public abstract V get(Object key) Parameters : key - key whose mapped value we want Return : value mapped with the argumented key4. isEmpty() : java.util.Dictionary.isEmpty() checks whether the dictionary is empty or not. Syntax :public abstract boolean isEmpty() Parameters : ------ Return : true, if there is no key-value relation in the dictionary; else false5. keys() : java.util.Dictionary.keys() returns key representation in dictionary.Syntax :public abstract Enumeration keys() Parameters : -------- Return : key enumeration in dictionary6. remove(Object key) : java.util.Dictionary.remove(Object key) removes the key-value pair mapped with the argumented key. Syntax :public abstract V remove(Object key) Parameters : key : key to be removed Return : value mapped with the key7. size() : java.util.Dictionary.size() returns the no. of key-value pairs in the Dictionary.Syntax :public abstract int size() Parameters : ------- Return : returns the no. of key-value pairs in the DictionaryJava// Java Program explaining util.Dictionary class Methods// put(), elements(), get(), isEmpty(), keys()// remove(), size() import java.util.*;public class New_Class{ public static void main(String[] args) { // Initializing a Dictionary Dictionary geek = new Hashtable(); // put() method geek.put("123", "Code"); geek.put("456", "Program"); // elements() method : for (Enumeration i = geek.elements(); i.hasMoreElements();) { System.out.println("Value in Dictionary : " + i.nextElement()); } // get() method : System.out.println("\nValue at key = 6 : " + geek.get("6")); System.out.println("Value at key = 456 : " + geek.get("123")); // isEmpty() method : System.out.println("\nThere is no key-value pair : " + geek.isEmpty() + "\n"); // keys() method : for (Enumeration k = geek.keys(); k.hasMoreElements();) { System.out.println("Keys in Dictionary : " + k.nextElement()); } // remove() method : System.out.println("\nRemove : " + geek.remove("123")); System.out.println("Check the value of removed key : " + geek.get("123")); System.out.println("\nSize of Dictionary : " + geek.size()); }}Output: Value in Dictionary : Code Value in Dictionary : Program Value at key = 6 : null Value at key = 456 : Code There is no key-value pair : false Keys in Dictionary : 123 Keys in Dictionary : 456 Remove : Code Check the value of removed key : null Size of Dictionary : 1This article is contributed by Mohit Gupta_OMG ðŸ˜€. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. Attention reader! Donâ€™t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikeNext Hashtable in JavaRecommended ArticlesPage :Java.lang.Class class in Java | Set 130, Mar 17Java.lang.Class class in Java | Set 203, Apr 17Implement Pair Class with Unit Class in Java using JavaTuples20, Sep 18Implement Triplet Class with Pair Class in Java using JavaTuples20, Sep 18Implement Quintet Class with Quartet Class in Java using JavaTuples20, Sep 18Implement Quartet Class with Triplet Class in Java using JavaTuples20, Sep 18Implement Octet Class from Septet Class in Java using JavaTuples24, Sep 18Implement Ennead Class from Octet Class in Java using JavaTuples24, Sep 18Implement Sextet Class from Quintet Class in Java using JavaTuples24, Sep 18Implement Septet Class from Sextet Class in Java using JavaTuples24, Sep 18Implement Decade Class from Ennead Class in Java using JavaTuples24, Sep 18Difference between Abstract Class and Concrete Class in Java11, Jan 19In Java, Can we call the main() method of a class from another class?28, Nov 19Java Program to Check if a Given Class is a Local Inner Class16, Nov 20Java Program to Check if a Given Class is an Anonymous Class16, Nov 20Java Program to Check if a Given Class is an Inner Class14, Dec 20Using predefined class name as Class or Variable name in Java26, May 17Java.util.TimeZone Class (Set-2) | Example On TimeZone Class25, Apr 18Java Program to Illustrate the Availability of Default Constructor of the Super Class to the Sub Class by Default05, Dec 20Does JVM create object of Main class (the class with main())?06, Apr 16Inner Class And Anonymous Inner Class that Implements Runnable | Concurrent Programming Approach 308, Apr 19Java.util.BitSet class methods in Java with Examples | Set 218, Nov 16Java.Lang.Float class in Java27, Mar 17Java.io.BufferedInputStream class in Java20, Jan 17Article Contributed By :GeeksforGeeksVote for difficultyCurrent difficulty : MediumEasy Normal Medium Hard ExpertImproved By :simmytarika5Article Tags :Java - util packageJavaPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in JavaObject Oriented Programming (OOPs) Concept in JavaArrayList in JavaHashMap in Java with ExamplesMultidimensional Arrays in JavaInitialize an ArrayList in JavaMore related articles in JavaHow to iterate any Map in JavaHow to add an element to an Array in Java?Overriding in JavaLinkedList in JavaInterfaces in JavaÃ— 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register