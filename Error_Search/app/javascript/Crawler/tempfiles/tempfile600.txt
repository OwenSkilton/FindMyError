Interfaces and Inheritance in Java - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesInterfaces and Inheritance in JavaUsing final with Inheritance in JavaAccessing Grandparent’s member in Java using superCan we override private methods in Java?More restrictive access to a derived class method in JavaParent and Child classes having same data member in JavaObject Serialization with Inheritance in JavaReferencing Subclass objects with Subclass vs Superclass referenceDifferent ways to create objects in JavaHow to swap or exchange objects in Java?Inheritance in JavaEncapsulation in JavaAbstraction in JavaDynamic Method Dispatch or Runtime Polymorphism in JavaAssociation, Composition and Aggregation in JavaAccess and Non Access Modifiers in JavaAccess Modifiers in Java‘this’ reference in JavaOverloading in JavaOverriding in JavaObject Oriented Programming (OOPs) Concept in JavaPolymorphism in JavaDifference between Compile-time and Run-time Polymorphism in JavaFunction Overloading vs Function Overriding in C++Function Overloading in C++Arrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesFor-each loop in JavaReverse a string in JavaTable of ContentsInterfaces and Inheritance in JavaUsing final with Inheritance in JavaAccessing Grandparent’s member in Java using superCan we override private methods in Java?More restrictive access to a derived class method in JavaParent and Child classes having same data member in JavaObject Serialization with Inheritance in JavaReferencing Subclass objects with Subclass vs Superclass referenceDifferent ways to create objects in JavaHow to swap or exchange objects in Java?Inheritance in JavaEncapsulation in JavaAbstraction in JavaDynamic Method Dispatch or Runtime Polymorphism in JavaAssociation, Composition and Aggregation in JavaAccess and Non Access Modifiers in JavaAccess Modifiers in Java‘this’ reference in JavaOverloading in JavaOverriding in JavaObject Oriented Programming (OOPs) Concept in JavaPolymorphism in JavaDifference between Compile-time and Run-time Polymorphism in JavaFunction Overloading vs Function Overriding in C++Function Overloading in C++Arrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesFor-each loop in JavaReverse a string in JavaImprove Article Save Article Like Article Interfaces and Inheritance in JavaDifficulty Level : EasyLast Updated : 28 Jun, 2021Prerequisites: Interfaces in Java, Java and Multiple InheritanceA class can extends another class and/ can implement one and more than one interface.// Java program to demonstrate that a class can// implement multiple interfacesimport java.io.*;interface intfA{ void m1();} interface intfB{ void m2();} // class implements both interfaces// and provides implementation to the method.class sample implements intfA, intfB{ @Override public void m1() { System.out.println("Welcome: inside the method m1"); } @Override public void m2() { System.out.println("Welcome: inside the method m2"); }} class GFG{ public static void main (String[] args) { sample ob1 = new sample(); // calling the method implemented // within the class. ob1.m1(); ob1.m2(); }}Output;Welcome: inside the method m1 Welcome: inside the method m2 Interface inheritance : An Interface can extend other interface.// Java program to demonstrate inheritance in // interfaces.import java.io.*;interface intfA{ void geekName();} interface intfB extends intfA{ void geekInstitute();} // class implements both interfaces and provides// implementation to the method.class sample implements intfB{ @Override public void geekName() { System.out.println("Rohit"); } @Override public void geekInstitute() { System.out.println("JIIT"); } public static void main (String[] args) { sample ob1 = new sample(); // calling the method implemented // within the class. ob1.geekName(); ob1.geekInstitute(); }}Output:Rohit JIIT An interface can also extend multiple interfaces.// Java program to demonstrate multiple inheritance // in interfacesimport java.io.*;interface intfA{ void geekName();} interface intfB { void geekInstitute();} interface intfC extends intfA, intfB { void geekBranch();} // class implements both interfaces and provides// implementation to the method.class sample implements intfC{ public void geekName() { System.out.println("Rohit"); } public void geekInstitute() { System.out.println("JIIT"); } public void geekBranch() { System.out.println("CSE"); } public static void main (String[] args) { sample ob1 = new sample(); // calling the method implemented // within the class. ob1.geekName(); ob1.geekInstitute(); ob1.geekBranch(); }}Output:Rohit JIIT CSE Why Multiple Inheritance is not supported through a class in Java, but it can be possible through the interface?Multiple Inheritance is not supported by class because of ambiguity. In case of interface, there is no ambiguity because implementation to the method(s) is provided by the implementing class up to Java 7. From Java 8, interfaces also have implementations of methods. So if a class implementing two or more interfaces having the same method signature with implementation, it is mandated to implement the method in class also. Refer Java and Multiple Inheritance for details.This article is contributed by Nitsdheerendra. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.Attention reader! Don’t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikeNext Using final with Inheritance in JavaRecommended ArticlesPage :Generic Constructors and Interfaces in Java27, Jan 21Interfaces and Polymorphism in Java27, Jul 21Access specifiers for classes or interfaces in Java27, Jan 11Interfaces in Java03, Dec 12Interfaces in Java18, May 16Callback using Interfaces in Java19, Apr 18Private Methods in Java 9 Interfaces26, Apr 18Why Java Interfaces Cannot Have Constructor But Abstract Classes Can Have?30, Aug 20Which Java Types Can Implement Interfaces?01, Sep 21Types of Interfaces in Java22, Oct 21Functional Interfaces in Java10, Aug 16Match Lambdas to Interfaces in Java20, Sep 21Access specifier of methods in interfaces29, Dec 10Two interfaces with same methods having same signature but different return types28, Sep 17How to Create Interfaces in Android Studio?22, Nov 20Inheritance and constructors in Java21, Dec 10Difference between Inheritance and Composition in Java22, Jan 20Difference between Inheritance and Interface in Java20, Jun 20Illustrate Class Loading and Static Blocks in Java Inheritance18, Jan 21Comparison of Inheritance in C++ and Java17, Nov 11Java and Multiple Inheritance29, Aug 16Inheritance in Java23, Mar 17Java | Inheritance | Question 124, Nov 13Java | Inheritance | Question 224, Nov 13Article Contributed By :GeeksforGeeksVote for difficultyCurrent difficulty : EasyEasy Normal Medium Hard ExpertImproved By :DeepsDArticle Tags :java-inheritanceJavaPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in JavaArrayList in JavaHashMap in Java with ExamplesMultidimensional Arrays in JavaInitialize an ArrayList in JavaHow to iterate any Map in JavaMore related articles in JavaHow to add an element to an Array in Java?LinkedList in JavaInterfaces in JavaStack Class in JavaCollections in Java× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register