Differences between Interface and Class in Java - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesJava.io.PushbackInputStream class in JavaJava.io.PushbackReader Class in JavaDifferences between Interface and Class in Javastatic Keyword in Javafinal Keyword in Javafinal, finally and finalize in Javaabstract keyword in javaAbstract Classes in JavaDifference between Abstract Class and Interface in JavaInterfaces in JavaAccess specifier of methods in interfacesAccess specifiers for classes or interfaces in JavaClasses and Objects in JavaHow are Java objects stored in memory?Different ways to create objects in JavaHow to swap or exchange objects in Java?Inheritance in JavaEncapsulation in JavaAbstraction in JavaDynamic Method Dispatch or Runtime Polymorphism in JavaAssociation, Composition and Aggregation in JavaAccess and Non Access Modifiers in JavaAccess Modifiers in Java‘this’ reference in JavaOverloading in JavaDifference Between == and .equals() Method in JavaDifference between BFS and DFSClass method vs Static method in PythonDifference between Intel and AMDDifferences between Black Box Testing vs White Box TestingTable of ContentsJava.io.PushbackInputStream class in JavaJava.io.PushbackReader Class in JavaDifferences between Interface and Class in Javastatic Keyword in Javafinal Keyword in Javafinal, finally and finalize in Javaabstract keyword in javaAbstract Classes in JavaDifference between Abstract Class and Interface in JavaInterfaces in JavaAccess specifier of methods in interfacesAccess specifiers for classes or interfaces in JavaClasses and Objects in JavaHow are Java objects stored in memory?Different ways to create objects in JavaHow to swap or exchange objects in Java?Inheritance in JavaEncapsulation in JavaAbstraction in JavaDynamic Method Dispatch or Runtime Polymorphism in JavaAssociation, Composition and Aggregation in JavaAccess and Non Access Modifiers in JavaAccess Modifiers in Java‘this’ reference in JavaOverloading in JavaDifference Between == and .equals() Method in JavaDifference between BFS and DFSClass method vs Static method in PythonDifference between Intel and AMDDifferences between Black Box Testing vs White Box TestingImprove Article Save Article Like Article Differences between Interface and Class in JavaDifficulty Level : EasyLast Updated : 13 Jul, 2021This article highlights the differences between a class and an interface in Java. They seem syntactically similar, both containing methods and variables, but they are different in many aspects.Class:A class is a user-defined blueprint or prototype from which objects are created. It represents the set of properties or methods that are common to all objects of one type. In general, class declarations can include these components, in order: Modifiers : A class can be public or has default access (Refer this for details).Class name: The name should begin with a initial letter (capitalized by convention).Superclass(if any): The name of the class’s parent (superclass), if any, preceded by the keyword extends. A class can only extend (subclass) one parent.Interfaces(if any): A comma-separated list of interfaces implemented by the class, if any, preceded by the keyword implements. A class can implement more than one interface.Body: The class body surrounded by braces, { }.Constructors are used for initializing new objects. Fields are variables that provides the state of the class and its objects, and methods are used to implement the behavior of the class and its objects.Example: Java// Java program to demonstrate Class // Class Declarationpublic class Dog { // Instance Variables String name; String breed; int age; String color; // Constructor Declaration of Class public Dog(String name, String breed, int age, String color) { this.name = name; this.breed = breed; this.age = age; this.color = color; } // method 1 public String getName() { return name; } // method 2 public String getBreed() { return breed; } // method 3 public int getAge() { return age; } // method 4 public String getColor() { return color; } @Override public String toString() { return ("Hi my name is " + this.getName() + ".\nMy breed, age and color are " + this.getBreed() + ", " + this.getAge() + ", " + this.getColor()); } public static void main(String[] args) { Dog tuffy = new Dog("tuffy", "papillon", 5, "white"); System.out.println(tuffy.toString()); }}Output: Hi my name is tuffy. My breed, age and color are papillon, 5, white Interface: Like a class, an interface can have methods and variables, but the methods declared in interface are by default abstract (only method signature, no body). Interfaces specify what a class must do and not how. It is the blueprint of the class.An Interface is about capabilities like a Player may be an interface and any class implementing Player must be able to (or must implement) move(). So it specifies a set of methods that the class has to implement.If a class implements an interface and does not provide method bodies for all functions specified in the interface, then class must be declared abstract.A Java library example is, Comparator Interface. If a class implements this interface, then it can be used to sort a collection.Syntax : interface <interface_name> { // declare constant fields // declare methods that abstract // by default. }Example: Java// Java program to demonstrate// working of interface. import java.io.*; // A simple interfaceinterface in1 { // public, static and final final int a = 10; // public and abstract void display();} // A class that implements the interface.class testClass implements in1 { // Implementing the capabilities of // interface. public void display() { System.out.println("Geek"); } // Driver Code public static void main(String[] args) { testClass t = new testClass(); t.display(); System.out.println(a); }}Output: Geek 10 Differences between a Class and an Interface: ClassInterfaceThe keyword used to create a class is “class”The keyword used to create an interface is “interface”A class can be instantiated i.e, objects of a class can be created.An Interface cannot be instantiated i.e, objects cannot be created.Classes does not support multiple inheritance.Interface supports multiple inheritance.It can be inherit another class.It cannot inherit a class.It can be inherited by another class using the keyword ‘extends’.It can be inherited by a class by using the keyword ‘implements’ and it can be inherited by an interface using the keyword ‘extends’.It can contain constructors.It cannot contain constructors.It cannot contain abstract methods.It contains abstract methods only.Variables and methods in a class can be declared using any access specifier(public, private, default, protected)All variables and methods in a interface are declared as public.Variables in a class can be static, final or neither.All variables are static and final. Attention reader! Don’t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikePreviousJava.io.PushbackReader Class in JavaNext static Keyword in JavaRecommended ArticlesPage :Differences between Interface and Integration Testing08, May 19Difference between Abstract Class and Interface in Java28, Oct 15Differences between ES6 class and ES5 function constructors27, Jul 21Controlling the Visibility of Class and Interface in Java19, Feb 21How to Fix "class, interface, or enum expected" Error in Java with Examples?27, Jan 21Implement Interface using Abstract Class in Java08, Feb 21Difference between Inheritance and Interface in Java20, Jun 20Differences between TreeMap, HashMap and LinkedHashMap in Java20, May 17Differences between wait() and join() methods in Java09, Nov 18What are the main differences between the Java platform and other platforms?07, Aug 19Differences between Dynamic Binding and Message Passing in Java15, Jan 20Differences between HashMap and HashTable in Java20, Aug 15Java 8 | Consumer Interface in Java with Examples24, Sep 18Java 8 | BiConsumer Interface in Java with Examples24, Sep 18Java 8 | DoubleToIntFunction Interface in Java with Example28, Sep 18Java 8 | IntToDoubleFunction Interface in Java with Examples28, Sep 18Java 8 | DoubleToLongFunction Interface in Java with Examples28, Sep 18Java.util.function.BiPredicate interface in Java with Examples18, Jul 19Java.util.function.DoublePredicate interface in Java with Examples18, Jul 19Java.util.function.LongPredicate interface in Java with Examples18, Jul 19Java.util.function.IntPredicate interface in Java with Examples18, Jul 19java.net.FileNameMap Interface in Java27, Nov 21Similarities and Differences between Ruby and C language15, Jan 19Similarities and Differences between Ruby and C++15, Jan 19Article Contributed By :deepthisenthil@deepthisenthilVote for difficultyCurrent difficulty : EasyEasy Normal Medium Hard ExpertImproved By :saurabh1990arorArticle Tags :Java-Classesjava-interfacesDifference BetweenJavaPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in Difference BetweenDifference between DDL and DML in DBMSDifferences between TCP and UDPWeb 1.0, Web 2.0 and Web 3.0 with their differenceDifference between C and C++Stack vs Heap Memory AllocationMost visited in JavaArrays in JavaObject Oriented Programming (OOPs) Concept in JavaSplit() String method in Java with examplesFor-each loop in JavaArrays.sort() in Java with examples× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register