Java: String is Immutable. What exactly is the meaning? - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesTreeMap subMap() Method in Java with ExamplesSortedMap subMap() method in JavaArrayBlockingQueue peek() Method in JavaJava: String is Immutable. What exactly is the meaning?How to create Immutable class in Java?Constructor Chaining In Java with ExamplesPrivate Constructors and Singleton Classes in JavaJava Interview Questions on ConstructorsSingleton Class in JavaJava Singleton Design Pattern Practices with ExamplesHow to prevent Singleton Pattern from Reflection, Serialization and Cloning?Decorator Pattern | Set 1 (Background)The Decorator Pattern | Set 2 (Introduction and Design)Decorator Pattern | Set 3 (Coding the Design)Strategy Pattern | Set 1 (Introduction)Strategy Pattern | Set 2 (Implementation)Adapter PatternCommand PatternIterator PatternImplementing Iterator pattern of a single Linked ListMove all occurrences of an element to end in a linked listRemove all occurrences of duplicates from a sorted Linked ListArrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesFor-each loop in JavaReverse a string in JavaHow to iterate any Map in JavaObject Oriented Programming (OOPs) Concept in JavaHashMap in Java with ExamplesTable of ContentsTreeMap subMap() Method in Java with ExamplesSortedMap subMap() method in JavaArrayBlockingQueue peek() Method in JavaJava: String is Immutable. What exactly is the meaning?How to create Immutable class in Java?Constructor Chaining In Java with ExamplesPrivate Constructors and Singleton Classes in JavaJava Interview Questions on ConstructorsSingleton Class in JavaJava Singleton Design Pattern Practices with ExamplesHow to prevent Singleton Pattern from Reflection, Serialization and Cloning?Decorator Pattern | Set 1 (Background)The Decorator Pattern | Set 2 (Introduction and Design)Decorator Pattern | Set 3 (Coding the Design)Strategy Pattern | Set 1 (Introduction)Strategy Pattern | Set 2 (Implementation)Adapter PatternCommand PatternIterator PatternImplementing Iterator pattern of a single Linked ListMove all occurrences of an element to end in a linked listRemove all occurrences of duplicates from a sorted Linked ListArrays in JavaSplit() String method in Java with examplesArrays.sort() in Java with examplesFor-each loop in JavaReverse a string in JavaHow to iterate any Map in JavaObject Oriented Programming (OOPs) Concept in JavaHashMap in Java with ExamplesImprove Article Save Article Like Article Java: String is Immutable. What exactly is the meaning?Difficulty Level : EasyLast Updated : 11 Dec, 2018Before proceeding further with the fuss of immutability, let’s just take a look into the String class and its functionality a little before coming to any conclusion.This is how String works:String str = "knowledge"; This, as usual, creates a string containing "knowledge" and assigns it a reference str. Simple enough? Lets perform some more functions:// assigns a new reference to the // same string "knowledge" String s = str; Let’s see how the below statement works: str = str.concat(" base"); This appends a string " base" to str. But wait, how is this possible, since String objects are immutable? Well to your surprise, it is.When the above statement is executed, the VM takes the value of String str, i.e. "knowledge" and appends " base", giving us the value "knowledge base". Now, since Strings are immutable, the VM can’t assign this value to str, so it creates a new String object, gives it a value "knowledge base", and gives it a reference str.An important point to note here is that, while the String object is immutable, its reference variable is not. So that’s why, in the above example, the reference was made to refer to a newly formed String object.At this point in the example above, we have two String objects: the first one we created with value "knowledge", pointed to by s, and the second one "knowledge base", pointed to by str. But, technically, we have three String objects, the third one being the literal "base" in the concat statement.Important Facts about String and Memory usageWhat if we didn’t have another reference s to "knowledge"? We would have lost that String. However, it still would have existed, but would be considered lost due to having no references.Look at one more example below/*package whatever // do not write package name here */ import java.io.*; class GFG { public static void main(String[] args) { String s1 = "java"; s1.concat(" rules"); // Yes, s1 still refers to "java" System.out.println("s1 refers to " + s1); }}Output:s1 refers to java What’s happening:The first line is pretty straightforward: create a new String "java" and refer s1 to it.Next, the VM creates another new String "java rules", but nothing refers to it. So, the second String is instantly lost. We can’t reach it.The reference variable s1 still refers to the original String "java".Almost every method, applied to a String object in order to modify it, creates new String object. So, where do these String objects go? Well, these exist in memory, and one of the key goals of any programming language is to make efficient use of memory.As applications grow, it’s very common for String literals to occupy large area of memory, which can even cause redundancy. So, in order to make Java more efficient, the JVM sets aside a special area of memory called the “String constant pool“.When the compiler sees a String literal, it looks for the String in the pool. If a match is found, the reference to the new literal is directed to the existing String and no new String object is created. The existing String simply has one more reference. Here comes the point of making String objects immutable:In the String constant pool, a String object is likely to have one or many references. If several references point to same String without even knowing it, it would be bad if one of the references modified that String value. That’s why String objects are immutable.Well, now you could say, what if someone overrides the functionality of String class? That’s the reason that the String class is marked final so that nobody can override the behavior of its methods.My Personal Notes arrow_drop_upSave LikePreviousArrayBlockingQueue peek() Method in JavaNext How to create Immutable class in Java?Recommended ArticlesPage :Factory method to create Immutable List in Java SE 912, Jul 17Factory method to create Immutable Set in Java 912, Jul 17Factory method to create immutable Map in Java 913, Jul 17Immutable List in Java10, Aug 18Immutable Map in Java10, Aug 18Collecting a Stream to an Immutable Collection in Java25, May 21Using Guava's Collectors for Collecting Streams to Immutable Collections in Java25, May 21Immutable Set in Java09, Aug 18Primitive Wrapper Classes are Immutable in Java10, Mar 16How to create Immutable class in Java?14, Aug 16Lexicographically smallest string whose hamming distance from given string is exactly K17, Oct 17Construct a string that has exactly K subsequences from given string10, Jul 20Smallest String consisting of a String S exactly K times as a Substring12, Aug 20String which when repeated exactly K times gives a permutation of S29, Nov 18Generate a string of size N whose each substring of size M has exactly K distinct characters21, Apr 20Check if the string contains consecutive letters and each letter occurs exactly once03, Apr 19Find if string is K-Palindrome or not using all characters exactly once24, Apr 20Remove characters from a String that appears exactly K times05, Apr 20Find the String having each substring with exactly K distinct characters26, Apr 20Make the string lexicographically smallest and non palindromic by replacing exactly one character12, May 20Lexicographically smallest string which differs from given strings at exactly K indices20, Jun 20Count ways to partition a Binary String such that each substring contains exactly two 0s13, Jan 21Count different Bitwise OR values of equal length strings S1 and S2 by swapping exactly one pair of characters from the first string27, Jun 21Kth character after replacing each character of String by its frequency exactly X times05, Jul 21Article Contributed By :vaibhav shukla 5@vaibhav shukla 5Vote for difficultyCurrent difficulty : EasyEasy Normal Medium Hard ExpertArticle Tags :java-basicsjava-JVMJava-String-ProgramsJava-StringsJavaStringsPractice Tags :Java-StringsStringsJavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsJava FoundationView DetailsComplete Interview PreparationView DetailsMost popular in JavaArrayList in JavaMultidimensional Arrays in JavaInitialize an ArrayList in JavaHow to add an element to an Array in Java?Overriding in JavaMost visited in StringsWrite a program to reverse an array or stringC++ Data TypesWrite a program to print all permutations of a given stringPython program to check if a string is palindrome or notCheck for Balanced Brackets in an expression (well-formedness) using Stack× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register