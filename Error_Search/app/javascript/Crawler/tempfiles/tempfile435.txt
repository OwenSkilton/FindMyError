Static methods vs Instance methods in Java - GeeksforGeeksSkip to content TutorialsPractice DS & Algo.Must Do QuestionsDSA Topic-wiseDSA Company-wiseAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesISRO CSISRO CS Solved PapersISRO CS Original Papers and Official KeysISRO CS Syllabus for Scientist/Engineer ExamUGC NET CSUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsGeek on the TopCareersInternshipJobsApply for JobsPost a JobCourses WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus Mantri HomeSaved VideosCoursesGBlogPuzzlesWhat's New ? Change Language Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningWeb DevelopmentPuzzlesProject IdeasGFG School Related Articles ▲Related ArticlesIs main method compulsory in Java?Understanding “static” in “public static void main” in JavaValid variants of main() in JavaReplacing ‘public’ with ‘private’ in “main” in JavaStatic Block and main() method in JavaGFact 48 | Overloading main() in JavaStatic methods vs Instance methods in Javaenum in JavaScope of Variables In JavaCan we override private methods in Java?Private and final methods in JavaMethods in JavaParameter Passing Techniques in Java with ExamplesJava is Strictly Pass by Value!How are parameters passed in Java?Method overloading and null error in JavaCan we Overload or Override static methods in java ?Access specifier of methods in interfacesUnderstanding public static void main(String[] args) in JavaTable of ContentsIs main method compulsory in Java?Understanding “static” in “public static void main” in JavaValid variants of main() in JavaReplacing ‘public’ with ‘private’ in “main” in JavaStatic Block and main() method in JavaGFact 48 | Overloading main() in JavaStatic methods vs Instance methods in Javaenum in JavaScope of Variables In JavaCan we override private methods in Java?Private and final methods in JavaMethods in JavaParameter Passing Techniques in Java with ExamplesJava is Strictly Pass by Value!How are parameters passed in Java?Method overloading and null error in JavaCan we Overload or Override static methods in java ?Access specifier of methods in interfacesUnderstanding public static void main(String[] args) in JavaImprove Article Save Article Like Article Static methods vs Instance methods in JavaDifficulty Level : MediumLast Updated : 28 Jun, 2021Instance MethodInstance method are methods which require an object of its class to be created before it can be called. To invoke a instance method, we have to create an Object of the class in within which it defined. public void geek(String name) { // code to be executed.... } // Return type can be int, float String or user defined data type.Memory allocation: These methods themselves are stored in Permanent Generation space of heap but the parameters (arguments passed to them) and their local variables and the value to be returned are allocated in stack. They can be called within the same class in which they reside or from the different classes defined either in the same package or other packages depend on the access type provided to the desired instance method.Important Points: Instance method(s) belong to the Object of the class, not to the class i.e. they can be called after creating the Object of the class.Instance methods are not stored on a per-instance basis, even with virtual methods. They’re stored in a single memory location, and they only “know” which object they belong to because this pointer is passed when you call them.They can be overridden since they are resolved using dynamic binding at run time.Below is the implementation of accessing the instance method:Java// Example to illustrate accessing the instance method .import java.io.*; class Foo { String name = ""; // Instance method to be called within the // same class or from a another class defined // in the same package or in different package. public void geek(String name) { this.name = name; }} class GFG { public static void main(String[] args) { // create an instance of the class. Foo ob = new Foo(); // calling an instance method in the class 'Foo'. ob.geek("GeeksforGeeks"); System.out.println(ob.name); }}OutputGeeksforGeeks Static MethodStatic methods are the methods in Java that can be called without creating an object of class. They are referenced by the class name itself or reference to the Object of that class. public static void geek(String name) { // code to be executed.... } // Must have static modifier in their declaration. // Return type can be int, float, String or user defined data type.Memory Allocation: They are stored in the Permanent Generation space of heap as they are associated with the class in which they reside not to the objects of that class. But their local variables and the passed argument(s) to them are stored in the stack. Since they belong to the class, so they can be called to without creating the object of the class.Important Points: Static method(s) are associated with the class in which they reside i.e. they are called without creating an instance of the class i.e ClassName.methodName(args).They are designed with the aim to be shared among all objects created from the same class.Static methods can not be overridden, since they are resolved using static binding by the compiler at compile time. However, we can have the same name methods declared static in both superclass and subclass, but it will be called Method Hiding as the derived class method will hide the base class method.Below is the illustration of accessing the static methods: Java// Example to illustrate Accessing// the Static method(s) of the class.import java.io.*; class Geek { public static String geekName = ""; public static void geek(String name) { geekName = name; }} class GFG { public static void main(String[] args) { // Accessing the static method geek() // and field by class name itself. Geek.geek("vaibhav"); System.out.println(Geek.geekName); // Accessing the static method geek() // by using Object's reference. Geek obj = new Geek(); obj.geek("mohit"); System.out.println(obj.geekName); }}Outputvaibhav mohitNote: Static variables and their values (primitives or references) defined in the class are stored in PermGen space of memory. What if static variable refers to an Object? static int i = 1; static Object obj = new Object();In the first line, the value 1 would be stored in PermGen section. In second line, the reference obj would be stored in PermGen section and the Object it refers to would be stored in heap section.When to use static methods? When you have code that can be shared across all instances of the same class, put that portion of code into static method.They are basically used to access static field(s) of the class.Instance method vs Static methodInstance method can access the instance methods and instance variables directly.Instance method can access static variables and static methods directly.Static methods can access the static variables and static methods directly.Static methods can’t access instance methods and instance variables directly. They must use reference to object. And static method can’t use this keyword as there is no instance for ‘this’ to refer to.References https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.htmlStackoverflowThis article is contributed by Nitsdheerendra. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to review-team@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. Attention reader! Don’t stop learning now. Get hold of all the important Java Foundation and Collections concepts with the Fundamentals of Java and Java Collections Course at a student-friendly price and become industry ready. To complete your preparation from learning a language to DS Algo and many more, please refer Complete Interview Preparation Course.My Personal Notes arrow_drop_upSave LikePreviousGFact 48 | Overloading main() in JavaNext enum in JavaRecommended ArticlesPage :How to Check the Accessibility of the Static and Non-Static Variables by a Static Method?02, Jan 21Understanding storage of static methods and static variables in Java16, May 20Java Program to Check the Accessibility of an Instance variable by a Static Method18, Jan 21Static and non static blank final variables in Java08, Nov 17Understanding "static" in "public static void main" in Java10, Sep 18Difference between static and non-static method in Java01, Apr 19Difference between static and non-static variables in Java03, Apr 19Why non-static variable cannot be referenced from a static method in Java26, Jun 20Class Loading and Static Blocks Execution Using Static Modifier in Java02, Dec 20Difference Between Static and Non Static Nested Class in Java26, Jan 21Java Program to Check the Accessibility of an Static Variable By a Static Method09, Apr 21Access Super Class Methods and Instance Variables Without super Keyword in Java17, Nov 20Instance Methods in Java09, Nov 21Can we Overload or Override static methods in java ?23, Jun 13Why can't static methods be abstract in Java?20, Nov 19Instance Variable Hiding in Java10, Apr 16Instance Initialization Block (IIB) in Java20, Apr 17Instance variable as final in Java21, Sep 17Using Instance Blocks in Java28, Aug 21How to Use Enum, Constructor, Instance Variable & Method in Java?01, Feb 21How to Execute Instance Initialization Block (IIB) without Creating Object in Java?26, Nov 21Instance Control Flow in Java14, Dec 20How to Implement On Saved Instance State in Android?24, Dec 21Shadowing of static functions in Java09, Dec 10Article Contributed By :GeeksforGeeksVote for difficultyCurrent difficulty : MediumEasy Normal Medium Hard ExpertImproved By :temnurtanyasingh27Article Tags :JavaPractice Tags :JavaReport IssueWriting code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsComplete Interview PreparationView DetailsSystem Design-Live Classes for Working ProfessionalsView DetailsMost popular in JavaArrays in JavaObject Oriented Programming (OOPs) Concept in JavaSplit() String method in Java with examplesFor-each loop in JavaArrays.sort() in Java with examplesMore related articles in JavaReverse a string in JavaArrayList in JavaHashMap in Java with ExamplesInitialize an ArrayList in JavaMultidimensional Arrays in Java× 5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.orgCompanyAbout UsCareersPrivacy PolicyContact UsCopyright PolicyLearnAlgorithmsData StructuresLanguagesCS SubjectsVideo TutorialsWeb DevelopmentWeb TutorialsHTMLCSSJavaScriptBootstrapContributeWrite an ArticleWrite Interview ExperienceInternshipsVideos@geeksforgeeks , Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Start Your Coding Journey Now!Login Register